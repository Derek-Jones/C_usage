#ifndef _TYPEINFO_
#define _TYPEINFO_

#include <exception>

namespace std {
   class type_info {
   public:
      virtual ~type_info();
      bool operator==(const type_info& rhs) const;
      bool operator!=(const type_info& rhs) const;
      bool before(const type_info& rhs) const;
      const char* name() const;
   private:
      type_info(const type_info& rhs);
      type_info& operator=(const type_info& rhs);      
   };
   class bad_cast : public exception {
   public:
      bad_cast() throw();
      bad_cast(const bad_cast&) throw();
      bad_cast&
      operator=(const bad_cast&) throw();
      virtual ~bad_cast() throw();
      virtual const char*
      what() const throw();
   };
   class bad_typeid : public exception {
   public:
      bad_typeid() throw();
      bad_typeid(const bad_typeid&) throw();
      bad_typeid&
      operator=(const bad_typeid&) throw();
      virtual ~bad_typeid() throw();
      virtual const char*
      what() const throw();
   };
}
#endif
