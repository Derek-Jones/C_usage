Terminals unused in grammar

   PLUS
   NEGATE
   STAR
   AND
   DUMMY1
   POSTPLUSPLUS
   POSTMINUSMINUS
   DUMMY2
   TYPEDEFNAME
   UNDEFINED


State 0 conflicts: 2 shift/reduce
State 39 conflicts: 3 reduce/reduce
State 48 conflicts: 3 reduce/reduce
State 75 conflicts: 1 shift/reduce
State 114 conflicts: 5 reduce/reduce
State 129 conflicts: 1 shift/reduce
State 186 conflicts: 1 shift/reduce
State 203 conflicts: 1 shift/reduce
State 282 conflicts: 1 shift/reduce
State 287 conflicts: 1 shift/reduce
State 302 conflicts: 1 shift/reduce
State 321 conflicts: 1 shift/reduce


Grammar

    0 $accept: TU $end

    1 TU: translation_unit

    2 translation_unit: external_declaration
    3                 | statement

    4 primary_expr: IDENTIFIER
    5             | CONSTANT
    6             | string_seq
    7             | OPEN_RND expression CLOSE_RND

    8 string_seq: STRING_LITERAL
    9           | string_seq STRING_LITERAL
   10           | string_seq IDENTIFIER
   11           | string_seq IDENTIFIER OPEN_RND constant_expr CLOSE_RND

   12 argument_expr_list_opt: /* empty */
   13                       | argument_expr_list

   14 postfix_expr: primary_expr
   15             | postfix_expr OPEN_SQUARE expression CLOSE_SQUARE
   16             | postfix_expr OPEN_RND argument_expr_list_opt CLOSE_RND
   17             | postfix_expr DOT IDENTIFIER
   18             | postfix_expr DEREF IDENTIFIER
   19             | postfix_expr PLUSPLUS
   20             | postfix_expr MINUSMINUS
   21             | OPEN_RND type_name CLOSE_RND OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND type_name CLOSE_RND OPEN_CURL initializer_list COMMA CLOSE_CURL

   23 argument_expr_list: assignment_expr
   24                   | argument_expr_list COMMA assignment_expr

   25 unary_expr: postfix_expr
   26           | PLUSPLUS unary_expr
   27           | MINUSMINUS unary_expr
   28           | unary_operator cast_expr
   29           | SIZEOF unary_expr
   30           | SIZEOF OPEN_RND type_name CLOSE_RND

   31 unary_operator: BITAND
   32               | TIMES
   33               | ADD
   34               | MINUS
   35               | BITNEGATE
   36               | NOT

   37 cast_expr: unary_expr
   38          | OPEN_RND type_name CLOSE_RND cast_expr

   39 multiplicative_expr: cast_expr
   40                    | multiplicative_expr TIMES cast_expr
   41                    | multiplicative_expr DIVIDE cast_expr
   42                    | multiplicative_expr REMAINDER cast_expr

   43 additive_expr: multiplicative_expr
   44              | additive_expr ADD multiplicative_expr
   45              | additive_expr MINUS multiplicative_expr

   46 shift_expr: additive_expr
   47           | shift_expr LEFTSHIFT additive_expr
   48           | shift_expr RIGHTSHIFT additive_expr

   49 relational_expr: shift_expr
   50                | relational_expr LT shift_expr
   51                | relational_expr GT shift_expr
   52                | relational_expr LE shift_expr
   53                | relational_expr GE shift_expr

   54 equality_expr: relational_expr
   55              | equality_expr EQUAL relational_expr
   56              | equality_expr NOTEQUAL relational_expr

   57 AND_expr: equality_expr
   58         | AND_expr BITAND equality_expr

   59 exclusive_OR_expr: AND_expr
   60                  | exclusive_OR_expr XOR AND_expr

   61 inclusive_OR_expr: exclusive_OR_expr
   62                  | inclusive_OR_expr OR exclusive_OR_expr

   63 logical_AND_expr: inclusive_OR_expr
   64                 | logical_AND_expr ANDTEST inclusive_OR_expr

   65 logical_OR_expr: logical_AND_expr
   66                | logical_OR_expr ORTEST logical_AND_expr

   67 conditional_expr: logical_OR_expr
   68                 | logical_OR_expr QUESTION expression COLON conditional_expr

   69 assignment_expr: conditional_expr
   70                | unary_expr assignment_operator assignment_expr

   71 assignment_operator: ASSIGN
   72                    | TIMESASSIGN
   73                    | DIVASSIGN
   74                    | REMASSIGN
   75                    | PLUSASSIGN
   76                    | MINUSASSIGN
   77                    | LSASSIGN
   78                    | RSASSIGN
   79                    | ANDASSIGN
   80                    | ORASSIGN
   81                    | XORASSIGN

   82 expression: assignment_expr
   83           | expression COMMA assignment_expr

   84 constant_expr: conditional_expr

   85 declaration: declaration_specifiers SEMICOLON
   86            | declaration_specifiers init_declarator_list SEMICOLON

   87 decl_specifier: storage_class_specifier
   88               | type_specifier
   89               | type_qualifier
   90               | function_specifier

   91 declaration_specifiers: decl_specifier
   92                       | declaration_specifiers decl_specifier

   93 init_declarator_list: init_declarator
   94                     | init_declarator_list COMMA init_declarator

   95 init_declarator: declarator
   96                | declarator ASSIGN initializer

   97 storage_class_specifier: TYPEDEF
   98                        | EXTERN
   99                        | STATIC
  100                        | AUTO
  101                        | REGISTER

  102 type_specifier: VOID
  103               | CHAR
  104               | SHORT
  105               | INT
  106               | LONG
  107               | FLOAT
  108               | DOUBLE
  109               | SIGNED
  110               | UNSIGNED
  111               | _BOOL
  112               | _COMPLEX
  113               | _IMAGINARY
  114               | struct_or_union_specifier
  115               | enum_specifier
  116               | typedef_name

  117 identifier_opt: /* empty */
  118               | IDENTIFIER

  119 struct_or_union_specifier: struct_or_union identifier_opt OPEN_CURL struct_declaration_list CLOSE_CURL
  120                          | struct_or_union IDENTIFIER

  121 struct_or_union: STRUCT
  122                | UNION

  123 struct_declaration_list: struct_declaration
  124                        | struct_declaration_list struct_declaration

  125 struct_declaration: specifier_qualifier_list struct_declarator_list SEMICOLON

  126 spec_qual: type_specifier
  127          | type_qualifier

  128 specifier_qualifier_list: spec_qual
  129                         | specifier_qualifier_list spec_qual

  130 struct_declarator_list: struct_declarator
  131                       | struct_declarator_list COMMA struct_declarator

  132 struct_declarator: declarator
  133                  | COLON constant_expr

  134 enum_specifier: ENUM identifier_opt OPEN_CURL enumerator_list CLOSE_CURL
  135               | ENUM identifier_opt OPEN_CURL enumerator_list COMMA CLOSE_CURL
  136               | ENUM IDENTIFIER

  137 enumerator_list: enumerator
  138                | enumerator_list COMMA enumerator

  139 enumerator: IDENTIFIER
  140           | IDENTIFIER ASSIGN constant_expr

  141 type_qualifier: CONST
  142               | RESTRICT
  143               | VOLATILE

  144 function_specifier: INLINE

  145 pointer_opt: /* empty */
  146            | pointer

  147 declarator: pointer_opt direct_declarator

  148 fndef_declarator: pointer_opt fndef_direct_declarator

  149 type_qualifier_list_opt: /* empty */
  150                        | type_qualifier_list

  151 assignment_expr_opt: /* empty */
  152                    | assignment_expr

  153 direct_declarator: IDENTIFIER
  154                  | OPEN_RND declarator CLOSE_RND
  155                  | direct_declarator OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE
  156                  | direct_declarator OPEN_SQUARE type_qualifier_list STATIC assignment_expr CLOSE_SQUARE
  157                  | direct_declarator OPEN_SQUARE type_qualifier_list_opt TIMES CLOSE_SQUARE
  158                  | fndef_direct_declarator

  159 fndef_direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE
  160                        | direct_declarator OPEN_RND parameter_type_list CLOSE_RND
  161                        | direct_declarator OPEN_RND OPEN_RND parameter_type_list CLOSE_RND CLOSE_RND
  162                        | direct_declarator OPEN_RND CLOSE_RND

  163 pointer: TIMES type_qualifier_list_opt
  164        | TIMES type_qualifier_list_opt pointer

  165 type_qualifier_list: type_qualifier
  166                    | type_qualifier_list type_qualifier

  167 parameter_type_list: parameter_list
  168                    | parameter_list COMMA ELLIPSIS

  169 parameter_list: parameter_declaration
  170               | parameter_list COMMA parameter_declaration

  171 abstract_declarator_opt: /* empty */
  172                        | abstract_declarator

  173 parameter_declaration: declaration_specifiers declarator
  174                      | declaration_specifiers
  175                      | declaration_specifiers abstract_declarator

  176 type_name: specifier_qualifier_list abstract_declarator_opt

  177 abstract_declarator: pointer
  178                    | pointer_opt direct_abstract_declarator

  179 direct_abstract_declarator_opt: /* empty */
  180                               | direct_abstract_declarator

  181 parameter_type_list_opt: /* empty */
  182                        | parameter_type_list

  183 direct_abstract_declarator: OPEN_RND abstract_declarator CLOSE_RND
  184                           | direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE
  185                           | direct_abstract_declarator_opt OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE
  186                           | direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list STATIC assignment_expr CLOSE_SQUARE
  187                           | direct_abstract_declarator_opt OPEN_SQUARE TIMES CLOSE_SQUARE
  188                           | direct_abstract_declarator_opt OPEN_RND parameter_type_list_opt CLOSE_RND

  189 typedef_name: IDENTIFIER

  190 initializer: assignment_expr
  191            | OPEN_CURL initializer_list CLOSE_CURL
  192            | OPEN_CURL initializer_list COMMA CLOSE_CURL

  193 designation_opt: /* empty */
  194                | designation

  195 initializer_list: designation_opt initializer
  196                 | initializer_list COMMA designation_opt initializer
  197                 | /* empty */

  198 designation: designator_list ASSIGN

  199 designator_list: designator
  200                | designator_list designator

  201 designator: OPEN_SQUARE constant_expr CLOSE_SQUARE
  202           | DOT IDENTIFIER

  203 statement: labeled_statement
  204          | expression_statement
  205          | selection_header
  206          | iteration_header
  207          | OPEN_CURL
  208          | CLOSE_CURL
  209          | ELSE
  210          | jump_statement

  211 labeled_statement: IDENTIFIER COLON statement

  212 $@1: /* empty */

  213 labeled_statement: CASE constant_expr COLON $@1 statement

  214 $@2: /* empty */

  215 labeled_statement: DEFAULT COLON $@2 statement

  216 expression_statement: expr_opt SEMICOLON

  217 selection_header: IF OPEN_RND expression CLOSE_RND
  218                 | SWITCH OPEN_RND expression CLOSE_RND

  219 expr_opt: /* empty */
  220         | expression

  221 iteration_header: WHILE OPEN_RND expression CLOSE_RND
  222                 | DO
  223                 | FOR OPEN_RND expr_opt SEMICOLON expr_opt SEMICOLON expr_opt CLOSE_RND
  224                 | FOR OPEN_RND declaration expr_opt SEMICOLON expr_opt CLOSE_RND

  225 jump_statement: GOTO IDENTIFIER SEMICOLON
  226               | CONTINUE SEMICOLON
  227               | BREAK SEMICOLON
  228               | RETURN expr_opt SEMICOLON

  229 external_declaration: function_header
  230                     | declaration

  231 declaration_list_opt: /* empty */
  232                     | declaration_list

  233 function_header: declaration_specifiers fndef_declarator declaration_list_opt OPEN_CURL
  234                | fndef_declarator declaration_list_opt OPEN_CURL

  235 declaration_list: declaration
  236                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
error (256)
_BOOL (258) 111
_COMPLEX (259) 112
_IMAGINARY (260) 113
AUTO (261) 100
STATIC (262) 99 155 156 185 186
EXTERN (263) 98
REGISTER (264) 101
TYPEDEF (265) 97
CHAR (266) 103
FLOAT (267) 107
DOUBLE (268) 108
INT (269) 105
SHORT (270) 104
LONG (271) 106
UNSIGNED (272) 110
SIGNED (273) 109
VOID (274) 102
CONST (275) 141
VOLATILE (276) 143
STRUCT (277) 121
UNION (278) 122
ENUM (279) 134 135 136
IF (280) 217
ELSE (281) 209
WHILE (282) 221
FOR (283) 223 224
DO (284) 222
SWITCH (285) 218
CASE (286) 213
DEFAULT (287) 215
BREAK (288) 227
CONTINUE (289) 226
RETURN (290) 228
GOTO (291) 225
SIZEOF (292) 29 30
OPEN_RND (293) 7 11 16 21 22 30 38 154 160 161 162 183 188 217 218
    221 223 224
CLOSE_RND (294) 7 11 16 21 22 30 38 154 160 161 162 183 188 217 218
    221 223 224
LEFTSHIFT (295) 47
RIGHTSHIFT (296) 48
PLUS (297)
ADD (298) 33 44
NEGATE (299)
MINUS (300) 34 45
STAR (301)
TIMES (302) 32 40 157 163 164 187
REMAINDER (303) 42
DIVIDE (304) 41
XOR (305) 60
AND (306)
BITAND (307) 31 58
OR (308) 62
BITNEGATE (309) 35
NOT (310) 36
LT (311) 50
LE (312) 52
GE (313) 53
GT (314) 51
EQUAL (315) 55
NOTEQUAL (316) 56
ANDTEST (317) 64
ORTEST (318) 66
QUESTION (319) 68
DUMMY1 (320)
DOT (321) 17 202
DEREF (322) 18
PLUSPLUS (323) 19 26
MINUSMINUS (324) 20 27
POSTPLUSPLUS (325)
POSTMINUSMINUS (326)
COMMA (327) 22 24 83 94 131 135 138 168 170 192 196
SEMICOLON (328) 85 86 125 216 223 224 225 226 227 228
ELLIPSIS (329) 168
OPEN_CURL (330) 21 22 119 134 135 191 192 207 233 234
CLOSE_CURL (331) 21 22 119 134 135 191 192 208
OPEN_SQUARE (332) 15 155 156 157 159 184 185 186 187 201
CLOSE_SQUARE (333) 15 155 156 157 159 184 185 186 187 201
ASSIGN (334) 71 96 140 198
PLUSASSIGN (335) 75
MINUSASSIGN (336) 76
TIMESASSIGN (337) 72
LSASSIGN (338) 77
RSASSIGN (339) 78
ANDASSIGN (340) 79
DIVASSIGN (341) 73
REMASSIGN (342) 74
ORASSIGN (343) 80
XORASSIGN (344) 81
COLON (345) 68 133 211 213 215
DUMMY2 (346)
CONSTANT (347) 5
IDENTIFIER (348) 4 10 11 17 18 118 120 136 139 140 153 189 202 211
    225
STRING_LITERAL (349) 8 9
TYPEDEFNAME (350)
INLINE (351) 144
RESTRICT (352) 142
UNDEFINED (353)


Nonterminals, with rules where they appear

$accept (99)
    on left: 0
TU (100)
    on left: 1, on right: 0
translation_unit (101)
    on left: 2 3, on right: 1
primary_expr (102)
    on left: 4 5 6 7, on right: 14
string_seq (103)
    on left: 8 9 10 11, on right: 6 9 10 11
argument_expr_list_opt (104)
    on left: 12 13, on right: 16
postfix_expr (105)
    on left: 14 15 16 17 18 19 20 21 22, on right: 15 16 17 18 19 20
    25
argument_expr_list (106)
    on left: 23 24, on right: 13 24
unary_expr (107)
    on left: 25 26 27 28 29 30, on right: 26 27 29 37 70
unary_operator (108)
    on left: 31 32 33 34 35 36, on right: 28
cast_expr (109)
    on left: 37 38, on right: 28 38 39 40 41 42
multiplicative_expr (110)
    on left: 39 40 41 42, on right: 40 41 42 43 44 45
additive_expr (111)
    on left: 43 44 45, on right: 44 45 46 47 48
shift_expr (112)
    on left: 46 47 48, on right: 47 48 49 50 51 52 53
relational_expr (113)
    on left: 49 50 51 52 53, on right: 50 51 52 53 54 55 56
equality_expr (114)
    on left: 54 55 56, on right: 55 56 57 58
AND_expr (115)
    on left: 57 58, on right: 58 59 60
exclusive_OR_expr (116)
    on left: 59 60, on right: 60 61 62
inclusive_OR_expr (117)
    on left: 61 62, on right: 62 63 64
logical_AND_expr (118)
    on left: 63 64, on right: 64 65 66
logical_OR_expr (119)
    on left: 65 66, on right: 66 67 68
conditional_expr (120)
    on left: 67 68, on right: 68 69 84
assignment_expr (121)
    on left: 69 70, on right: 23 24 70 82 83 152 155 156 185 186 190
assignment_operator (122)
    on left: 71 72 73 74 75 76 77 78 79 80 81, on right: 70
expression (123)
    on left: 82 83, on right: 7 15 68 83 217 218 220 221
constant_expr (124)
    on left: 84, on right: 11 133 140 201 213
declaration (125)
    on left: 85 86, on right: 224 230 235 236
decl_specifier (126)
    on left: 87 88 89 90, on right: 91 92
declaration_specifiers (127)
    on left: 91 92, on right: 85 86 92 173 174 175 233
init_declarator_list (128)
    on left: 93 94, on right: 86 94
init_declarator (129)
    on left: 95 96, on right: 93 94
storage_class_specifier (130)
    on left: 97 98 99 100 101, on right: 87
type_specifier (131)
    on left: 102 103 104 105 106 107 108 109 110 111 112 113 114 115
    116, on right: 88 126
identifier_opt (132)
    on left: 117 118, on right: 119 134 135
struct_or_union_specifier (133)
    on left: 119 120, on right: 114
struct_or_union (134)
    on left: 121 122, on right: 119 120
struct_declaration_list (135)
    on left: 123 124, on right: 119 124
struct_declaration (136)
    on left: 125, on right: 123 124
spec_qual (137)
    on left: 126 127, on right: 128 129
specifier_qualifier_list (138)
    on left: 128 129, on right: 125 129 176
struct_declarator_list (139)
    on left: 130 131, on right: 125 131
struct_declarator (140)
    on left: 132 133, on right: 130 131
enum_specifier (141)
    on left: 134 135 136, on right: 115
enumerator_list (142)
    on left: 137 138, on right: 134 135 138
enumerator (143)
    on left: 139 140, on right: 137 138
type_qualifier (144)
    on left: 141 142 143, on right: 89 127 165 166
function_specifier (145)
    on left: 144, on right: 90
pointer_opt (146)
    on left: 145 146, on right: 147 148 178
declarator (147)
    on left: 147, on right: 95 96 132 154 173
fndef_declarator (148)
    on left: 148, on right: 233 234
type_qualifier_list_opt (149)
    on left: 149 150, on right: 155 157 159 163 164 184 185
assignment_expr_opt (150)
    on left: 151 152, on right: 159 184
direct_declarator (151)
    on left: 153 154 155 156 157 158, on right: 147 155 156 157 159
    160 161 162
fndef_direct_declarator (152)
    on left: 159 160 161 162, on right: 148 158
pointer (153)
    on left: 163 164, on right: 146 164 177
type_qualifier_list (154)
    on left: 165 166, on right: 150 156 166 186
parameter_type_list (155)
    on left: 167 168, on right: 160 161 182
parameter_list (156)
    on left: 169 170, on right: 167 168 170
abstract_declarator_opt (157)
    on left: 171 172, on right: 176
parameter_declaration (158)
    on left: 173 174 175, on right: 169 170
type_name (159)
    on left: 176, on right: 21 22 30 38
abstract_declarator (160)
    on left: 177 178, on right: 172 175 183
direct_abstract_declarator_opt (161)
    on left: 179 180, on right: 184 185 186 187 188
parameter_type_list_opt (162)
    on left: 181 182, on right: 188
direct_abstract_declarator (163)
    on left: 183 184 185 186 187 188, on right: 178 180
typedef_name (164)
    on left: 189, on right: 116
initializer (165)
    on left: 190 191 192, on right: 96 195 196
designation_opt (166)
    on left: 193 194, on right: 195 196
initializer_list (167)
    on left: 195 196 197, on right: 21 22 191 192 196
designation (168)
    on left: 198, on right: 194
designator_list (169)
    on left: 199 200, on right: 198 200
designator (170)
    on left: 201 202, on right: 199 200
statement (171)
    on left: 203 204 205 206 207 208 209 210, on right: 3 211 213 215
labeled_statement (172)
    on left: 211 213 215, on right: 203
$@1 (173)
    on left: 212, on right: 213
$@2 (174)
    on left: 214, on right: 215
expression_statement (175)
    on left: 216, on right: 204
selection_header (176)
    on left: 217 218, on right: 205
expr_opt (177)
    on left: 219 220, on right: 216 223 224 228
iteration_header (178)
    on left: 221 222 223 224, on right: 206
jump_statement (179)
    on left: 225 226 227 228, on right: 210
external_declaration (180)
    on left: 229 230, on right: 2
declaration_list_opt (181)
    on left: 231 232, on right: 233 234
function_header (182)
    on left: 233 234, on right: 229
declaration_list (183)
    on left: 235 236, on right: 232 236


state 0

    0 $accept: . TU $end

    _BOOL           shift, and go to state 1
    _COMPLEX        shift, and go to state 2
    _IMAGINARY      shift, and go to state 3
    AUTO            shift, and go to state 4
    STATIC          shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    TYPEDEF         shift, and go to state 8
    CHAR            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    INT             shift, and go to state 12
    SHORT           shift, and go to state 13
    LONG            shift, and go to state 14
    UNSIGNED        shift, and go to state 15
    SIGNED          shift, and go to state 16
    VOID            shift, and go to state 17
    CONST           shift, and go to state 18
    VOLATILE        shift, and go to state 19
    STRUCT          shift, and go to state 20
    UNION           shift, and go to state 21
    ENUM            shift, and go to state 22
    IF              shift, and go to state 23
    ELSE            shift, and go to state 24
    WHILE           shift, and go to state 25
    FOR             shift, and go to state 26
    DO              shift, and go to state 27
    SWITCH          shift, and go to state 28
    CASE            shift, and go to state 29
    DEFAULT         shift, and go to state 30
    BREAK           shift, and go to state 31
    CONTINUE        shift, and go to state 32
    RETURN          shift, and go to state 33
    GOTO            shift, and go to state 34
    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 39
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    OPEN_CURL       shift, and go to state 45
    CLOSE_CURL      shift, and go to state 46
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 48
    STRING_LITERAL  shift, and go to state 49
    INLINE          shift, and go to state 50
    RESTRICT        shift, and go to state 51

    OPEN_RND    [reduce using rule 145 (pointer_opt)]
    IDENTIFIER  [reduce using rule 145 (pointer_opt)]
    $default    reduce using rule 219 (expr_opt)

    TU                         go to state 52
    translation_unit           go to state 53
    primary_expr               go to state 54
    string_seq                 go to state 55
    postfix_expr               go to state 56
    unary_expr                 go to state 57
    unary_operator             go to state 58
    cast_expr                  go to state 59
    multiplicative_expr        go to state 60
    additive_expr              go to state 61
    shift_expr                 go to state 62
    relational_expr            go to state 63
    equality_expr              go to state 64
    AND_expr                   go to state 65
    exclusive_OR_expr          go to state 66
    inclusive_OR_expr          go to state 67
    logical_AND_expr           go to state 68
    logical_OR_expr            go to state 69
    conditional_expr           go to state 70
    assignment_expr            go to state 71
    expression                 go to state 72
    declaration                go to state 73
    decl_specifier             go to state 74
    declaration_specifiers     go to state 75
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    pointer_opt                go to state 83
    fndef_declarator           go to state 84
    pointer                    go to state 85
    typedef_name               go to state 86
    statement                  go to state 87
    labeled_statement          go to state 88
    expression_statement       go to state 89
    selection_header           go to state 90
    expr_opt                   go to state 91
    iteration_header           go to state 92
    jump_statement             go to state 93
    external_declaration       go to state 94
    function_header            go to state 95


state 1

  111 type_specifier: _BOOL .

    $default  reduce using rule 111 (type_specifier)


state 2

  112 type_specifier: _COMPLEX .

    $default  reduce using rule 112 (type_specifier)


state 3

  113 type_specifier: _IMAGINARY .

    $default  reduce using rule 113 (type_specifier)


state 4

  100 storage_class_specifier: AUTO .

    $default  reduce using rule 100 (storage_class_specifier)


state 5

   99 storage_class_specifier: STATIC .

    $default  reduce using rule 99 (storage_class_specifier)


state 6

   98 storage_class_specifier: EXTERN .

    $default  reduce using rule 98 (storage_class_specifier)


state 7

  101 storage_class_specifier: REGISTER .

    $default  reduce using rule 101 (storage_class_specifier)


state 8

   97 storage_class_specifier: TYPEDEF .

    $default  reduce using rule 97 (storage_class_specifier)


state 9

  103 type_specifier: CHAR .

    $default  reduce using rule 103 (type_specifier)


state 10

  107 type_specifier: FLOAT .

    $default  reduce using rule 107 (type_specifier)


state 11

  108 type_specifier: DOUBLE .

    $default  reduce using rule 108 (type_specifier)


state 12

  105 type_specifier: INT .

    $default  reduce using rule 105 (type_specifier)


state 13

  104 type_specifier: SHORT .

    $default  reduce using rule 104 (type_specifier)


state 14

  106 type_specifier: LONG .

    $default  reduce using rule 106 (type_specifier)


state 15

  110 type_specifier: UNSIGNED .

    $default  reduce using rule 110 (type_specifier)


state 16

  109 type_specifier: SIGNED .

    $default  reduce using rule 109 (type_specifier)


state 17

  102 type_specifier: VOID .

    $default  reduce using rule 102 (type_specifier)


state 18

  141 type_qualifier: CONST .

    $default  reduce using rule 141 (type_qualifier)


state 19

  143 type_qualifier: VOLATILE .

    $default  reduce using rule 143 (type_qualifier)


state 20

  121 struct_or_union: STRUCT .

    $default  reduce using rule 121 (struct_or_union)


state 21

  122 struct_or_union: UNION .

    $default  reduce using rule 122 (struct_or_union)


state 22

  134 enum_specifier: ENUM . identifier_opt OPEN_CURL enumerator_list CLOSE_CURL
  135               | ENUM . identifier_opt OPEN_CURL enumerator_list COMMA CLOSE_CURL
  136               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 96

    $default  reduce using rule 117 (identifier_opt)

    identifier_opt  go to state 97


state 23

  217 selection_header: IF . OPEN_RND expression CLOSE_RND

    OPEN_RND  shift, and go to state 98


state 24

  209 statement: ELSE .

    $default  reduce using rule 209 (statement)


state 25

  221 iteration_header: WHILE . OPEN_RND expression CLOSE_RND

    OPEN_RND  shift, and go to state 99


state 26

  223 iteration_header: FOR . OPEN_RND expr_opt SEMICOLON expr_opt SEMICOLON expr_opt CLOSE_RND
  224                 | FOR . OPEN_RND declaration expr_opt SEMICOLON expr_opt CLOSE_RND

    OPEN_RND  shift, and go to state 100


state 27

  222 iteration_header: DO .

    $default  reduce using rule 222 (iteration_header)


state 28

  218 selection_header: SWITCH . OPEN_RND expression CLOSE_RND

    OPEN_RND  shift, and go to state 101


state 29

  213 labeled_statement: CASE . constant_expr COLON $@1 statement

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 105
    constant_expr        go to state 106


state 30

  215 labeled_statement: DEFAULT . COLON $@2 statement

    COLON  shift, and go to state 107


state 31

  227 jump_statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 108


state 32

  226 jump_statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 109


state 33

  228 jump_statement: RETURN . expr_opt SEMICOLON

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 219 (expr_opt)

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 72
    expr_opt             go to state 110


state 34

  225 jump_statement: GOTO . IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 111


state 35

   29 unary_expr: SIZEOF . unary_expr
   30           | SIZEOF . OPEN_RND type_name CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 112
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr    go to state 54
    string_seq      go to state 55
    postfix_expr    go to state 56
    unary_expr      go to state 113
    unary_operator  go to state 58


state 36

    7 primary_expr: OPEN_RND . expression CLOSE_RND
   21 postfix_expr: OPEN_RND . type_name CLOSE_RND OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND . type_name CLOSE_RND OPEN_CURL initializer_list COMMA CLOSE_CURL
   38 cast_expr: OPEN_RND . type_name CLOSE_RND cast_expr

    _BOOL           shift, and go to state 1
    _COMPLEX        shift, and go to state 2
    _IMAGINARY      shift, and go to state 3
    CHAR            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    INT             shift, and go to state 12
    SHORT           shift, and go to state 13
    LONG            shift, and go to state 14
    UNSIGNED        shift, and go to state 15
    SIGNED          shift, and go to state 16
    VOID            shift, and go to state 17
    CONST           shift, and go to state 18
    VOLATILE        shift, and go to state 19
    STRUCT          shift, and go to state 20
    UNION           shift, and go to state 21
    ENUM            shift, and go to state 22
    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 114
    STRING_LITERAL  shift, and go to state 49
    RESTRICT        shift, and go to state 51

    primary_expr               go to state 54
    string_seq                 go to state 55
    postfix_expr               go to state 56
    unary_expr                 go to state 57
    unary_operator             go to state 58
    cast_expr                  go to state 59
    multiplicative_expr        go to state 60
    additive_expr              go to state 61
    shift_expr                 go to state 62
    relational_expr            go to state 63
    equality_expr              go to state 64
    AND_expr                   go to state 65
    exclusive_OR_expr          go to state 66
    inclusive_OR_expr          go to state 67
    logical_AND_expr           go to state 68
    logical_OR_expr            go to state 69
    conditional_expr           go to state 70
    assignment_expr            go to state 71
    expression                 go to state 115
    type_specifier             go to state 116
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    spec_qual                  go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 80
    type_qualifier             go to state 119
    type_name                  go to state 120
    typedef_name               go to state 86


state 37

   33 unary_operator: ADD .

    $default  reduce using rule 33 (unary_operator)


state 38

   34 unary_operator: MINUS .

    $default  reduce using rule 34 (unary_operator)


state 39

   32 unary_operator: TIMES .
  163 pointer: TIMES . type_qualifier_list_opt
  164        | TIMES . type_qualifier_list_opt pointer

    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    RESTRICT  shift, and go to state 51

    OPEN_RND    reduce using rule 32 (unary_operator)
    OPEN_RND    [reduce using rule 149 (type_qualifier_list_opt)]
    TIMES       reduce using rule 32 (unary_operator)
    TIMES       [reduce using rule 149 (type_qualifier_list_opt)]
    IDENTIFIER  reduce using rule 32 (unary_operator)
    IDENTIFIER  [reduce using rule 149 (type_qualifier_list_opt)]
    $default    reduce using rule 32 (unary_operator)

    type_qualifier           go to state 121
    type_qualifier_list_opt  go to state 122
    type_qualifier_list      go to state 123


state 40

   31 unary_operator: BITAND .

    $default  reduce using rule 31 (unary_operator)


state 41

   35 unary_operator: BITNEGATE .

    $default  reduce using rule 35 (unary_operator)


state 42

   36 unary_operator: NOT .

    $default  reduce using rule 36 (unary_operator)


state 43

   26 unary_expr: PLUSPLUS . unary_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 124
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr    go to state 54
    string_seq      go to state 55
    postfix_expr    go to state 56
    unary_expr      go to state 125
    unary_operator  go to state 58


state 44

   27 unary_expr: MINUSMINUS . unary_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 124
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr    go to state 54
    string_seq      go to state 55
    postfix_expr    go to state 56
    unary_expr      go to state 126
    unary_operator  go to state 58


state 45

  207 statement: OPEN_CURL .

    $default  reduce using rule 207 (statement)


state 46

  208 statement: CLOSE_CURL .

    $default  reduce using rule 208 (statement)


state 47

    5 primary_expr: CONSTANT .

    $default  reduce using rule 5 (primary_expr)


state 48

    4 primary_expr: IDENTIFIER .
  189 typedef_name: IDENTIFIER .
  211 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 127

    _BOOL       reduce using rule 189 (typedef_name)
    _COMPLEX    reduce using rule 189 (typedef_name)
    _IMAGINARY  reduce using rule 189 (typedef_name)
    AUTO        reduce using rule 189 (typedef_name)
    STATIC      reduce using rule 189 (typedef_name)
    EXTERN      reduce using rule 189 (typedef_name)
    REGISTER    reduce using rule 189 (typedef_name)
    TYPEDEF     reduce using rule 189 (typedef_name)
    CHAR        reduce using rule 189 (typedef_name)
    FLOAT       reduce using rule 189 (typedef_name)
    DOUBLE      reduce using rule 189 (typedef_name)
    INT         reduce using rule 189 (typedef_name)
    SHORT       reduce using rule 189 (typedef_name)
    LONG        reduce using rule 189 (typedef_name)
    UNSIGNED    reduce using rule 189 (typedef_name)
    SIGNED      reduce using rule 189 (typedef_name)
    VOID        reduce using rule 189 (typedef_name)
    CONST       reduce using rule 189 (typedef_name)
    VOLATILE    reduce using rule 189 (typedef_name)
    STRUCT      reduce using rule 189 (typedef_name)
    UNION       reduce using rule 189 (typedef_name)
    ENUM        reduce using rule 189 (typedef_name)
    OPEN_RND    reduce using rule 4 (primary_expr)
    OPEN_RND    [reduce using rule 189 (typedef_name)]
    TIMES       reduce using rule 4 (primary_expr)
    TIMES       [reduce using rule 189 (typedef_name)]
    SEMICOLON   reduce using rule 4 (primary_expr)
    SEMICOLON   [reduce using rule 189 (typedef_name)]
    IDENTIFIER  reduce using rule 189 (typedef_name)
    INLINE      reduce using rule 189 (typedef_name)
    RESTRICT    reduce using rule 189 (typedef_name)
    $default    reduce using rule 4 (primary_expr)


state 49

    8 string_seq: STRING_LITERAL .

    $default  reduce using rule 8 (string_seq)


state 50

  144 function_specifier: INLINE .

    $default  reduce using rule 144 (function_specifier)


state 51

  142 type_qualifier: RESTRICT .

    $default  reduce using rule 142 (type_qualifier)


state 52

    0 $accept: TU . $end

    $end  shift, and go to state 128


state 53

    1 TU: translation_unit .

    $default  reduce using rule 1 (TU)


state 54

   14 postfix_expr: primary_expr .

    $default  reduce using rule 14 (postfix_expr)


state 55

    6 primary_expr: string_seq .
    9 string_seq: string_seq . STRING_LITERAL
   10           | string_seq . IDENTIFIER
   11           | string_seq . IDENTIFIER OPEN_RND constant_expr CLOSE_RND

    IDENTIFIER      shift, and go to state 129
    STRING_LITERAL  shift, and go to state 130

    $default  reduce using rule 6 (primary_expr)


state 56

   15 postfix_expr: postfix_expr . OPEN_SQUARE expression CLOSE_SQUARE
   16             | postfix_expr . OPEN_RND argument_expr_list_opt CLOSE_RND
   17             | postfix_expr . DOT IDENTIFIER
   18             | postfix_expr . DEREF IDENTIFIER
   19             | postfix_expr . PLUSPLUS
   20             | postfix_expr . MINUSMINUS
   25 unary_expr: postfix_expr .

    OPEN_RND     shift, and go to state 131
    DOT          shift, and go to state 132
    DEREF        shift, and go to state 133
    PLUSPLUS     shift, and go to state 134
    MINUSMINUS   shift, and go to state 135
    OPEN_SQUARE  shift, and go to state 136

    $default  reduce using rule 25 (unary_expr)


state 57

   37 cast_expr: unary_expr .
   70 assignment_expr: unary_expr . assignment_operator assignment_expr

    ASSIGN       shift, and go to state 137
    PLUSASSIGN   shift, and go to state 138
    MINUSASSIGN  shift, and go to state 139
    TIMESASSIGN  shift, and go to state 140
    LSASSIGN     shift, and go to state 141
    RSASSIGN     shift, and go to state 142
    ANDASSIGN    shift, and go to state 143
    DIVASSIGN    shift, and go to state 144
    REMASSIGN    shift, and go to state 145
    ORASSIGN     shift, and go to state 146
    XORASSIGN    shift, and go to state 147

    $default  reduce using rule 37 (cast_expr)

    assignment_operator  go to state 148


state 58

   28 unary_expr: unary_operator . cast_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr    go to state 54
    string_seq      go to state 55
    postfix_expr    go to state 56
    unary_expr      go to state 104
    unary_operator  go to state 58
    cast_expr       go to state 149


state 59

   39 multiplicative_expr: cast_expr .

    $default  reduce using rule 39 (multiplicative_expr)


state 60

   40 multiplicative_expr: multiplicative_expr . TIMES cast_expr
   41                    | multiplicative_expr . DIVIDE cast_expr
   42                    | multiplicative_expr . REMAINDER cast_expr
   43 additive_expr: multiplicative_expr .

    TIMES      shift, and go to state 150
    REMAINDER  shift, and go to state 151
    DIVIDE     shift, and go to state 152

    $default  reduce using rule 43 (additive_expr)


state 61

   44 additive_expr: additive_expr . ADD multiplicative_expr
   45              | additive_expr . MINUS multiplicative_expr
   46 shift_expr: additive_expr .

    ADD    shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 46 (shift_expr)


state 62

   47 shift_expr: shift_expr . LEFTSHIFT additive_expr
   48           | shift_expr . RIGHTSHIFT additive_expr
   49 relational_expr: shift_expr .

    LEFTSHIFT   shift, and go to state 155
    RIGHTSHIFT  shift, and go to state 156

    $default  reduce using rule 49 (relational_expr)


state 63

   50 relational_expr: relational_expr . LT shift_expr
   51                | relational_expr . GT shift_expr
   52                | relational_expr . LE shift_expr
   53                | relational_expr . GE shift_expr
   54 equality_expr: relational_expr .

    LT  shift, and go to state 157
    LE  shift, and go to state 158
    GE  shift, and go to state 159
    GT  shift, and go to state 160

    $default  reduce using rule 54 (equality_expr)


state 64

   55 equality_expr: equality_expr . EQUAL relational_expr
   56              | equality_expr . NOTEQUAL relational_expr
   57 AND_expr: equality_expr .

    EQUAL     shift, and go to state 161
    NOTEQUAL  shift, and go to state 162

    $default  reduce using rule 57 (AND_expr)


state 65

   58 AND_expr: AND_expr . BITAND equality_expr
   59 exclusive_OR_expr: AND_expr .

    BITAND  shift, and go to state 163

    $default  reduce using rule 59 (exclusive_OR_expr)


state 66

   60 exclusive_OR_expr: exclusive_OR_expr . XOR AND_expr
   61 inclusive_OR_expr: exclusive_OR_expr .

    XOR  shift, and go to state 164

    $default  reduce using rule 61 (inclusive_OR_expr)


state 67

   62 inclusive_OR_expr: inclusive_OR_expr . OR exclusive_OR_expr
   63 logical_AND_expr: inclusive_OR_expr .

    OR  shift, and go to state 165

    $default  reduce using rule 63 (logical_AND_expr)


state 68

   64 logical_AND_expr: logical_AND_expr . ANDTEST inclusive_OR_expr
   65 logical_OR_expr: logical_AND_expr .

    ANDTEST  shift, and go to state 166

    $default  reduce using rule 65 (logical_OR_expr)


state 69

   66 logical_OR_expr: logical_OR_expr . ORTEST logical_AND_expr
   67 conditional_expr: logical_OR_expr .
   68                 | logical_OR_expr . QUESTION expression COLON conditional_expr

    ORTEST    shift, and go to state 167
    QUESTION  shift, and go to state 168

    $default  reduce using rule 67 (conditional_expr)


state 70

   69 assignment_expr: conditional_expr .

    $default  reduce using rule 69 (assignment_expr)


state 71

   82 expression: assignment_expr .

    $default  reduce using rule 82 (expression)


state 72

   83 expression: expression . COMMA assignment_expr
  220 expr_opt: expression .

    COMMA  shift, and go to state 169

    $default  reduce using rule 220 (expr_opt)


state 73

  230 external_declaration: declaration .

    $default  reduce using rule 230 (external_declaration)


state 74

   91 declaration_specifiers: decl_specifier .

    $default  reduce using rule 91 (declaration_specifiers)


state 75

   85 declaration: declaration_specifiers . SEMICOLON
   86            | declaration_specifiers . init_declarator_list SEMICOLON
   92 declaration_specifiers: declaration_specifiers . decl_specifier
  233 function_header: declaration_specifiers . fndef_declarator declaration_list_opt OPEN_CURL

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    TIMES       shift, and go to state 170
    SEMICOLON   shift, and go to state 171
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    IDENTIFIER  [reduce using rule 145 (pointer_opt)]
    $default    reduce using rule 145 (pointer_opt)

    decl_specifier             go to state 173
    init_declarator_list       go to state 174
    init_declarator            go to state 175
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    pointer_opt                go to state 176
    declarator                 go to state 177
    fndef_declarator           go to state 178
    pointer                    go to state 85
    typedef_name               go to state 86


state 76

   87 decl_specifier: storage_class_specifier .

    $default  reduce using rule 87 (decl_specifier)


state 77

   88 decl_specifier: type_specifier .

    $default  reduce using rule 88 (decl_specifier)


state 78

  114 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 114 (type_specifier)


state 79

  119 struct_or_union_specifier: struct_or_union . identifier_opt OPEN_CURL struct_declaration_list CLOSE_CURL
  120                          | struct_or_union . IDENTIFIER

    IDENTIFIER  shift, and go to state 179

    $default  reduce using rule 117 (identifier_opt)

    identifier_opt  go to state 180


state 80

  115 type_specifier: enum_specifier .

    $default  reduce using rule 115 (type_specifier)


state 81

   89 decl_specifier: type_qualifier .

    $default  reduce using rule 89 (decl_specifier)


state 82

   90 decl_specifier: function_specifier .

    $default  reduce using rule 90 (decl_specifier)


state 83

  148 fndef_declarator: pointer_opt . fndef_direct_declarator

    OPEN_RND    shift, and go to state 181
    IDENTIFIER  shift, and go to state 182

    direct_declarator        go to state 183
    fndef_direct_declarator  go to state 184


state 84

  234 function_header: fndef_declarator . declaration_list_opt OPEN_CURL

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    $default  reduce using rule 231 (declaration_list_opt)

    declaration                go to state 185
    decl_specifier             go to state 74
    declaration_specifiers     go to state 186
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    typedef_name               go to state 86
    declaration_list_opt       go to state 187
    declaration_list           go to state 188


state 85

  146 pointer_opt: pointer .

    $default  reduce using rule 146 (pointer_opt)


state 86

  116 type_specifier: typedef_name .

    $default  reduce using rule 116 (type_specifier)


state 87

    3 translation_unit: statement .

    $default  reduce using rule 3 (translation_unit)


state 88

  203 statement: labeled_statement .

    $default  reduce using rule 203 (statement)


state 89

  204 statement: expression_statement .

    $default  reduce using rule 204 (statement)


state 90

  205 statement: selection_header .

    $default  reduce using rule 205 (statement)


state 91

  216 expression_statement: expr_opt . SEMICOLON

    SEMICOLON  shift, and go to state 189


state 92

  206 statement: iteration_header .

    $default  reduce using rule 206 (statement)


state 93

  210 statement: jump_statement .

    $default  reduce using rule 210 (statement)


state 94

    2 translation_unit: external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 95

  229 external_declaration: function_header .

    $default  reduce using rule 229 (external_declaration)


state 96

  118 identifier_opt: IDENTIFIER .
  136 enum_specifier: ENUM IDENTIFIER .

    OPEN_CURL  reduce using rule 118 (identifier_opt)
    $default   reduce using rule 136 (enum_specifier)


state 97

  134 enum_specifier: ENUM identifier_opt . OPEN_CURL enumerator_list CLOSE_CURL
  135               | ENUM identifier_opt . OPEN_CURL enumerator_list COMMA CLOSE_CURL

    OPEN_CURL  shift, and go to state 190


state 98

  217 selection_header: IF OPEN_RND . expression CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 191


state 99

  221 iteration_header: WHILE OPEN_RND . expression CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 192


state 100

  223 iteration_header: FOR OPEN_RND . expr_opt SEMICOLON expr_opt SEMICOLON expr_opt CLOSE_RND
  224                 | FOR OPEN_RND . declaration expr_opt SEMICOLON expr_opt CLOSE_RND

    _BOOL           shift, and go to state 1
    _COMPLEX        shift, and go to state 2
    _IMAGINARY      shift, and go to state 3
    AUTO            shift, and go to state 4
    STATIC          shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    TYPEDEF         shift, and go to state 8
    CHAR            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    INT             shift, and go to state 12
    SHORT           shift, and go to state 13
    LONG            shift, and go to state 14
    UNSIGNED        shift, and go to state 15
    SIGNED          shift, and go to state 16
    VOID            shift, and go to state 17
    CONST           shift, and go to state 18
    VOLATILE        shift, and go to state 19
    STRUCT          shift, and go to state 20
    UNION           shift, and go to state 21
    ENUM            shift, and go to state 22
    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 114
    STRING_LITERAL  shift, and go to state 49
    INLINE          shift, and go to state 50
    RESTRICT        shift, and go to state 51

    $default  reduce using rule 219 (expr_opt)

    primary_expr               go to state 54
    string_seq                 go to state 55
    postfix_expr               go to state 56
    unary_expr                 go to state 57
    unary_operator             go to state 58
    cast_expr                  go to state 59
    multiplicative_expr        go to state 60
    additive_expr              go to state 61
    shift_expr                 go to state 62
    relational_expr            go to state 63
    equality_expr              go to state 64
    AND_expr                   go to state 65
    exclusive_OR_expr          go to state 66
    inclusive_OR_expr          go to state 67
    logical_AND_expr           go to state 68
    logical_OR_expr            go to state 69
    conditional_expr           go to state 70
    assignment_expr            go to state 71
    expression                 go to state 72
    declaration                go to state 193
    decl_specifier             go to state 74
    declaration_specifiers     go to state 186
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    typedef_name               go to state 86
    expr_opt                   go to state 194


state 101

  218 selection_header: SWITCH OPEN_RND . expression CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 195


state 102

   32 unary_operator: TIMES .

    $default  reduce using rule 32 (unary_operator)


state 103

    4 primary_expr: IDENTIFIER .

    $default  reduce using rule 4 (primary_expr)


state 104

   37 cast_expr: unary_expr .

    $default  reduce using rule 37 (cast_expr)


state 105

   84 constant_expr: conditional_expr .

    $default  reduce using rule 84 (constant_expr)


state 106

  213 labeled_statement: CASE constant_expr . COLON $@1 statement

    COLON  shift, and go to state 196


state 107

  215 labeled_statement: DEFAULT COLON . $@2 statement

    $default  reduce using rule 214 ($@2)

    $@2  go to state 197


state 108

  227 jump_statement: BREAK SEMICOLON .

    $default  reduce using rule 227 (jump_statement)


state 109

  226 jump_statement: CONTINUE SEMICOLON .

    $default  reduce using rule 226 (jump_statement)


state 110

  228 jump_statement: RETURN expr_opt . SEMICOLON

    SEMICOLON  shift, and go to state 198


state 111

  225 jump_statement: GOTO IDENTIFIER . SEMICOLON

    SEMICOLON  shift, and go to state 199


state 112

    7 primary_expr: OPEN_RND . expression CLOSE_RND
   21 postfix_expr: OPEN_RND . type_name CLOSE_RND OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND . type_name CLOSE_RND OPEN_CURL initializer_list COMMA CLOSE_CURL
   30 unary_expr: SIZEOF OPEN_RND . type_name CLOSE_RND

    _BOOL           shift, and go to state 1
    _COMPLEX        shift, and go to state 2
    _IMAGINARY      shift, and go to state 3
    CHAR            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    INT             shift, and go to state 12
    SHORT           shift, and go to state 13
    LONG            shift, and go to state 14
    UNSIGNED        shift, and go to state 15
    SIGNED          shift, and go to state 16
    VOID            shift, and go to state 17
    CONST           shift, and go to state 18
    VOLATILE        shift, and go to state 19
    STRUCT          shift, and go to state 20
    UNION           shift, and go to state 21
    ENUM            shift, and go to state 22
    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 114
    STRING_LITERAL  shift, and go to state 49
    RESTRICT        shift, and go to state 51

    primary_expr               go to state 54
    string_seq                 go to state 55
    postfix_expr               go to state 56
    unary_expr                 go to state 57
    unary_operator             go to state 58
    cast_expr                  go to state 59
    multiplicative_expr        go to state 60
    additive_expr              go to state 61
    shift_expr                 go to state 62
    relational_expr            go to state 63
    equality_expr              go to state 64
    AND_expr                   go to state 65
    exclusive_OR_expr          go to state 66
    inclusive_OR_expr          go to state 67
    logical_AND_expr           go to state 68
    logical_OR_expr            go to state 69
    conditional_expr           go to state 70
    assignment_expr            go to state 71
    expression                 go to state 115
    type_specifier             go to state 116
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    spec_qual                  go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 80
    type_qualifier             go to state 119
    type_name                  go to state 200
    typedef_name               go to state 86


state 113

   29 unary_expr: SIZEOF unary_expr .

    $default  reduce using rule 29 (unary_expr)


state 114

    4 primary_expr: IDENTIFIER .
  189 typedef_name: IDENTIFIER .

    _BOOL        reduce using rule 189 (typedef_name)
    _COMPLEX     reduce using rule 189 (typedef_name)
    _IMAGINARY   reduce using rule 189 (typedef_name)
    AUTO         reduce using rule 189 (typedef_name)
    STATIC       reduce using rule 189 (typedef_name)
    EXTERN       reduce using rule 189 (typedef_name)
    REGISTER     reduce using rule 189 (typedef_name)
    TYPEDEF      reduce using rule 189 (typedef_name)
    CHAR         reduce using rule 189 (typedef_name)
    FLOAT        reduce using rule 189 (typedef_name)
    DOUBLE       reduce using rule 189 (typedef_name)
    INT          reduce using rule 189 (typedef_name)
    SHORT        reduce using rule 189 (typedef_name)
    LONG         reduce using rule 189 (typedef_name)
    UNSIGNED     reduce using rule 189 (typedef_name)
    SIGNED       reduce using rule 189 (typedef_name)
    VOID         reduce using rule 189 (typedef_name)
    CONST        reduce using rule 189 (typedef_name)
    VOLATILE     reduce using rule 189 (typedef_name)
    STRUCT       reduce using rule 189 (typedef_name)
    UNION        reduce using rule 189 (typedef_name)
    ENUM         reduce using rule 189 (typedef_name)
    OPEN_RND     reduce using rule 4 (primary_expr)
    OPEN_RND     [reduce using rule 189 (typedef_name)]
    CLOSE_RND    reduce using rule 4 (primary_expr)
    CLOSE_RND    [reduce using rule 189 (typedef_name)]
    TIMES        reduce using rule 4 (primary_expr)
    TIMES        [reduce using rule 189 (typedef_name)]
    SEMICOLON    reduce using rule 4 (primary_expr)
    SEMICOLON    [reduce using rule 189 (typedef_name)]
    OPEN_SQUARE  reduce using rule 4 (primary_expr)
    OPEN_SQUARE  [reduce using rule 189 (typedef_name)]
    IDENTIFIER   reduce using rule 189 (typedef_name)
    INLINE       reduce using rule 189 (typedef_name)
    RESTRICT     reduce using rule 189 (typedef_name)
    $default     reduce using rule 4 (primary_expr)


state 115

    7 primary_expr: OPEN_RND expression . CLOSE_RND
   83 expression: expression . COMMA assignment_expr

    CLOSE_RND  shift, and go to state 201
    COMMA      shift, and go to state 169


state 116

  126 spec_qual: type_specifier .

    $default  reduce using rule 126 (spec_qual)


state 117

  128 specifier_qualifier_list: spec_qual .

    $default  reduce using rule 128 (specifier_qualifier_list)


state 118

  129 specifier_qualifier_list: specifier_qualifier_list . spec_qual
  176 type_name: specifier_qualifier_list . abstract_declarator_opt

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    TIMES       shift, and go to state 170
    IDENTIFIER  shift, and go to state 172
    RESTRICT    shift, and go to state 51

    CLOSE_RND  reduce using rule 171 (abstract_declarator_opt)
    $default   reduce using rule 145 (pointer_opt)

    type_specifier             go to state 116
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    spec_qual                  go to state 202
    enum_specifier             go to state 80
    type_qualifier             go to state 119
    pointer_opt                go to state 203
    pointer                    go to state 204
    abstract_declarator_opt    go to state 205
    abstract_declarator        go to state 206
    typedef_name               go to state 86


state 119

  127 spec_qual: type_qualifier .

    $default  reduce using rule 127 (spec_qual)


state 120

   21 postfix_expr: OPEN_RND type_name . CLOSE_RND OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND type_name . CLOSE_RND OPEN_CURL initializer_list COMMA CLOSE_CURL
   38 cast_expr: OPEN_RND type_name . CLOSE_RND cast_expr

    CLOSE_RND  shift, and go to state 207


state 121

  165 type_qualifier_list: type_qualifier .

    $default  reduce using rule 165 (type_qualifier_list)


state 122

  163 pointer: TIMES type_qualifier_list_opt .
  164        | TIMES type_qualifier_list_opt . pointer

    TIMES  shift, and go to state 170

    $default  reduce using rule 163 (pointer)

    pointer  go to state 208


state 123

  150 type_qualifier_list_opt: type_qualifier_list .
  166 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    RESTRICT  shift, and go to state 51

    $default  reduce using rule 150 (type_qualifier_list_opt)

    type_qualifier  go to state 209


state 124

    7 primary_expr: OPEN_RND . expression CLOSE_RND
   21 postfix_expr: OPEN_RND . type_name CLOSE_RND OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND . type_name CLOSE_RND OPEN_CURL initializer_list COMMA CLOSE_CURL

    _BOOL           shift, and go to state 1
    _COMPLEX        shift, and go to state 2
    _IMAGINARY      shift, and go to state 3
    CHAR            shift, and go to state 9
    FLOAT           shift, and go to state 10
    DOUBLE          shift, and go to state 11
    INT             shift, and go to state 12
    SHORT           shift, and go to state 13
    LONG            shift, and go to state 14
    UNSIGNED        shift, and go to state 15
    SIGNED          shift, and go to state 16
    VOID            shift, and go to state 17
    CONST           shift, and go to state 18
    VOLATILE        shift, and go to state 19
    STRUCT          shift, and go to state 20
    UNION           shift, and go to state 21
    ENUM            shift, and go to state 22
    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 114
    STRING_LITERAL  shift, and go to state 49
    RESTRICT        shift, and go to state 51

    primary_expr               go to state 54
    string_seq                 go to state 55
    postfix_expr               go to state 56
    unary_expr                 go to state 57
    unary_operator             go to state 58
    cast_expr                  go to state 59
    multiplicative_expr        go to state 60
    additive_expr              go to state 61
    shift_expr                 go to state 62
    relational_expr            go to state 63
    equality_expr              go to state 64
    AND_expr                   go to state 65
    exclusive_OR_expr          go to state 66
    inclusive_OR_expr          go to state 67
    logical_AND_expr           go to state 68
    logical_OR_expr            go to state 69
    conditional_expr           go to state 70
    assignment_expr            go to state 71
    expression                 go to state 115
    type_specifier             go to state 116
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    spec_qual                  go to state 117
    specifier_qualifier_list   go to state 118
    enum_specifier             go to state 80
    type_qualifier             go to state 119
    type_name                  go to state 210
    typedef_name               go to state 86


state 125

   26 unary_expr: PLUSPLUS unary_expr .

    $default  reduce using rule 26 (unary_expr)


state 126

   27 unary_expr: MINUSMINUS unary_expr .

    $default  reduce using rule 27 (unary_expr)


state 127

  211 labeled_statement: IDENTIFIER COLON . statement

    IF              shift, and go to state 23
    ELSE            shift, and go to state 24
    WHILE           shift, and go to state 25
    FOR             shift, and go to state 26
    DO              shift, and go to state 27
    SWITCH          shift, and go to state 28
    CASE            shift, and go to state 29
    DEFAULT         shift, and go to state 30
    BREAK           shift, and go to state 31
    CONTINUE        shift, and go to state 32
    RETURN          shift, and go to state 33
    GOTO            shift, and go to state 34
    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    OPEN_CURL       shift, and go to state 45
    CLOSE_CURL      shift, and go to state 46
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 211
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 219 (expr_opt)

    primary_expr          go to state 54
    string_seq            go to state 55
    postfix_expr          go to state 56
    unary_expr            go to state 57
    unary_operator        go to state 58
    cast_expr             go to state 59
    multiplicative_expr   go to state 60
    additive_expr         go to state 61
    shift_expr            go to state 62
    relational_expr       go to state 63
    equality_expr         go to state 64
    AND_expr              go to state 65
    exclusive_OR_expr     go to state 66
    inclusive_OR_expr     go to state 67
    logical_AND_expr      go to state 68
    logical_OR_expr       go to state 69
    conditional_expr      go to state 70
    assignment_expr       go to state 71
    expression            go to state 72
    statement             go to state 212
    labeled_statement     go to state 88
    expression_statement  go to state 89
    selection_header      go to state 90
    expr_opt              go to state 91
    iteration_header      go to state 92
    jump_statement        go to state 93


state 128

    0 $accept: TU $end .

    $default  accept


state 129

   10 string_seq: string_seq IDENTIFIER .
   11           | string_seq IDENTIFIER . OPEN_RND constant_expr CLOSE_RND

    OPEN_RND  shift, and go to state 213

    OPEN_RND  [reduce using rule 10 (string_seq)]
    $default  reduce using rule 10 (string_seq)


state 130

    9 string_seq: string_seq STRING_LITERAL .

    $default  reduce using rule 9 (string_seq)


state 131

   16 postfix_expr: postfix_expr OPEN_RND . argument_expr_list_opt CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 12 (argument_expr_list_opt)

    primary_expr            go to state 54
    string_seq              go to state 55
    argument_expr_list_opt  go to state 214
    postfix_expr            go to state 56
    argument_expr_list      go to state 215
    unary_expr              go to state 57
    unary_operator          go to state 58
    cast_expr               go to state 59
    multiplicative_expr     go to state 60
    additive_expr           go to state 61
    shift_expr              go to state 62
    relational_expr         go to state 63
    equality_expr           go to state 64
    AND_expr                go to state 65
    exclusive_OR_expr       go to state 66
    inclusive_OR_expr       go to state 67
    logical_AND_expr        go to state 68
    logical_OR_expr         go to state 69
    conditional_expr        go to state 70
    assignment_expr         go to state 216


state 132

   17 postfix_expr: postfix_expr DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 217


state 133

   18 postfix_expr: postfix_expr DEREF . IDENTIFIER

    IDENTIFIER  shift, and go to state 218


state 134

   19 postfix_expr: postfix_expr PLUSPLUS .

    $default  reduce using rule 19 (postfix_expr)


state 135

   20 postfix_expr: postfix_expr MINUSMINUS .

    $default  reduce using rule 20 (postfix_expr)


state 136

   15 postfix_expr: postfix_expr OPEN_SQUARE . expression CLOSE_SQUARE

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 219


state 137

   71 assignment_operator: ASSIGN .

    $default  reduce using rule 71 (assignment_operator)


state 138

   75 assignment_operator: PLUSASSIGN .

    $default  reduce using rule 75 (assignment_operator)


state 139

   76 assignment_operator: MINUSASSIGN .

    $default  reduce using rule 76 (assignment_operator)


state 140

   72 assignment_operator: TIMESASSIGN .

    $default  reduce using rule 72 (assignment_operator)


state 141

   77 assignment_operator: LSASSIGN .

    $default  reduce using rule 77 (assignment_operator)


state 142

   78 assignment_operator: RSASSIGN .

    $default  reduce using rule 78 (assignment_operator)


state 143

   79 assignment_operator: ANDASSIGN .

    $default  reduce using rule 79 (assignment_operator)


state 144

   73 assignment_operator: DIVASSIGN .

    $default  reduce using rule 73 (assignment_operator)


state 145

   74 assignment_operator: REMASSIGN .

    $default  reduce using rule 74 (assignment_operator)


state 146

   80 assignment_operator: ORASSIGN .

    $default  reduce using rule 80 (assignment_operator)


state 147

   81 assignment_operator: XORASSIGN .

    $default  reduce using rule 81 (assignment_operator)


state 148

   70 assignment_expr: unary_expr assignment_operator . assignment_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 220


state 149

   28 unary_expr: unary_operator cast_expr .

    $default  reduce using rule 28 (unary_expr)


state 150

   40 multiplicative_expr: multiplicative_expr TIMES . cast_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr    go to state 54
    string_seq      go to state 55
    postfix_expr    go to state 56
    unary_expr      go to state 104
    unary_operator  go to state 58
    cast_expr       go to state 221


state 151

   42 multiplicative_expr: multiplicative_expr REMAINDER . cast_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr    go to state 54
    string_seq      go to state 55
    postfix_expr    go to state 56
    unary_expr      go to state 104
    unary_operator  go to state 58
    cast_expr       go to state 222


state 152

   41 multiplicative_expr: multiplicative_expr DIVIDE . cast_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr    go to state 54
    string_seq      go to state 55
    postfix_expr    go to state 56
    unary_expr      go to state 104
    unary_operator  go to state 58
    cast_expr       go to state 223


state 153

   44 additive_expr: additive_expr ADD . multiplicative_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 224


state 154

   45 additive_expr: additive_expr MINUS . multiplicative_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 225


state 155

   47 shift_expr: shift_expr LEFTSHIFT . additive_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 226


state 156

   48 shift_expr: shift_expr RIGHTSHIFT . additive_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 227


state 157

   50 relational_expr: relational_expr LT . shift_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 228


state 158

   52 relational_expr: relational_expr LE . shift_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 229


state 159

   53 relational_expr: relational_expr GE . shift_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 230


state 160

   51 relational_expr: relational_expr GT . shift_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 231


state 161

   55 equality_expr: equality_expr EQUAL . relational_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 232


state 162

   56 equality_expr: equality_expr NOTEQUAL . relational_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 233


state 163

   58 AND_expr: AND_expr BITAND . equality_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 234


state 164

   60 exclusive_OR_expr: exclusive_OR_expr XOR . AND_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 235


state 165

   62 inclusive_OR_expr: inclusive_OR_expr OR . exclusive_OR_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 236


state 166

   64 logical_AND_expr: logical_AND_expr ANDTEST . inclusive_OR_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 237


state 167

   66 logical_OR_expr: logical_OR_expr ORTEST . logical_AND_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 238


state 168

   68 conditional_expr: logical_OR_expr QUESTION . expression COLON conditional_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 239


state 169

   83 expression: expression COMMA . assignment_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 240


state 170

  163 pointer: TIMES . type_qualifier_list_opt
  164        | TIMES . type_qualifier_list_opt pointer

    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    RESTRICT  shift, and go to state 51

    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier           go to state 121
    type_qualifier_list_opt  go to state 122
    type_qualifier_list      go to state 123


state 171

   85 declaration: declaration_specifiers SEMICOLON .

    $default  reduce using rule 85 (declaration)


state 172

  189 typedef_name: IDENTIFIER .

    $default  reduce using rule 189 (typedef_name)


state 173

   92 declaration_specifiers: declaration_specifiers decl_specifier .

    $default  reduce using rule 92 (declaration_specifiers)


state 174

   86 declaration: declaration_specifiers init_declarator_list . SEMICOLON
   94 init_declarator_list: init_declarator_list . COMMA init_declarator

    COMMA      shift, and go to state 241
    SEMICOLON  shift, and go to state 242


state 175

   93 init_declarator_list: init_declarator .

    $default  reduce using rule 93 (init_declarator_list)


state 176

  147 declarator: pointer_opt . direct_declarator
  148 fndef_declarator: pointer_opt . fndef_direct_declarator

    OPEN_RND    shift, and go to state 181
    IDENTIFIER  shift, and go to state 182

    direct_declarator        go to state 243
    fndef_direct_declarator  go to state 184


state 177

   95 init_declarator: declarator .
   96                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 244

    $default  reduce using rule 95 (init_declarator)


state 178

  233 function_header: declaration_specifiers fndef_declarator . declaration_list_opt OPEN_CURL

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    $default  reduce using rule 231 (declaration_list_opt)

    declaration                go to state 185
    decl_specifier             go to state 74
    declaration_specifiers     go to state 186
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    typedef_name               go to state 86
    declaration_list_opt       go to state 245
    declaration_list           go to state 188


state 179

  118 identifier_opt: IDENTIFIER .
  120 struct_or_union_specifier: struct_or_union IDENTIFIER .

    OPEN_CURL  reduce using rule 118 (identifier_opt)
    $default   reduce using rule 120 (struct_or_union_specifier)


state 180

  119 struct_or_union_specifier: struct_or_union identifier_opt . OPEN_CURL struct_declaration_list CLOSE_CURL

    OPEN_CURL  shift, and go to state 246


state 181

  154 direct_declarator: OPEN_RND . declarator CLOSE_RND

    TIMES  shift, and go to state 170

    $default  reduce using rule 145 (pointer_opt)

    pointer_opt  go to state 247
    declarator   go to state 248
    pointer      go to state 85


state 182

  153 direct_declarator: IDENTIFIER .

    $default  reduce using rule 153 (direct_declarator)


state 183

  155 direct_declarator: direct_declarator . OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE
  156                  | direct_declarator . OPEN_SQUARE type_qualifier_list STATIC assignment_expr CLOSE_SQUARE
  157                  | direct_declarator . OPEN_SQUARE type_qualifier_list_opt TIMES CLOSE_SQUARE
  159 fndef_direct_declarator: direct_declarator . OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE
  160                        | direct_declarator . OPEN_RND parameter_type_list CLOSE_RND
  161                        | direct_declarator . OPEN_RND OPEN_RND parameter_type_list CLOSE_RND CLOSE_RND
  162                        | direct_declarator . OPEN_RND CLOSE_RND

    OPEN_RND     shift, and go to state 249
    OPEN_SQUARE  shift, and go to state 250


state 184

  148 fndef_declarator: pointer_opt fndef_direct_declarator .
  158 direct_declarator: fndef_direct_declarator .

    OPEN_RND     reduce using rule 158 (direct_declarator)
    COMMA        reduce using rule 158 (direct_declarator)
    SEMICOLON    reduce using rule 158 (direct_declarator)
    OPEN_SQUARE  reduce using rule 158 (direct_declarator)
    ASSIGN       reduce using rule 158 (direct_declarator)
    $default     reduce using rule 148 (fndef_declarator)


state 185

  235 declaration_list: declaration .

    $default  reduce using rule 235 (declaration_list)


state 186

   85 declaration: declaration_specifiers . SEMICOLON
   86            | declaration_specifiers . init_declarator_list SEMICOLON
   92 declaration_specifiers: declaration_specifiers . decl_specifier

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    TIMES       shift, and go to state 170
    SEMICOLON   shift, and go to state 171
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    IDENTIFIER  [reduce using rule 145 (pointer_opt)]
    $default    reduce using rule 145 (pointer_opt)

    decl_specifier             go to state 173
    init_declarator_list       go to state 174
    init_declarator            go to state 175
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    pointer_opt                go to state 247
    declarator                 go to state 177
    pointer                    go to state 85
    typedef_name               go to state 86


state 187

  234 function_header: fndef_declarator declaration_list_opt . OPEN_CURL

    OPEN_CURL  shift, and go to state 251


state 188

  232 declaration_list_opt: declaration_list .
  236 declaration_list: declaration_list . declaration

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    $default  reduce using rule 232 (declaration_list_opt)

    declaration                go to state 252
    decl_specifier             go to state 74
    declaration_specifiers     go to state 186
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    typedef_name               go to state 86


state 189

  216 expression_statement: expr_opt SEMICOLON .

    $default  reduce using rule 216 (expression_statement)


state 190

  134 enum_specifier: ENUM identifier_opt OPEN_CURL . enumerator_list CLOSE_CURL
  135               | ENUM identifier_opt OPEN_CURL . enumerator_list COMMA CLOSE_CURL

    IDENTIFIER  shift, and go to state 253

    enumerator_list  go to state 254
    enumerator       go to state 255


state 191

   83 expression: expression . COMMA assignment_expr
  217 selection_header: IF OPEN_RND expression . CLOSE_RND

    CLOSE_RND  shift, and go to state 256
    COMMA      shift, and go to state 169


state 192

   83 expression: expression . COMMA assignment_expr
  221 iteration_header: WHILE OPEN_RND expression . CLOSE_RND

    CLOSE_RND  shift, and go to state 257
    COMMA      shift, and go to state 169


state 193

  224 iteration_header: FOR OPEN_RND declaration . expr_opt SEMICOLON expr_opt CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 219 (expr_opt)

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 72
    expr_opt             go to state 258


state 194

  223 iteration_header: FOR OPEN_RND expr_opt . SEMICOLON expr_opt SEMICOLON expr_opt CLOSE_RND

    SEMICOLON  shift, and go to state 259


state 195

   83 expression: expression . COMMA assignment_expr
  218 selection_header: SWITCH OPEN_RND expression . CLOSE_RND

    CLOSE_RND  shift, and go to state 260
    COMMA      shift, and go to state 169


state 196

  213 labeled_statement: CASE constant_expr COLON . $@1 statement

    $default  reduce using rule 212 ($@1)

    $@1  go to state 261


state 197

  215 labeled_statement: DEFAULT COLON $@2 . statement

    IF              shift, and go to state 23
    ELSE            shift, and go to state 24
    WHILE           shift, and go to state 25
    FOR             shift, and go to state 26
    DO              shift, and go to state 27
    SWITCH          shift, and go to state 28
    CASE            shift, and go to state 29
    DEFAULT         shift, and go to state 30
    BREAK           shift, and go to state 31
    CONTINUE        shift, and go to state 32
    RETURN          shift, and go to state 33
    GOTO            shift, and go to state 34
    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    OPEN_CURL       shift, and go to state 45
    CLOSE_CURL      shift, and go to state 46
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 211
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 219 (expr_opt)

    primary_expr          go to state 54
    string_seq            go to state 55
    postfix_expr          go to state 56
    unary_expr            go to state 57
    unary_operator        go to state 58
    cast_expr             go to state 59
    multiplicative_expr   go to state 60
    additive_expr         go to state 61
    shift_expr            go to state 62
    relational_expr       go to state 63
    equality_expr         go to state 64
    AND_expr              go to state 65
    exclusive_OR_expr     go to state 66
    inclusive_OR_expr     go to state 67
    logical_AND_expr      go to state 68
    logical_OR_expr       go to state 69
    conditional_expr      go to state 70
    assignment_expr       go to state 71
    expression            go to state 72
    statement             go to state 262
    labeled_statement     go to state 88
    expression_statement  go to state 89
    selection_header      go to state 90
    expr_opt              go to state 91
    iteration_header      go to state 92
    jump_statement        go to state 93


state 198

  228 jump_statement: RETURN expr_opt SEMICOLON .

    $default  reduce using rule 228 (jump_statement)


state 199

  225 jump_statement: GOTO IDENTIFIER SEMICOLON .

    $default  reduce using rule 225 (jump_statement)


state 200

   21 postfix_expr: OPEN_RND type_name . CLOSE_RND OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND type_name . CLOSE_RND OPEN_CURL initializer_list COMMA CLOSE_CURL
   30 unary_expr: SIZEOF OPEN_RND type_name . CLOSE_RND

    CLOSE_RND  shift, and go to state 263


state 201

    7 primary_expr: OPEN_RND expression CLOSE_RND .

    $default  reduce using rule 7 (primary_expr)


state 202

  129 specifier_qualifier_list: specifier_qualifier_list spec_qual .

    $default  reduce using rule 129 (specifier_qualifier_list)


state 203

  178 abstract_declarator: pointer_opt . direct_abstract_declarator

    OPEN_RND  shift, and go to state 264

    OPEN_RND  [reduce using rule 179 (direct_abstract_declarator_opt)]
    $default  reduce using rule 179 (direct_abstract_declarator_opt)

    direct_abstract_declarator_opt  go to state 265
    direct_abstract_declarator      go to state 266


state 204

  146 pointer_opt: pointer .
  177 abstract_declarator: pointer .

    CLOSE_RND  reduce using rule 177 (abstract_declarator)
    COMMA      reduce using rule 177 (abstract_declarator)
    $default   reduce using rule 146 (pointer_opt)


state 205

  176 type_name: specifier_qualifier_list abstract_declarator_opt .

    $default  reduce using rule 176 (type_name)


state 206

  172 abstract_declarator_opt: abstract_declarator .

    $default  reduce using rule 172 (abstract_declarator_opt)


state 207

   21 postfix_expr: OPEN_RND type_name CLOSE_RND . OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND type_name CLOSE_RND . OPEN_CURL initializer_list COMMA CLOSE_CURL
   38 cast_expr: OPEN_RND type_name CLOSE_RND . cast_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    OPEN_CURL       shift, and go to state 267
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr    go to state 54
    string_seq      go to state 55
    postfix_expr    go to state 56
    unary_expr      go to state 104
    unary_operator  go to state 58
    cast_expr       go to state 268


state 208

  164 pointer: TIMES type_qualifier_list_opt pointer .

    $default  reduce using rule 164 (pointer)


state 209

  166 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 166 (type_qualifier_list)


state 210

   21 postfix_expr: OPEN_RND type_name . CLOSE_RND OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND type_name . CLOSE_RND OPEN_CURL initializer_list COMMA CLOSE_CURL

    CLOSE_RND  shift, and go to state 269


state 211

    4 primary_expr: IDENTIFIER .
  211 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 127

    $default  reduce using rule 4 (primary_expr)


state 212

  211 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 211 (labeled_statement)


state 213

   11 string_seq: string_seq IDENTIFIER OPEN_RND . constant_expr CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 105
    constant_expr        go to state 270


state 214

   16 postfix_expr: postfix_expr OPEN_RND argument_expr_list_opt . CLOSE_RND

    CLOSE_RND  shift, and go to state 271


state 215

   13 argument_expr_list_opt: argument_expr_list .
   24 argument_expr_list: argument_expr_list . COMMA assignment_expr

    COMMA  shift, and go to state 272

    $default  reduce using rule 13 (argument_expr_list_opt)


state 216

   23 argument_expr_list: assignment_expr .

    $default  reduce using rule 23 (argument_expr_list)


state 217

   17 postfix_expr: postfix_expr DOT IDENTIFIER .

    $default  reduce using rule 17 (postfix_expr)


state 218

   18 postfix_expr: postfix_expr DEREF IDENTIFIER .

    $default  reduce using rule 18 (postfix_expr)


state 219

   15 postfix_expr: postfix_expr OPEN_SQUARE expression . CLOSE_SQUARE
   83 expression: expression . COMMA assignment_expr

    COMMA         shift, and go to state 169
    CLOSE_SQUARE  shift, and go to state 273


state 220

   70 assignment_expr: unary_expr assignment_operator assignment_expr .

    $default  reduce using rule 70 (assignment_expr)


state 221

   40 multiplicative_expr: multiplicative_expr TIMES cast_expr .

    $default  reduce using rule 40 (multiplicative_expr)


state 222

   42 multiplicative_expr: multiplicative_expr REMAINDER cast_expr .

    $default  reduce using rule 42 (multiplicative_expr)


state 223

   41 multiplicative_expr: multiplicative_expr DIVIDE cast_expr .

    $default  reduce using rule 41 (multiplicative_expr)


state 224

   40 multiplicative_expr: multiplicative_expr . TIMES cast_expr
   41                    | multiplicative_expr . DIVIDE cast_expr
   42                    | multiplicative_expr . REMAINDER cast_expr
   44 additive_expr: additive_expr ADD multiplicative_expr .

    TIMES      shift, and go to state 150
    REMAINDER  shift, and go to state 151
    DIVIDE     shift, and go to state 152

    $default  reduce using rule 44 (additive_expr)


state 225

   40 multiplicative_expr: multiplicative_expr . TIMES cast_expr
   41                    | multiplicative_expr . DIVIDE cast_expr
   42                    | multiplicative_expr . REMAINDER cast_expr
   45 additive_expr: additive_expr MINUS multiplicative_expr .

    TIMES      shift, and go to state 150
    REMAINDER  shift, and go to state 151
    DIVIDE     shift, and go to state 152

    $default  reduce using rule 45 (additive_expr)


state 226

   44 additive_expr: additive_expr . ADD multiplicative_expr
   45              | additive_expr . MINUS multiplicative_expr
   47 shift_expr: shift_expr LEFTSHIFT additive_expr .

    ADD    shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 47 (shift_expr)


state 227

   44 additive_expr: additive_expr . ADD multiplicative_expr
   45              | additive_expr . MINUS multiplicative_expr
   48 shift_expr: shift_expr RIGHTSHIFT additive_expr .

    ADD    shift, and go to state 153
    MINUS  shift, and go to state 154

    $default  reduce using rule 48 (shift_expr)


state 228

   47 shift_expr: shift_expr . LEFTSHIFT additive_expr
   48           | shift_expr . RIGHTSHIFT additive_expr
   50 relational_expr: relational_expr LT shift_expr .

    LEFTSHIFT   shift, and go to state 155
    RIGHTSHIFT  shift, and go to state 156

    $default  reduce using rule 50 (relational_expr)


state 229

   47 shift_expr: shift_expr . LEFTSHIFT additive_expr
   48           | shift_expr . RIGHTSHIFT additive_expr
   52 relational_expr: relational_expr LE shift_expr .

    LEFTSHIFT   shift, and go to state 155
    RIGHTSHIFT  shift, and go to state 156

    $default  reduce using rule 52 (relational_expr)


state 230

   47 shift_expr: shift_expr . LEFTSHIFT additive_expr
   48           | shift_expr . RIGHTSHIFT additive_expr
   53 relational_expr: relational_expr GE shift_expr .

    LEFTSHIFT   shift, and go to state 155
    RIGHTSHIFT  shift, and go to state 156

    $default  reduce using rule 53 (relational_expr)


state 231

   47 shift_expr: shift_expr . LEFTSHIFT additive_expr
   48           | shift_expr . RIGHTSHIFT additive_expr
   51 relational_expr: relational_expr GT shift_expr .

    LEFTSHIFT   shift, and go to state 155
    RIGHTSHIFT  shift, and go to state 156

    $default  reduce using rule 51 (relational_expr)


state 232

   50 relational_expr: relational_expr . LT shift_expr
   51                | relational_expr . GT shift_expr
   52                | relational_expr . LE shift_expr
   53                | relational_expr . GE shift_expr
   55 equality_expr: equality_expr EQUAL relational_expr .

    LT  shift, and go to state 157
    LE  shift, and go to state 158
    GE  shift, and go to state 159
    GT  shift, and go to state 160

    $default  reduce using rule 55 (equality_expr)


state 233

   50 relational_expr: relational_expr . LT shift_expr
   51                | relational_expr . GT shift_expr
   52                | relational_expr . LE shift_expr
   53                | relational_expr . GE shift_expr
   56 equality_expr: equality_expr NOTEQUAL relational_expr .

    LT  shift, and go to state 157
    LE  shift, and go to state 158
    GE  shift, and go to state 159
    GT  shift, and go to state 160

    $default  reduce using rule 56 (equality_expr)


state 234

   55 equality_expr: equality_expr . EQUAL relational_expr
   56              | equality_expr . NOTEQUAL relational_expr
   58 AND_expr: AND_expr BITAND equality_expr .

    EQUAL     shift, and go to state 161
    NOTEQUAL  shift, and go to state 162

    $default  reduce using rule 58 (AND_expr)


state 235

   58 AND_expr: AND_expr . BITAND equality_expr
   60 exclusive_OR_expr: exclusive_OR_expr XOR AND_expr .

    BITAND  shift, and go to state 163

    $default  reduce using rule 60 (exclusive_OR_expr)


state 236

   60 exclusive_OR_expr: exclusive_OR_expr . XOR AND_expr
   62 inclusive_OR_expr: inclusive_OR_expr OR exclusive_OR_expr .

    XOR  shift, and go to state 164

    $default  reduce using rule 62 (inclusive_OR_expr)


state 237

   62 inclusive_OR_expr: inclusive_OR_expr . OR exclusive_OR_expr
   64 logical_AND_expr: logical_AND_expr ANDTEST inclusive_OR_expr .

    OR  shift, and go to state 165

    $default  reduce using rule 64 (logical_AND_expr)


state 238

   64 logical_AND_expr: logical_AND_expr . ANDTEST inclusive_OR_expr
   66 logical_OR_expr: logical_OR_expr ORTEST logical_AND_expr .

    ANDTEST  shift, and go to state 166

    $default  reduce using rule 66 (logical_OR_expr)


state 239

   68 conditional_expr: logical_OR_expr QUESTION expression . COLON conditional_expr
   83 expression: expression . COMMA assignment_expr

    COMMA  shift, and go to state 169
    COLON  shift, and go to state 274


state 240

   83 expression: expression COMMA assignment_expr .

    $default  reduce using rule 83 (expression)


state 241

   94 init_declarator_list: init_declarator_list COMMA . init_declarator

    TIMES  shift, and go to state 170

    $default  reduce using rule 145 (pointer_opt)

    init_declarator  go to state 275
    pointer_opt      go to state 247
    declarator       go to state 177
    pointer          go to state 85


state 242

   86 declaration: declaration_specifiers init_declarator_list SEMICOLON .

    $default  reduce using rule 86 (declaration)


state 243

  147 declarator: pointer_opt direct_declarator .
  155 direct_declarator: direct_declarator . OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE
  156                  | direct_declarator . OPEN_SQUARE type_qualifier_list STATIC assignment_expr CLOSE_SQUARE
  157                  | direct_declarator . OPEN_SQUARE type_qualifier_list_opt TIMES CLOSE_SQUARE
  159 fndef_direct_declarator: direct_declarator . OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE
  160                        | direct_declarator . OPEN_RND parameter_type_list CLOSE_RND
  161                        | direct_declarator . OPEN_RND OPEN_RND parameter_type_list CLOSE_RND CLOSE_RND
  162                        | direct_declarator . OPEN_RND CLOSE_RND

    OPEN_RND     shift, and go to state 249
    OPEN_SQUARE  shift, and go to state 250

    $default  reduce using rule 147 (declarator)


state 244

   96 init_declarator: declarator ASSIGN . initializer

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    OPEN_CURL       shift, and go to state 276
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 277
    initializer          go to state 278


state 245

  233 function_header: declaration_specifiers fndef_declarator declaration_list_opt . OPEN_CURL

    OPEN_CURL  shift, and go to state 279


state 246

  119 struct_or_union_specifier: struct_or_union identifier_opt OPEN_CURL . struct_declaration_list CLOSE_CURL

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    IDENTIFIER  shift, and go to state 172
    RESTRICT    shift, and go to state 51

    type_specifier             go to state 116
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    struct_declaration_list    go to state 280
    struct_declaration         go to state 281
    spec_qual                  go to state 117
    specifier_qualifier_list   go to state 282
    enum_specifier             go to state 80
    type_qualifier             go to state 119
    typedef_name               go to state 86


state 247

  147 declarator: pointer_opt . direct_declarator

    OPEN_RND    shift, and go to state 181
    IDENTIFIER  shift, and go to state 182

    direct_declarator        go to state 243
    fndef_direct_declarator  go to state 283


state 248

  154 direct_declarator: OPEN_RND declarator . CLOSE_RND

    CLOSE_RND  shift, and go to state 284


state 249

  160 fndef_direct_declarator: direct_declarator OPEN_RND . parameter_type_list CLOSE_RND
  161                        | direct_declarator OPEN_RND . OPEN_RND parameter_type_list CLOSE_RND CLOSE_RND
  162                        | direct_declarator OPEN_RND . CLOSE_RND

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    OPEN_RND    shift, and go to state 285
    CLOSE_RND   shift, and go to state 286
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    decl_specifier             go to state 74
    declaration_specifiers     go to state 287
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    parameter_type_list        go to state 288
    parameter_list             go to state 289
    parameter_declaration      go to state 290
    typedef_name               go to state 86


state 250

  155 direct_declarator: direct_declarator OPEN_SQUARE . STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE
  156                  | direct_declarator OPEN_SQUARE . type_qualifier_list STATIC assignment_expr CLOSE_SQUARE
  157                  | direct_declarator OPEN_SQUARE . type_qualifier_list_opt TIMES CLOSE_SQUARE
  159 fndef_direct_declarator: direct_declarator OPEN_SQUARE . type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE

    STATIC    shift, and go to state 291
    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    RESTRICT  shift, and go to state 51

    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier           go to state 121
    type_qualifier_list_opt  go to state 292
    type_qualifier_list      go to state 293


state 251

  234 function_header: fndef_declarator declaration_list_opt OPEN_CURL .

    $default  reduce using rule 234 (function_header)


state 252

  236 declaration_list: declaration_list declaration .

    $default  reduce using rule 236 (declaration_list)


state 253

  139 enumerator: IDENTIFIER .
  140           | IDENTIFIER . ASSIGN constant_expr

    ASSIGN  shift, and go to state 294

    $default  reduce using rule 139 (enumerator)


state 254

  134 enum_specifier: ENUM identifier_opt OPEN_CURL enumerator_list . CLOSE_CURL
  135               | ENUM identifier_opt OPEN_CURL enumerator_list . COMMA CLOSE_CURL
  138 enumerator_list: enumerator_list . COMMA enumerator

    COMMA       shift, and go to state 295
    CLOSE_CURL  shift, and go to state 296


state 255

  137 enumerator_list: enumerator .

    $default  reduce using rule 137 (enumerator_list)


state 256

  217 selection_header: IF OPEN_RND expression CLOSE_RND .

    $default  reduce using rule 217 (selection_header)


state 257

  221 iteration_header: WHILE OPEN_RND expression CLOSE_RND .

    $default  reduce using rule 221 (iteration_header)


state 258

  224 iteration_header: FOR OPEN_RND declaration expr_opt . SEMICOLON expr_opt CLOSE_RND

    SEMICOLON  shift, and go to state 297


state 259

  223 iteration_header: FOR OPEN_RND expr_opt SEMICOLON . expr_opt SEMICOLON expr_opt CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 219 (expr_opt)

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 72
    expr_opt             go to state 298


state 260

  218 selection_header: SWITCH OPEN_RND expression CLOSE_RND .

    $default  reduce using rule 218 (selection_header)


state 261

  213 labeled_statement: CASE constant_expr COLON $@1 . statement

    IF              shift, and go to state 23
    ELSE            shift, and go to state 24
    WHILE           shift, and go to state 25
    FOR             shift, and go to state 26
    DO              shift, and go to state 27
    SWITCH          shift, and go to state 28
    CASE            shift, and go to state 29
    DEFAULT         shift, and go to state 30
    BREAK           shift, and go to state 31
    CONTINUE        shift, and go to state 32
    RETURN          shift, and go to state 33
    GOTO            shift, and go to state 34
    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    OPEN_CURL       shift, and go to state 45
    CLOSE_CURL      shift, and go to state 46
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 211
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 219 (expr_opt)

    primary_expr          go to state 54
    string_seq            go to state 55
    postfix_expr          go to state 56
    unary_expr            go to state 57
    unary_operator        go to state 58
    cast_expr             go to state 59
    multiplicative_expr   go to state 60
    additive_expr         go to state 61
    shift_expr            go to state 62
    relational_expr       go to state 63
    equality_expr         go to state 64
    AND_expr              go to state 65
    exclusive_OR_expr     go to state 66
    inclusive_OR_expr     go to state 67
    logical_AND_expr      go to state 68
    logical_OR_expr       go to state 69
    conditional_expr      go to state 70
    assignment_expr       go to state 71
    expression            go to state 72
    statement             go to state 299
    labeled_statement     go to state 88
    expression_statement  go to state 89
    selection_header      go to state 90
    expr_opt              go to state 91
    iteration_header      go to state 92
    jump_statement        go to state 93


state 262

  215 labeled_statement: DEFAULT COLON $@2 statement .

    $default  reduce using rule 215 (labeled_statement)


state 263

   21 postfix_expr: OPEN_RND type_name CLOSE_RND . OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND type_name CLOSE_RND . OPEN_CURL initializer_list COMMA CLOSE_CURL
   30 unary_expr: SIZEOF OPEN_RND type_name CLOSE_RND .

    OPEN_CURL  shift, and go to state 267

    $default  reduce using rule 30 (unary_expr)


state 264

  183 direct_abstract_declarator: OPEN_RND . abstract_declarator CLOSE_RND

    TIMES  shift, and go to state 170

    $default  reduce using rule 145 (pointer_opt)

    pointer_opt          go to state 203
    pointer              go to state 204
    abstract_declarator  go to state 300


state 265

  184 direct_abstract_declarator: direct_abstract_declarator_opt . OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE
  185                           | direct_abstract_declarator_opt . OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE
  186                           | direct_abstract_declarator_opt . OPEN_SQUARE type_qualifier_list STATIC assignment_expr CLOSE_SQUARE
  187                           | direct_abstract_declarator_opt . OPEN_SQUARE TIMES CLOSE_SQUARE
  188                           | direct_abstract_declarator_opt . OPEN_RND parameter_type_list_opt CLOSE_RND

    OPEN_RND     shift, and go to state 301
    OPEN_SQUARE  shift, and go to state 302


state 266

  178 abstract_declarator: pointer_opt direct_abstract_declarator .
  180 direct_abstract_declarator_opt: direct_abstract_declarator .

    OPEN_RND     reduce using rule 180 (direct_abstract_declarator_opt)
    OPEN_SQUARE  reduce using rule 180 (direct_abstract_declarator_opt)
    $default     reduce using rule 178 (abstract_declarator)


state 267

   21 postfix_expr: OPEN_RND type_name CLOSE_RND OPEN_CURL . initializer_list CLOSE_CURL
   22             | OPEN_RND type_name CLOSE_RND OPEN_CURL . initializer_list COMMA CLOSE_CURL

    DOT          shift, and go to state 303
    OPEN_SQUARE  shift, and go to state 304

    COMMA       reduce using rule 197 (initializer_list)
    CLOSE_CURL  reduce using rule 197 (initializer_list)
    $default    reduce using rule 193 (designation_opt)

    designation_opt   go to state 305
    initializer_list  go to state 306
    designation       go to state 307
    designator_list   go to state 308
    designator        go to state 309


state 268

   38 cast_expr: OPEN_RND type_name CLOSE_RND cast_expr .

    $default  reduce using rule 38 (cast_expr)


state 269

   21 postfix_expr: OPEN_RND type_name CLOSE_RND . OPEN_CURL initializer_list CLOSE_CURL
   22             | OPEN_RND type_name CLOSE_RND . OPEN_CURL initializer_list COMMA CLOSE_CURL

    OPEN_CURL  shift, and go to state 267


state 270

   11 string_seq: string_seq IDENTIFIER OPEN_RND constant_expr . CLOSE_RND

    CLOSE_RND  shift, and go to state 310


state 271

   16 postfix_expr: postfix_expr OPEN_RND argument_expr_list_opt CLOSE_RND .

    $default  reduce using rule 16 (postfix_expr)


state 272

   24 argument_expr_list: argument_expr_list COMMA . assignment_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 311


state 273

   15 postfix_expr: postfix_expr OPEN_SQUARE expression CLOSE_SQUARE .

    $default  reduce using rule 15 (postfix_expr)


state 274

   68 conditional_expr: logical_OR_expr QUESTION expression COLON . conditional_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 312


state 275

   94 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 94 (init_declarator_list)


state 276

  191 initializer: OPEN_CURL . initializer_list CLOSE_CURL
  192            | OPEN_CURL . initializer_list COMMA CLOSE_CURL

    DOT          shift, and go to state 303
    OPEN_SQUARE  shift, and go to state 304

    COMMA       reduce using rule 197 (initializer_list)
    CLOSE_CURL  reduce using rule 197 (initializer_list)
    $default    reduce using rule 193 (designation_opt)

    designation_opt   go to state 305
    initializer_list  go to state 313
    designation       go to state 307
    designator_list   go to state 308
    designator        go to state 309


state 277

  190 initializer: assignment_expr .

    $default  reduce using rule 190 (initializer)


state 278

   96 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 96 (init_declarator)


state 279

  233 function_header: declaration_specifiers fndef_declarator declaration_list_opt OPEN_CURL .

    $default  reduce using rule 233 (function_header)


state 280

  119 struct_or_union_specifier: struct_or_union identifier_opt OPEN_CURL struct_declaration_list . CLOSE_CURL
  124 struct_declaration_list: struct_declaration_list . struct_declaration

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    CLOSE_CURL  shift, and go to state 314
    IDENTIFIER  shift, and go to state 172
    RESTRICT    shift, and go to state 51

    type_specifier             go to state 116
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    struct_declaration         go to state 315
    spec_qual                  go to state 117
    specifier_qualifier_list   go to state 282
    enum_specifier             go to state 80
    type_qualifier             go to state 119
    typedef_name               go to state 86


state 281

  123 struct_declaration_list: struct_declaration .

    $default  reduce using rule 123 (struct_declaration_list)


state 282

  125 struct_declaration: specifier_qualifier_list . struct_declarator_list SEMICOLON
  129 specifier_qualifier_list: specifier_qualifier_list . spec_qual

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    TIMES       shift, and go to state 170
    COLON       shift, and go to state 316
    IDENTIFIER  shift, and go to state 172
    RESTRICT    shift, and go to state 51

    IDENTIFIER  [reduce using rule 145 (pointer_opt)]
    $default    reduce using rule 145 (pointer_opt)

    type_specifier             go to state 116
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    spec_qual                  go to state 202
    struct_declarator_list     go to state 317
    struct_declarator          go to state 318
    enum_specifier             go to state 80
    type_qualifier             go to state 119
    pointer_opt                go to state 247
    declarator                 go to state 319
    pointer                    go to state 85
    typedef_name               go to state 86


state 283

  158 direct_declarator: fndef_direct_declarator .

    $default  reduce using rule 158 (direct_declarator)


state 284

  154 direct_declarator: OPEN_RND declarator CLOSE_RND .

    $default  reduce using rule 154 (direct_declarator)


state 285

  161 fndef_direct_declarator: direct_declarator OPEN_RND OPEN_RND . parameter_type_list CLOSE_RND CLOSE_RND

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    decl_specifier             go to state 74
    declaration_specifiers     go to state 287
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    parameter_type_list        go to state 320
    parameter_list             go to state 289
    parameter_declaration      go to state 290
    typedef_name               go to state 86


state 286

  162 fndef_direct_declarator: direct_declarator OPEN_RND CLOSE_RND .

    $default  reduce using rule 162 (fndef_direct_declarator)


state 287

   92 declaration_specifiers: declaration_specifiers . decl_specifier
  173 parameter_declaration: declaration_specifiers . declarator
  174                      | declaration_specifiers .
  175                      | declaration_specifiers . abstract_declarator

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    TIMES       shift, and go to state 170
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    CLOSE_RND   reduce using rule 174 (parameter_declaration)
    COMMA       reduce using rule 174 (parameter_declaration)
    IDENTIFIER  [reduce using rule 145 (pointer_opt)]
    $default    reduce using rule 145 (pointer_opt)

    decl_specifier             go to state 173
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    pointer_opt                go to state 321
    declarator                 go to state 322
    pointer                    go to state 204
    abstract_declarator        go to state 323
    typedef_name               go to state 86


state 288

  160 fndef_direct_declarator: direct_declarator OPEN_RND parameter_type_list . CLOSE_RND

    CLOSE_RND  shift, and go to state 324


state 289

  167 parameter_type_list: parameter_list .
  168                    | parameter_list . COMMA ELLIPSIS
  170 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 325

    $default  reduce using rule 167 (parameter_type_list)


state 290

  169 parameter_list: parameter_declaration .

    $default  reduce using rule 169 (parameter_list)


state 291

  155 direct_declarator: direct_declarator OPEN_SQUARE STATIC . type_qualifier_list_opt assignment_expr CLOSE_SQUARE

    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    RESTRICT  shift, and go to state 51

    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier           go to state 121
    type_qualifier_list_opt  go to state 326
    type_qualifier_list      go to state 123


state 292

  157 direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list_opt . TIMES CLOSE_SQUARE
  159 fndef_direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list_opt . assignment_expr_opt CLOSE_SQUARE

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 327
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 151 (assignment_expr_opt)

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 328
    assignment_expr_opt  go to state 329


state 293

  150 type_qualifier_list_opt: type_qualifier_list .
  156 direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list . STATIC assignment_expr CLOSE_SQUARE
  166 type_qualifier_list: type_qualifier_list . type_qualifier

    STATIC    shift, and go to state 330
    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    RESTRICT  shift, and go to state 51

    $default  reduce using rule 150 (type_qualifier_list_opt)

    type_qualifier  go to state 209


state 294

  140 enumerator: IDENTIFIER ASSIGN . constant_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 105
    constant_expr        go to state 331


state 295

  135 enum_specifier: ENUM identifier_opt OPEN_CURL enumerator_list COMMA . CLOSE_CURL
  138 enumerator_list: enumerator_list COMMA . enumerator

    CLOSE_CURL  shift, and go to state 332
    IDENTIFIER  shift, and go to state 253

    enumerator  go to state 333


state 296

  134 enum_specifier: ENUM identifier_opt OPEN_CURL enumerator_list CLOSE_CURL .

    $default  reduce using rule 134 (enum_specifier)


state 297

  224 iteration_header: FOR OPEN_RND declaration expr_opt SEMICOLON . expr_opt CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 219 (expr_opt)

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 72
    expr_opt             go to state 334


state 298

  223 iteration_header: FOR OPEN_RND expr_opt SEMICOLON expr_opt . SEMICOLON expr_opt CLOSE_RND

    SEMICOLON  shift, and go to state 335


state 299

  213 labeled_statement: CASE constant_expr COLON $@1 statement .

    $default  reduce using rule 213 (labeled_statement)


state 300

  183 direct_abstract_declarator: OPEN_RND abstract_declarator . CLOSE_RND

    CLOSE_RND  shift, and go to state 336


state 301

  188 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_RND . parameter_type_list_opt CLOSE_RND

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    $default  reduce using rule 181 (parameter_type_list_opt)

    decl_specifier             go to state 74
    declaration_specifiers     go to state 287
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    parameter_type_list        go to state 337
    parameter_list             go to state 289
    parameter_declaration      go to state 290
    parameter_type_list_opt    go to state 338
    typedef_name               go to state 86


state 302

  184 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE . type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE
  185                           | direct_abstract_declarator_opt OPEN_SQUARE . STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE
  186                           | direct_abstract_declarator_opt OPEN_SQUARE . type_qualifier_list STATIC assignment_expr CLOSE_SQUARE
  187                           | direct_abstract_declarator_opt OPEN_SQUARE . TIMES CLOSE_SQUARE

    STATIC    shift, and go to state 339
    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    TIMES     shift, and go to state 340
    RESTRICT  shift, and go to state 51

    TIMES     [reduce using rule 149 (type_qualifier_list_opt)]
    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier           go to state 121
    type_qualifier_list_opt  go to state 341
    type_qualifier_list      go to state 342


state 303

  202 designator: DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 343


state 304

  201 designator: OPEN_SQUARE . constant_expr CLOSE_SQUARE

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 105
    constant_expr        go to state 344


state 305

  195 initializer_list: designation_opt . initializer

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    OPEN_CURL       shift, and go to state 276
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 277
    initializer          go to state 345


state 306

   21 postfix_expr: OPEN_RND type_name CLOSE_RND OPEN_CURL initializer_list . CLOSE_CURL
   22             | OPEN_RND type_name CLOSE_RND OPEN_CURL initializer_list . COMMA CLOSE_CURL
  196 initializer_list: initializer_list . COMMA designation_opt initializer

    COMMA       shift, and go to state 346
    CLOSE_CURL  shift, and go to state 347


state 307

  194 designation_opt: designation .

    $default  reduce using rule 194 (designation_opt)


state 308

  198 designation: designator_list . ASSIGN
  200 designator_list: designator_list . designator

    DOT          shift, and go to state 303
    OPEN_SQUARE  shift, and go to state 304
    ASSIGN       shift, and go to state 348

    designator  go to state 349


state 309

  199 designator_list: designator .

    $default  reduce using rule 199 (designator_list)


state 310

   11 string_seq: string_seq IDENTIFIER OPEN_RND constant_expr CLOSE_RND .

    $default  reduce using rule 11 (string_seq)


state 311

   24 argument_expr_list: argument_expr_list COMMA assignment_expr .

    $default  reduce using rule 24 (argument_expr_list)


state 312

   68 conditional_expr: logical_OR_expr QUESTION expression COLON conditional_expr .

    $default  reduce using rule 68 (conditional_expr)


state 313

  191 initializer: OPEN_CURL initializer_list . CLOSE_CURL
  192            | OPEN_CURL initializer_list . COMMA CLOSE_CURL
  196 initializer_list: initializer_list . COMMA designation_opt initializer

    COMMA       shift, and go to state 350
    CLOSE_CURL  shift, and go to state 351


state 314

  119 struct_or_union_specifier: struct_or_union identifier_opt OPEN_CURL struct_declaration_list CLOSE_CURL .

    $default  reduce using rule 119 (struct_or_union_specifier)


state 315

  124 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 124 (struct_declaration_list)


state 316

  133 struct_declarator: COLON . constant_expr

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 104
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 105
    constant_expr        go to state 352


state 317

  125 struct_declaration: specifier_qualifier_list struct_declarator_list . SEMICOLON
  131 struct_declarator_list: struct_declarator_list . COMMA struct_declarator

    COMMA      shift, and go to state 353
    SEMICOLON  shift, and go to state 354


state 318

  130 struct_declarator_list: struct_declarator .

    $default  reduce using rule 130 (struct_declarator_list)


state 319

  132 struct_declarator: declarator .

    $default  reduce using rule 132 (struct_declarator)


state 320

  161 fndef_direct_declarator: direct_declarator OPEN_RND OPEN_RND parameter_type_list . CLOSE_RND CLOSE_RND

    CLOSE_RND  shift, and go to state 355


state 321

  147 declarator: pointer_opt . direct_declarator
  178 abstract_declarator: pointer_opt . direct_abstract_declarator

    OPEN_RND    shift, and go to state 356
    IDENTIFIER  shift, and go to state 182

    OPEN_RND  [reduce using rule 179 (direct_abstract_declarator_opt)]
    $default  reduce using rule 179 (direct_abstract_declarator_opt)

    direct_declarator               go to state 243
    fndef_direct_declarator         go to state 283
    direct_abstract_declarator_opt  go to state 265
    direct_abstract_declarator      go to state 266


state 322

  173 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 173 (parameter_declaration)


state 323

  175 parameter_declaration: declaration_specifiers abstract_declarator .

    $default  reduce using rule 175 (parameter_declaration)


state 324

  160 fndef_direct_declarator: direct_declarator OPEN_RND parameter_type_list CLOSE_RND .

    $default  reduce using rule 160 (fndef_direct_declarator)


state 325

  168 parameter_type_list: parameter_list COMMA . ELLIPSIS
  170 parameter_list: parameter_list COMMA . parameter_declaration

    _BOOL       shift, and go to state 1
    _COMPLEX    shift, and go to state 2
    _IMAGINARY  shift, and go to state 3
    AUTO        shift, and go to state 4
    STATIC      shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    TYPEDEF     shift, and go to state 8
    CHAR        shift, and go to state 9
    FLOAT       shift, and go to state 10
    DOUBLE      shift, and go to state 11
    INT         shift, and go to state 12
    SHORT       shift, and go to state 13
    LONG        shift, and go to state 14
    UNSIGNED    shift, and go to state 15
    SIGNED      shift, and go to state 16
    VOID        shift, and go to state 17
    CONST       shift, and go to state 18
    VOLATILE    shift, and go to state 19
    STRUCT      shift, and go to state 20
    UNION       shift, and go to state 21
    ENUM        shift, and go to state 22
    ELLIPSIS    shift, and go to state 357
    IDENTIFIER  shift, and go to state 172
    INLINE      shift, and go to state 50
    RESTRICT    shift, and go to state 51

    decl_specifier             go to state 74
    declaration_specifiers     go to state 287
    storage_class_specifier    go to state 76
    type_specifier             go to state 77
    struct_or_union_specifier  go to state 78
    struct_or_union            go to state 79
    enum_specifier             go to state 80
    type_qualifier             go to state 81
    function_specifier         go to state 82
    parameter_declaration      go to state 358
    typedef_name               go to state 86


state 326

  155 direct_declarator: direct_declarator OPEN_SQUARE STATIC type_qualifier_list_opt . assignment_expr CLOSE_SQUARE

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 359


state 327

   32 unary_operator: TIMES .
  157 direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list_opt TIMES . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 360

    $default  reduce using rule 32 (unary_operator)


state 328

  152 assignment_expr_opt: assignment_expr .

    $default  reduce using rule 152 (assignment_expr_opt)


state 329

  159 fndef_direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 361


state 330

  156 direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list STATIC . assignment_expr CLOSE_SQUARE

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 362


state 331

  140 enumerator: IDENTIFIER ASSIGN constant_expr .

    $default  reduce using rule 140 (enumerator)


state 332

  135 enum_specifier: ENUM identifier_opt OPEN_CURL enumerator_list COMMA CLOSE_CURL .

    $default  reduce using rule 135 (enum_specifier)


state 333

  138 enumerator_list: enumerator_list COMMA enumerator .

    $default  reduce using rule 138 (enumerator_list)


state 334

  224 iteration_header: FOR OPEN_RND declaration expr_opt SEMICOLON expr_opt . CLOSE_RND

    CLOSE_RND  shift, and go to state 363


state 335

  223 iteration_header: FOR OPEN_RND expr_opt SEMICOLON expr_opt SEMICOLON . expr_opt CLOSE_RND

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 219 (expr_opt)

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 71
    expression           go to state 72
    expr_opt             go to state 364


state 336

  183 direct_abstract_declarator: OPEN_RND abstract_declarator CLOSE_RND .

    $default  reduce using rule 183 (direct_abstract_declarator)


state 337

  182 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 182 (parameter_type_list_opt)


state 338

  188 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_RND parameter_type_list_opt . CLOSE_RND

    CLOSE_RND  shift, and go to state 365


state 339

  185 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE STATIC . type_qualifier_list_opt assignment_expr CLOSE_SQUARE

    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    RESTRICT  shift, and go to state 51

    $default  reduce using rule 149 (type_qualifier_list_opt)

    type_qualifier           go to state 121
    type_qualifier_list_opt  go to state 366
    type_qualifier_list      go to state 123


state 340

  187 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE TIMES . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 367


state 341

  184 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list_opt . assignment_expr_opt CLOSE_SQUARE

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    $default  reduce using rule 151 (assignment_expr_opt)

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 328
    assignment_expr_opt  go to state 368


state 342

  150 type_qualifier_list_opt: type_qualifier_list .
  166 type_qualifier_list: type_qualifier_list . type_qualifier
  186 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list . STATIC assignment_expr CLOSE_SQUARE

    STATIC    shift, and go to state 369
    CONST     shift, and go to state 18
    VOLATILE  shift, and go to state 19
    RESTRICT  shift, and go to state 51

    $default  reduce using rule 150 (type_qualifier_list_opt)

    type_qualifier  go to state 209


state 343

  202 designator: DOT IDENTIFIER .

    $default  reduce using rule 202 (designator)


state 344

  201 designator: OPEN_SQUARE constant_expr . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 370


state 345

  195 initializer_list: designation_opt initializer .

    $default  reduce using rule 195 (initializer_list)


state 346

   22 postfix_expr: OPEN_RND type_name CLOSE_RND OPEN_CURL initializer_list COMMA . CLOSE_CURL
  196 initializer_list: initializer_list COMMA . designation_opt initializer

    DOT          shift, and go to state 303
    CLOSE_CURL   shift, and go to state 371
    OPEN_SQUARE  shift, and go to state 304

    $default  reduce using rule 193 (designation_opt)

    designation_opt  go to state 372
    designation      go to state 307
    designator_list  go to state 308
    designator       go to state 309


state 347

   21 postfix_expr: OPEN_RND type_name CLOSE_RND OPEN_CURL initializer_list CLOSE_CURL .

    $default  reduce using rule 21 (postfix_expr)


state 348

  198 designation: designator_list ASSIGN .

    $default  reduce using rule 198 (designation)


state 349

  200 designator_list: designator_list designator .

    $default  reduce using rule 200 (designator_list)


state 350

  192 initializer: OPEN_CURL initializer_list COMMA . CLOSE_CURL
  196 initializer_list: initializer_list COMMA . designation_opt initializer

    DOT          shift, and go to state 303
    CLOSE_CURL   shift, and go to state 373
    OPEN_SQUARE  shift, and go to state 304

    $default  reduce using rule 193 (designation_opt)

    designation_opt  go to state 372
    designation      go to state 307
    designator_list  go to state 308
    designator       go to state 309


state 351

  191 initializer: OPEN_CURL initializer_list CLOSE_CURL .

    $default  reduce using rule 191 (initializer)


state 352

  133 struct_declarator: COLON constant_expr .

    $default  reduce using rule 133 (struct_declarator)


state 353

  131 struct_declarator_list: struct_declarator_list COMMA . struct_declarator

    TIMES  shift, and go to state 170
    COLON  shift, and go to state 316

    $default  reduce using rule 145 (pointer_opt)

    struct_declarator  go to state 374
    pointer_opt        go to state 247
    declarator         go to state 319
    pointer            go to state 85


state 354

  125 struct_declaration: specifier_qualifier_list struct_declarator_list SEMICOLON .

    $default  reduce using rule 125 (struct_declaration)


state 355

  161 fndef_direct_declarator: direct_declarator OPEN_RND OPEN_RND parameter_type_list CLOSE_RND . CLOSE_RND

    CLOSE_RND  shift, and go to state 375


state 356

  154 direct_declarator: OPEN_RND . declarator CLOSE_RND
  183 direct_abstract_declarator: OPEN_RND . abstract_declarator CLOSE_RND

    TIMES  shift, and go to state 170

    $default  reduce using rule 145 (pointer_opt)

    pointer_opt          go to state 321
    declarator           go to state 248
    pointer              go to state 204
    abstract_declarator  go to state 300


state 357

  168 parameter_type_list: parameter_list COMMA ELLIPSIS .

    $default  reduce using rule 168 (parameter_type_list)


state 358

  170 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 170 (parameter_list)


state 359

  155 direct_declarator: direct_declarator OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 376


state 360

  157 direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list_opt TIMES CLOSE_SQUARE .

    $default  reduce using rule 157 (direct_declarator)


state 361

  159 fndef_direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE .

    $default  reduce using rule 159 (fndef_direct_declarator)


state 362

  156 direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list STATIC assignment_expr . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 377


state 363

  224 iteration_header: FOR OPEN_RND declaration expr_opt SEMICOLON expr_opt CLOSE_RND .

    $default  reduce using rule 224 (iteration_header)


state 364

  223 iteration_header: FOR OPEN_RND expr_opt SEMICOLON expr_opt SEMICOLON expr_opt . CLOSE_RND

    CLOSE_RND  shift, and go to state 378


state 365

  188 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_RND parameter_type_list_opt CLOSE_RND .

    $default  reduce using rule 188 (direct_abstract_declarator)


state 366

  185 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE STATIC type_qualifier_list_opt . assignment_expr CLOSE_SQUARE

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 379


state 367

  187 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE TIMES CLOSE_SQUARE .

    $default  reduce using rule 187 (direct_abstract_declarator)


state 368

  184 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 380


state 369

  186 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list STATIC . assignment_expr CLOSE_SQUARE

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 381


state 370

  201 designator: OPEN_SQUARE constant_expr CLOSE_SQUARE .

    $default  reduce using rule 201 (designator)


state 371

   22 postfix_expr: OPEN_RND type_name CLOSE_RND OPEN_CURL initializer_list COMMA CLOSE_CURL .

    $default  reduce using rule 22 (postfix_expr)


state 372

  196 initializer_list: initializer_list COMMA designation_opt . initializer

    SIZEOF          shift, and go to state 35
    OPEN_RND        shift, and go to state 36
    ADD             shift, and go to state 37
    MINUS           shift, and go to state 38
    TIMES           shift, and go to state 102
    BITAND          shift, and go to state 40
    BITNEGATE       shift, and go to state 41
    NOT             shift, and go to state 42
    PLUSPLUS        shift, and go to state 43
    MINUSMINUS      shift, and go to state 44
    OPEN_CURL       shift, and go to state 276
    CONSTANT        shift, and go to state 47
    IDENTIFIER      shift, and go to state 103
    STRING_LITERAL  shift, and go to state 49

    primary_expr         go to state 54
    string_seq           go to state 55
    postfix_expr         go to state 56
    unary_expr           go to state 57
    unary_operator       go to state 58
    cast_expr            go to state 59
    multiplicative_expr  go to state 60
    additive_expr        go to state 61
    shift_expr           go to state 62
    relational_expr      go to state 63
    equality_expr        go to state 64
    AND_expr             go to state 65
    exclusive_OR_expr    go to state 66
    inclusive_OR_expr    go to state 67
    logical_AND_expr     go to state 68
    logical_OR_expr      go to state 69
    conditional_expr     go to state 70
    assignment_expr      go to state 277
    initializer          go to state 382


state 373

  192 initializer: OPEN_CURL initializer_list COMMA CLOSE_CURL .

    $default  reduce using rule 192 (initializer)


state 374

  131 struct_declarator_list: struct_declarator_list COMMA struct_declarator .

    $default  reduce using rule 131 (struct_declarator_list)


state 375

  161 fndef_direct_declarator: direct_declarator OPEN_RND OPEN_RND parameter_type_list CLOSE_RND CLOSE_RND .

    $default  reduce using rule 161 (fndef_direct_declarator)


state 376

  155 direct_declarator: direct_declarator OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE .

    $default  reduce using rule 155 (direct_declarator)


state 377

  156 direct_declarator: direct_declarator OPEN_SQUARE type_qualifier_list STATIC assignment_expr CLOSE_SQUARE .

    $default  reduce using rule 156 (direct_declarator)


state 378

  223 iteration_header: FOR OPEN_RND expr_opt SEMICOLON expr_opt SEMICOLON expr_opt CLOSE_RND .

    $default  reduce using rule 223 (iteration_header)


state 379

  185 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 383


state 380

  184 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list_opt assignment_expr_opt CLOSE_SQUARE .

    $default  reduce using rule 184 (direct_abstract_declarator)


state 381

  186 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list STATIC assignment_expr . CLOSE_SQUARE

    CLOSE_SQUARE  shift, and go to state 384


state 382

  196 initializer_list: initializer_list COMMA designation_opt initializer .

    $default  reduce using rule 196 (initializer_list)


state 383

  185 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE STATIC type_qualifier_list_opt assignment_expr CLOSE_SQUARE .

    $default  reduce using rule 185 (direct_abstract_declarator)


state 384

  186 direct_abstract_declarator: direct_abstract_declarator_opt OPEN_SQUARE type_qualifier_list STATIC assignment_expr CLOSE_SQUARE .

    $default  reduce using rule 186 (direct_abstract_declarator)
