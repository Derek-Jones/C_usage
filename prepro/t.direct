" config.h
" system.h
" tree.h
" rtl.h
" expr.h
" ch-tree.h
" lex.h
" flags.h
" actions.h
" obstack.h
" assert.h
" toplev.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE TYPE_ID
#DEFINE TAG_OBJECT
#DEFINE TAG_CLASS
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE BITARRAY_TEST
#DEFINE BITARRAY_SET
__E__O__F__
" config.h
" system.h
" tree.h
" ch-tree.h
" flags.h
" convert.h
" lex.h
" toplev.h
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#DEFINE MAYBE_RANGE_OP
#DEFINE CONSTRUCTOR_ELT_LO
#DEFINE CONSTRUCTOR_ELT_HI
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" flags.h
" ch-tree.h
" lex.h
" obstack.h
" input.h
" rtl.h
" toplev.h
#DEFINE IS_UNKNOWN_TYPE
#DEFINE BUILTIN_NESTING_LEVEL
#DEFINE CHILL_INT_IS_SHORT
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF SHORT_TYPE_SIZE
#DEFINE SHORT_TYPE_SIZE
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF LONG_LONG_TYPE_SIZE
#DEFINE LONG_LONG_TYPE_SIZE
#ENDIF
#IFNDEF WCHAR_UNSIGNED
#DEFINE WCHAR_UNSIGNED
#ENDIF
#IFNDEF FLOAT_TYPE_SIZE
#DEFINE FLOAT_TYPE_SIZE
#ENDIF
#IFNDEF DOUBLE_TYPE_SIZE
#DEFINE DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF LONG_DOUBLE_TYPE_SIZE
#DEFINE LONG_DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF PTRDIFF_TYPE
#DEFINE PTRDIFF_TYPE
#ENDIF
#IFNDEF WCHAR_TYPE
#DEFINE WCHAR_TYPE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE DEFTREECODE
" ch-tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" ch-tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" ch-tree.def
#UNDEF DEFTREECODE
#IFNDEF DOLLARS_IN_IDENTIFIERS
#DEFINE DOLLARS_IN_IDENTIFIERS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF SIZE_TYPE
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
< setjmp.h
#IFDEF sequent
#IFNDEF _JBLEN
#DEFINE _JBLEN
#ENDIF
#ENDIF
#IFNDEF _JBLEN
#DEFINE _JBLEN
#DEFINE _JBLEN_2
#ELSE
#DEFINE _JBLEN_2
#ENDIF
#IFNDEF SETJMP_LIBRARY_NAME
#IFDEF __linux__
#DEFINE SETJMP_LIBRARY_NAME
#ELSE
#DEFINE SETJMP_LIBRARY_NAME
#ENDIF
#ENDIF
" tree.h
" ch-tree.h
" rtl.h
" toplev.h
#DEFINE ACTION_NUMBER
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" flags.h
" expr.h
" ch-tree.h
" assert.h
" lex.h
" convert.h
" toplev.h
#DEFINE MILLISECS_MULTIPLIER
#DEFINE SECS_MULTIPLIER
#DEFINE MINUTES_MULTIPLIER
#DEFINE HOURS_MULTIPLIER
#DEFINE DAYS_MULTIPLIER
#DEFINE MILLISECS_MAX
#DEFINE SECS_MAX
#DEFINE MINUTES_MAX
#DEFINE HOURS_MAX
#DEFINE DAYS_MAX
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" ch-tree.h
" lex.h
" flags.h
" actions.h
" input.h
" rtl.h
" tasking.h
" toplev.h
" output.h
#DEFINE APPEND
#DEFINE PREPEND
#DEFINE FREE
#DEFINE ALLOCAMOUNT
#DEFINE MAYBE_NEWLINE
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF REAL_IS_NOT_DOUBLE
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF VMS
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" ch-tree.h
" rtl.h
" lex.h
" flags.h
" input.h
" assert.h
" toplev.h
#DEFINE STDIO_TEXT_LENGTH
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE IO_TEXTLOCATION
#DEFINE IO_INDEXED
#DEFINE IO_TEXTIO
#DEFINE IO_OUTOFFILE
#IF
#ENDIF
#DEFINE LET
#DEFINE BIN
#DEFINE DEC
#DEFINE OCT
#DEFINE HEX
#DEFINE USC
#DEFINE BIL
#DEFINE SPC
#DEFINE SCS
#DEFINE IOC
#DEFINE EDC
#DEFINE CVC
#DEFINE isDEC
#DEFINE isCVC
#DEFINE isEDC
#DEFINE isIOC
#DEFINE isUSC
#DEFINE isXXX
#DEFINE CONVERSIONCODES
#DEFINE IOCODES
#DEFINE EDITCODES
__E__O__F__
" config.h
" system.h
" tree.h
" ch-tree.h
" lex.h
" input.h
" toplev.h
__E__O__F__
" config.h
" system.h
< setjmp.h
< sys/stat.h
" tree.h
" input.h
" lex.h
" ch-tree.h
" flags.h
" parse.h
" obstack.h
" toplev.h
#IFDEF DWARF_DEBUGGING_INFO
" dwarfout.h
#ENDIF
#IFDEF MULTIBYTE_CHARS
< locale.h
#ENDIF
" hash.h
#IF
#DEFINE RETURN_TOKEN
#ENDIF
#DEFINE yylineno
#IFDEF IO_BUFFER_SIZE
#ENDIF
#DEFINE ENTER_STANDARD_NAME
#DEFINE YY_PUTBACK_SIZE
#DEFINE YY_BUF_SIZE
#IFDEF YYDEBUG
#ENDIF
#DEFINE input
#DEFINE unput
#IFDEF YYDEBUG
#ENDIF
#IFDEF YYDEBUG
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#ENDIF
#IFDEF HANDLE_PRAGMA
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF ASM_OUTPUT_IDENT
#ENDIF
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" ch-tree.h
" lex.h
" flags.h
" actions.h
" input.h
" obstack.h
" assert.h
" rtl.h
" toplev.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
< stdio.h
< limits.h
" config.h
" tree.h
" ch-tree.h
" lex.h
" flags.h
" actions.h
" input.h
" obstack.h
" assert.h
" rtl.h
#IF
#ENDIF
#DEFINE CST_FITS_INT
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" ch-tree.h
" lex.h
" actions.h
" tasking.h
" parse.h
" toplev.h
#DEFINE INIT_ACTION
#DEFINE POP_USED_ON_CONTEXT
#DEFINE POP_UNUSED_ON_CONTEXT
#DEFINE PUSH_ACTION
#DEFINE YYDEBUG
#IF
#ENDIF
#IF
#ENDIF
#DEFINE MAX_LOOK_AHEAD
#DEFINE TOKEN_NOT_READ
#IFDEF __GNUC__
#ENDIF
#DEFINE PEEK_TREE
#DEFINE PEEK_TOKEN1
#DEFINE PEEK_TOKEN2
#DEFINE FORWARD_TOKEN
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" flags.h
" ch-tree.h
" lex.h
" toplev.h
#DEFINE SATISFY
#DEFINE LOOKUP_ONLY
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" ch-tree.h
" flags.h
" input.h
" obstack.h
" assert.h
" tasking.h
" lex.h
" toplev.h
#DEFINE TASK_INFO_PDECL
#DEFINE TASK_INFO_ENTRY
#DEFINE TASK_INFO_CODE_DECL
#DEFINE TASK_INFO_STUFF_NUM
#DEFINE TASK_INFO_STUFF_TYPE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" ch-tree.h
" flags.h
" input.h
" obstack.h
" lex.h
" toplev.h
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" obstack.h
" tree.h
" ch-tree.h
" toplev.h
#DEFINE TYPE_HASH
__E__O__F__
" config.h
" system.h
" tree.h
" ch-tree.h
" flags.h
" rtl.h
" expr.h
" lex.h
" toplev.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
#IF
#IF
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" expr.h
" regs.h
" hard-reg-set.h
" flags.h
" output.h
" toplev.h
" splay-tree.h
#DEFINE SIZE_FOR_MODE
#DEFINE DIFFERENT_ALIAS_SETS_P
#DEFINE MAX_ALIAS_LOOP_PASSES
#DEFINE REG_BASE_VALUE
#IFDEF ENABLE_CHECKING
#ENDIF
#IFNDEF OUTGOING_REGNO
#DEFINE OUTGOING_REGNO
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" flags.h
" obstack.h
" regs.h
" basic-block.h
#IFNDEF INLINE
#IFNDEF __GNUC__
#DEFINE INLINE
#ELSE
#DEFINE INLINE
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF OBSTACK_CHUNK_SIZE
#DEFINE OBSTACK_CHUNK_SIZE
#ENDIF
#IFNDEF OBSTACK_CHUNK_ALLOC
#DEFINE OBSTACK_CHUNK_ALLOC
#ENDIF
#IFNDEF OBSTACK_CHUNK_FREE
#DEFINE OBSTACK_CHUNK_FREE
#ENDIF
#IF
#DEFINE __alignof__
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" toplev.h
" flags.h
" tree.h
" c-tree.h
#IFNDEF USE_CPPLIB
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" c-lex.h
" c-tree.h
" flags.h
" obstack.h
" toplev.h
" output.h
" c-pragma.h
" rtl.h
#IF
" cpplib.h
#ENDIF
#IFNDEF WCHAR_TYPE_SIZE
#IFDEF INT_TYPE_SIZE
#DEFINE WCHAR_TYPE_SIZE
#ELSE
#DEFINE WCHAR_TYPE_SIZE
#ENDIF
#ENDIF
#IFDEF PRAGMA_INSERT_ATTRIBUTES
#ENDIF
#IFDEF INSERT_ATTRIBUTES
#ENDIF
#IFDEF ASM_OUTPUT_SECTION_NAME
#ELSE
#ENDIF
#DEFINE T_I
#DEFINE T_L
#DEFINE T_LL
#DEFINE T_S
#DEFINE T_UI
#DEFINE T_UL
#DEFINE T_ULL
#DEFINE T_US
#DEFINE T_F
#DEFINE T_D
#DEFINE T_LD
#DEFINE T_C
#DEFINE T_UC
#DEFINE T_V
#DEFINE T_W
#DEFINE T_ST
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE GETC
#DEFINE UNGETC
#ELSE
#ENDIF
__E__O__F__
" config.h
" tree.h
" flags.h
" convert.h
" toplev.h
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" flags.h
" output.h
" c-tree.h
" c-lex.h
" toplev.h
#IF
" cpplib.h
#ENDIF
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF SHORT_TYPE_SIZE
#DEFINE SHORT_TYPE_SIZE
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF LONG_LONG_TYPE_SIZE
#DEFINE LONG_LONG_TYPE_SIZE
#ENDIF
#IFNDEF WCHAR_UNSIGNED
#DEFINE WCHAR_UNSIGNED
#ENDIF
#IFNDEF FLOAT_TYPE_SIZE
#DEFINE FLOAT_TYPE_SIZE
#ENDIF
#IFNDEF DOUBLE_TYPE_SIZE
#DEFINE DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF LONG_DOUBLE_TYPE_SIZE
#DEFINE LONG_DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF SIZE_TYPE
#DEFINE SIZE_TYPE
#ENDIF
#IFNDEF PTRDIFF_TYPE
#DEFINE PTRDIFF_TYPE
#ENDIF
#IFNDEF WCHAR_TYPE
#DEFINE WCHAR_TYPE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE NULL_BINDING_LEVEL
#IFNDEF DOLLARS_IN_IDENTIFIERS
#DEFINE DOLLARS_IN_IDENTIFIERS
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF SET_DEFAULT_DECL_ATTRIBUTES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF TRADITIONAL_RETURN_FLOAT
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
#IFDEF EMPTY_FIELD_BOUNDARY
#ENDIF
#IFDEF PCC_BITFIELD_TYPE_MATTERS
#ENDIF
#IFDEF SET_DEFAULT_DECL_ATTRIBUTES
#ENDIF
#IF
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
#IF
#ENDIF
#IFDEF DEFAULT_MAIN_RETURN
#ENDIF
#IFNDEF ASM_OUTPUT_CONSTRUCTOR
#ENDIF
#IFNDEF ASM_OUTPUT_DESTRUCTOR
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" c-tree.h
" flags.h
" obstack.h
" rtl.h
" toplev.h
" expr.h
#DEFINE ISN_ZERO
#IFDEF DEBUG_ITERATORS
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" input.h
" c-tree.h
" c-lex.h
" toplev.h
" output.h
#IF
" cpplib.h
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF ASM_OUTPUT_CONSTRUCTOR
#ENDIF
#IFNDEF ASM_OUTPUT_DESTRUCTOR
#ENDIF
#IF
#ENDIF
#IFNDEF ASM_OUTPUT_CONSTRUCTOR
#ENDIF
#IFNDEF ASM_OUTPUT_DESTRUCTOR
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" input.h
" output.h
" c-lex.h
" c-tree.h
" flags.h
" c-parse.h
" c-pragma.h
" toplev.h
" intl.h
#IFDEF CROSS_COMPILE
#UNDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
" mbchar.h
< locale.h
#ENDIF
#IF
" cpplib.h
#ELSE
#ENDIF
#DEFINE YYDEBUG
#IF
#DEFINE GETC
#DEFINE UNGETC
#ELSE
#DEFINE GETC
#DEFINE UNGETC
#ENDIF
#IFNDEF WCHAR_TYPE_SIZE
#IFDEF INT_TYPE_SIZE
#DEFINE WCHAR_TYPE_SIZE
#ELSE
#DEFINE WCHAR_TYPE_SIZE
#ENDIF
#ENDIF
#DEFINE WCHAR_BYTES
#IF
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#ENDIF
" c-gperf.h
#IF
#IFDEF IO_BUFFER_SIZE
#ENDIF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#DEFINE UNSET_RESERVED_WORD
#IF
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HANDLE_PRAGMA
#IF
#ENDIF
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#ENDIF
#IFDEF ASM_OUTPUT_IDENT
#ENDIF
#IF
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#IF
#ENDIF
#ENDIF
#DEFINE ENDFILE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE TOTAL_PARTS
#IFDEF ERANGE
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MAP_CHARACTER
#ENDIF
#IFDEF MULTIBYTE_CHARS
#IFDEF MAP_CHARACTER
#ENDIF
#ELSE
#IFDEF MAP_CHARACTER
#ENDIF
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#DEFINE YYBISON
#DEFINE IDENTIFIER
#DEFINE TYPENAME
#DEFINE SCSPEC
#DEFINE TYPESPEC
#DEFINE TYPE_QUAL
#DEFINE CONSTANT
#DEFINE STRING
#DEFINE ELLIPSIS
#DEFINE SIZEOF
#DEFINE ENUM
#DEFINE STRUCT
#DEFINE UNION
#DEFINE IF
#DEFINE ELSE
#DEFINE WHILE
#DEFINE DO
#DEFINE FOR
#DEFINE SWITCH
#DEFINE CASE
#DEFINE DEFAULT
#DEFINE BREAK
#DEFINE CONTINUE
#DEFINE RETURN
#DEFINE GOTO
#DEFINE ASM_KEYWORD
#DEFINE TYPEOF
#DEFINE ALIGNOF
#DEFINE ATTRIBUTE
#DEFINE EXTENSION
#DEFINE LABEL
#DEFINE REALPART
#DEFINE IMAGPART
#DEFINE ASSIGN
#DEFINE OROR
#DEFINE ANDAND
#DEFINE EQCOMPARE
#DEFINE ARITHCOMPARE
#DEFINE LSHIFT
#DEFINE RSHIFT
#DEFINE UNARY
#DEFINE PLUSPLUS
#DEFINE MINUSMINUS
#DEFINE HYPERUNARY
#DEFINE POINTSAT
#DEFINE INTERFACE
#DEFINE IMPLEMENTATION
#DEFINE END
#DEFINE SELECTOR
#DEFINE DEFS
#DEFINE ENCODE
#DEFINE CLASSNAME
#DEFINE PUBLIC
#DEFINE PRIVATE
#DEFINE PROTECTED
#DEFINE PROTOCOL
#DEFINE OBJECTNAME
#DEFINE CLASS
#DEFINE ALIAS
#DEFINE OBJC_STRING
#LINE line
" config.h
" system.h
< setjmp.h
" tree.h
" input.h
" c-lex.h
" c-tree.h
" flags.h
" output.h
" toplev.h
#IFDEF MULTIBYTE_CHARS
< locale.h
#ENDIF
#DEFINE YYERROR1
#DEFINE YYDEBUG
#LINE line
#LINE line
#DEFINE YYPRINT
< stdio.h
#IFNDEF __cplusplus
#IFNDEF __STDC__
#DEFINE const
#ENDIF
#ENDIF
#DEFINE YYFINAL
#DEFINE YYFLAG
#DEFINE YYNTBASE
#DEFINE YYTRANSLATE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE YYLAST
#LINE line
#IFNDEF alloca
#IFDEF __GNUC__
#DEFINE alloca
#ELSE
#IF
< alloca.h
#ELSE
#IF
< malloc.h
#ELSE
#IF
< malloc.h
#PRAGMA alloca
#ELSE
#IFDEF __hpux
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#DEFINE yyerrok
#DEFINE yyclearin
#DEFINE YYEMPTY
#DEFINE YYEOF
#DEFINE YYACCEPT
#DEFINE YYABORT
#DEFINE YYERROR
#DEFINE YYFAIL
#DEFINE YYRECOVERING
#DEFINE YYBACKUP
#DEFINE YYTERROR
#DEFINE YYERRCODE
#IFNDEF YYPURE
#DEFINE YYLEX
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ELSE
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ENDIF
#ENDIF
#IFNDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF YYINITDEPTH
#DEFINE YYINITDEPTH
#ENDIF
#IF
#UNDEF YYMAXDEPTH
#ENDIF
#IFNDEF YYMAXDEPTH
#DEFINE YYMAXDEPTH
#ENDIF
#IFDEF __GNUC__
#ENDIF
#IF
#DEFINE __yy_memcpy
#ELSE
#IFNDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#LINE line
#IFDEF YYPARSE_PARAM
#IFDEF __cplusplus
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#IFDEF YYLSP_NEEDED
#DEFINE YYPOPSTACK
#ELSE
#DEFINE YYPOPSTACK
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF yyoverflow
#IFDEF YYLSP_NEEDED
#ELSE
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#ELSE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF YYPRINT
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#IF
#ENDIF
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYERROR_VERBOSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#LINE line
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" except.h
" function.h
" defaults.h
" c-pragma.h
" flags.h
" toplev.h
#IFDEF HANDLE_GENERIC_PRAGMAS
#IFDEF HANDLE_PRAGMA_PACK
#ENDIF
#IFDEF HANDLE_PRAGMA_PACK_PUSH_POP
#ENDIF
#IFDEF HANDLE_PRAGMA_PACK
#ENDIF
#IFDEF HANDLE_PRAGMA_PACK_PUSH_POP
#ENDIF
#IFDEF HANDLE_PRAGMA_WEAK
#ENDIF
#IFDEF HANDLE_PRAGMA_PACK
#ENDIF
#IFDEF HANDLE_PRAGMA_WEAK
#ENDIF
#IFDEF HANDLE_PRAGMA_WEAK
#ENDIF
#IFDEF HANDLE_PRAGMA_PACK
#IFDEF HANDLE_PRAGMA_PACK_PUSH_POP
#ENDIF
#ENDIF
#IFDEF HANDLE_PRAGMA_PACK_PUSH_POP
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" c-tree.h
" flags.h
" output.h
" rtl.h
" expr.h
" toplev.h
" intl.h
#IF
#ENDIF
#IFNDEF COMP_TYPE_ATTRIBUTES
#DEFINE COMP_TYPE_ATTRIBUTES
#ENDIF
#IF
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE SPELLING_STRING
#DEFINE SPELLING_MEMBER
#DEFINE SPELLING_BOUNDS
#DEFINE SPELLING_DEPTH
#DEFINE RESTORE_SPELLING_DEPTH
#DEFINE SAVE_SPELLING_DEPTH
#DEFINE PUSH_SPELLING
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" insn-config.h
" flags.h
" regs.h
" hard-reg-set.h
" recog.h
" basic-block.h
" reload.h
" expr.h
" toplev.h
#IFNDEF MAX_MOVE_MAX
#DEFINE MAX_MOVE_MAX
#ENDIF
#IFNDEF MIN_UNITS_PER_WORD
#DEFINE MIN_UNITS_PER_WORD
#ENDIF
#DEFINE MOVE_MAX_WORDS
#IFDEF HAVE_cc0
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" flags.h
" expr.h
" regs.h
" insn-flags.h
" toplev.h
" output.h
#IF
#DEFINE PREFERRED_STACK_BOUNDARY
#ENDIF
#IFDEF PUSH_ROUNDING
#IF
#DEFINE PUSH_ARGS_REVERSED
#ENDIF
#ENDIF
#DEFINE STACK_BYTES
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IF
#ENDIF
#IFNDEF NO_FUNCTION_CSE
#IFDEF NO_RECURSIVE_FUNCTION_CSE
#ENDIF
#ENDIF
#IFNDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFNDEF ACCUMULATE_OUTGOING_ARGS
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#ELSE
#ENDIF
#IFDEF FUNCTION_ARG_PASS_BY_REFERENCE
#ENDIF
#IFDEF FUNCTION_ARG_CALLEE_COPIES
#ENDIF
#IFDEF PROMOTE_FUNCTION_ARGS
#ENDIF
#IFDEF FUNCTION_ARG_PARTIAL_NREGS
#ENDIF
#IFDEF STACK_PARMS_IN_REG_PARM_AREA
#ELSE
#ENDIF
#IFNDEF ARGS_GROW_DOWNWARD
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ENDIF
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#IFNDEF OUTGOING_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#IFDEF MAYBE_REG_PARM_STACK_SPACE
#ENDIF
#IFNDEF OUTGOING_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF LOAD_ARGS_REVERSED
#ELSE
#ENDIF
#IFDEF PUSH_ROUNDING
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF REG_PARM_STACK_SPACE
#IFDEF MAYBE_REG_PARM_STACK_SPACE
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF PCC_STATIC_STRUCT_RETURN
#ELSE
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF FINAL_REG_PARM_STACK_SPACE
#ENDIF
#IFNDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFNDEF OUTGOING_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFNDEF OUTGOING_REG_PARM_STACK_SPACE
#ELSE
#ENDIF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF PUSH_ARGS_REVERSED
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#ELSE
#ENDIF
#IFDEF PROMOTE_FUNCTION_RETURN
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFDEF REG_PARM_STACK_SPACE
#ENDIF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF REG_PARM_STACK_SPACE
#IFDEF MAYBE_REG_PARM_STACK_SPACE
#ELSE
#ENDIF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF LIBGCC_NEEDS_DOUBLE
#ENDIF
#IFDEF FUNCTION_ARG_PASS_BY_REFERENCE
#ENDIF
#IFDEF FUNCTION_ARG_PARTIAL_NREGS
#ELSE
#ENDIF
#IFDEF FINAL_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#IFNDEF OUTGOING_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFNDEF OUTGOING_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ELSE
#IFNDEF PUSH_ROUNDING
#ENDIF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#ELSE
#ENDIF
#IF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFNDEF PUSH_ARGS_REVERSED
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#ELSE
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFDEF REG_PARM_STACK_SPACE
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF REG_PARM_STACK_SPACE
#IFDEF MAYBE_REG_PARM_STACK_SPACE
#ELSE
#ENDIF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF PCC_STATIC_STRUCT_RETURN
#ELSE
#ENDIF
#IFDEF FUNCTION_ARG_PARTIAL_NREGS
#ENDIF
#IFDEF LIBGCC_NEEDS_DOUBLE
#ENDIF
#IFDEF FUNCTION_ARG_PASS_BY_REFERENCE
#ENDIF
#IFDEF FUNCTION_ARG_PARTIAL_NREGS
#ELSE
#ENDIF
#IFDEF FINAL_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#IFNDEF OUTGOING_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFNDEF OUTGOING_REG_PARM_STACK_SPACE
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ELSE
#IFNDEF PUSH_ROUNDING
#ENDIF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#ELSE
#ENDIF
#IF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFNDEF PUSH_ARGS_REVERSED
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#ENDIF
#IFDEF PUSH_ARGS_REVERSED
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFDEF REG_PARM_STACK_SPACE
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
__E__O__F__
" config.h
" system.h
< signal.h
#IFDEF HAVE_SYS_RESOURCE_H
< sys/resource.h
#ENDIF
" pcp.h
" intl.h
" prefix.h
#IFDEF MULTIBYTE_CHARS
" mbchar.h
< locale.h
#ENDIF
#IFNDEF GET_ENV_PATH_LIST
#DEFINE GET_ENV_PATH_LIST
#ENDIF
#IFNDEF STANDARD_INCLUDE_DIR
#DEFINE STANDARD_INCLUDE_DIR
#ENDIF
#IFNDEF PATH_SEPARATOR
#DEFINE PATH_SEPARATOR
#ENDIF
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#IFDEF OBJECT_SUFFIX
#DEFINE HAVE_OBJECT_SUFFIX
#ELSE
#DEFINE OBJECT_SUFFIX
#ENDIF
#IFDEF VMS
< descrip.h
< ssdef.h
< syidef.h
#DEFINE open
#DEFINE fopen
#DEFINE freopen
#DEFINE fstat
#DEFINE INO_T_EQ
#DEFINE INO_T_HASH
#DEFINE INCLUDE_LEN_FUDGE
#ENDIF
#IF
#DEFINE INO_T_EQ
#ENDIF
#IFNDEF INO_T_EQ
#DEFINE INO_T_EQ
#ENDIF
#IFNDEF INO_T_HASH
#DEFINE INO_T_HASH
#ENDIF
#IFNDEF INCLUDE_LEN_FUDGE
#DEFINE INCLUDE_LEN_FUDGE
#ENDIF
#DEFINE INPUT_STACK_MAX
#DEFINE CHECK_DEPTH
#DEFINE OUTBUF_SIZE
#DEFINE check_expand
#IFDEF INCLUDE_DEFAULTS
#ELSE
#IFDEF CROSS_COMPILE
#IFDEF TOOL_INCLUDE_DIR
#ENDIF
#ELSE
#IFDEF LOCAL_INCLUDE_DIR
#ENDIF
#IFDEF TOOL_INCLUDE_DIR
#ENDIF
#IFDEF SYSTEM_INCLUDE_DIR
#ENDIF
#IFNDEF STANDARD_INCLUDE_COMPONENT
#DEFINE STANDARD_INCLUDE_COMPONENT
#ENDIF
#ENDIF
#ENDIF
#DEFINE INCLUDE_HASHSIZE
#DEFINE REST_EXTENSION_LENGTH
#DEFINE VA_ARGS_NAME_LENGTH
#DEFINE HASHSIZE
#DEFINE HASHSTEP
#DEFINE MAKE_POS
#IFNDEF SIZE_TYPE
#DEFINE SIZE_TYPE
#ENDIF
#IFNDEF PTRDIFF_TYPE
#DEFINE PTRDIFF_TYPE
#ENDIF
#IFNDEF WCHAR_TYPE
#DEFINE WCHAR_TYPE
#ENDIF
#UNDEF WCHAR_TYPE
#IFNDEF USER_LABEL_PREFIX
#DEFINE USER_LABEL_PREFIX
#ENDIF
#UNDEF USER_LABEL_PREFIX
#IFNDEF REGISTER_PREFIX
#DEFINE REGISTER_PREFIX
#ENDIF
#IFNDEF IMMEDIATE_PREFIX
#DEFINE IMMEDIATE_PREFIX
#ENDIF
#DEFINE ASSERTION_HASHSIZE
#DEFINE DO_PROTO
#DEFINE IS_INCLUDE_DIRECTIVE_TYPE
#IFDEF SCCS_DIRECTIVE
#ENDIF
#IFDEF SCCS_DIRECTIVE
#ENDIF
#DEFINE SKIP_WHITE_SPACE
#DEFINE SKIP_ALL_WHITE_SPACE
#IFDEF MAX_READ_LEN
#ENDIF
#IFDEF EINTR
#ENDIF
#IFDEF MAX_WRITE_LEN
#ENDIF
#IFDEF EINTR
#ENDIF
#IF
#ENDIF
#IFDEF SIGPIPE
#ENDIF
#IFDEF HAVE_LC_MESSAGES
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF TARGET_VERSION
#ENDIF
#DEFINE POPMACRO
#DEFINE RECACHE
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IF
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFNDEF NO_BUILTIN_SIZE_TYPE
#ENDIF
#IFNDEF NO_BUILTIN_PTRDIFF_TYPE
#ENDIF
#IFDEF STDC_0_IN_SYSTEM_HEADERS
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF VMS
#ELSE
#ENDIF
#IFDEF VMS
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF DIR_SEPARATOR
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF DIR_SEPARATOR
#ENDIF
#IF
#ENDIF
#IFNDEF VMS
#ENDIF
#IF
#ENDIF
#DEFINE FILE_NAME_MAP_FILE
#IFDEF VMS
#ENDIF
#IFDEF DEBUG_PCP
#ENDIF
#IFDEF DEBUG_PCP
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IF
#ENDIF
#DEFINE FNAME_HASHSIZE
#IF
#ENDIF
#IF
#ENDIF
#IFDEF SCCS_DIRECTIVE
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFNDEF NO_IMPLICIT_EXTERN_C
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IF
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFNDEF VMS
#IFNDEF HAVE_STRERROR
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IF
#ENDIF
#IFNDEF NO_BUILTIN_SIZE_TYPE
#ENDIF
#IFNDEF NO_BUILTIN_PTRDIFF_TYPE
#ENDIF
#IFNDEF NO_BUILTIN_SIZE_TYPE
#ENDIF
#IFNDEF NO_BUILTIN_PTRDIFF_TYPE
#ENDIF
#IFDEF VMS
#ELSE
#ENDIF
#IFNDEF VMS
#ENDIF
#IFNDEF MAX_OUTPUT_COLUMNS
#DEFINE MAX_OUTPUT_COLUMNS
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF VMS
#ELSE
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF VMS
#UNDEF freopen
#UNDEF fopen
#UNDEF open
< fab.h
< nam.h
#UNDEF fstat
#ENDIF
__E__O__F__
#DEFINE YYBISON
#DEFINE INT
#DEFINE CHAR
#DEFINE NAME
#DEFINE ERROR
#DEFINE OR
#DEFINE AND
#DEFINE EQUAL
#DEFINE NOTEQUAL
#DEFINE LEQ
#DEFINE GEQ
#DEFINE LSH
#DEFINE RSH
#DEFINE UNARY
#LINE line
" config.h
" system.h
" intl.h
< setjmp.h
#IFDEF MULTIBYTE_CHARS
" mbchar.h
< locale.h
#ENDIF
#IFDEF TEST_EXP_READER
#ENDIF
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF WCHAR_TYPE_SIZE
#DEFINE WCHAR_TYPE_SIZE
#ENDIF
#IFNDEF MAX_CHAR_TYPE_SIZE
#DEFINE MAX_CHAR_TYPE_SIZE
#ENDIF
#IFNDEF MAX_INT_TYPE_SIZE
#DEFINE MAX_INT_TYPE_SIZE
#ENDIF
#IFNDEF MAX_LONG_TYPE_SIZE
#DEFINE MAX_LONG_TYPE_SIZE
#ENDIF
#IFNDEF MAX_WCHAR_TYPE_SIZE
#DEFINE MAX_WCHAR_TYPE_SIZE
#ENDIF
#DEFINE MAX_CHAR_TYPE_MASK
#DEFINE MAX_WCHAR_TYPE_MASK
#DEFINE overflow_sum_sign
#DEFINE SIGNED
#DEFINE UNSIGNED
#LINE line
< stdio.h
#IFNDEF __cplusplus
#IFNDEF __STDC__
#DEFINE const
#ENDIF
#ENDIF
#DEFINE YYFINAL
#DEFINE YYFLAG
#DEFINE YYNTBASE
#DEFINE YYTRANSLATE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE YYLAST
#LINE line
#IFNDEF alloca
#IFDEF __GNUC__
#DEFINE alloca
#ELSE
#IF
< alloca.h
#ELSE
#IF
< malloc.h
#ELSE
#IF
< malloc.h
#PRAGMA alloca
#ELSE
#IFDEF __hpux
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#DEFINE yyerrok
#DEFINE yyclearin
#DEFINE YYEMPTY
#DEFINE YYEOF
#DEFINE YYACCEPT
#DEFINE YYABORT
#DEFINE YYERROR
#DEFINE YYFAIL
#DEFINE YYRECOVERING
#DEFINE YYBACKUP
#DEFINE YYTERROR
#DEFINE YYERRCODE
#IFNDEF YYPURE
#DEFINE YYLEX
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ELSE
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ENDIF
#ENDIF
#IFNDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF YYINITDEPTH
#DEFINE YYINITDEPTH
#ENDIF
#IF
#UNDEF YYMAXDEPTH
#ENDIF
#IFNDEF YYMAXDEPTH
#DEFINE YYMAXDEPTH
#ENDIF
#IFDEF __GNUC__
#ENDIF
#IF
#DEFINE __yy_memcpy
#ELSE
#IFNDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#LINE line
#IFDEF YYPARSE_PARAM
#IFDEF __cplusplus
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#IFDEF YYLSP_NEEDED
#DEFINE YYPOPSTACK
#ELSE
#DEFINE YYPOPSTACK
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF yyoverflow
#IFDEF YYLSP_NEEDED
#ELSE
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#ELSE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF YYPRINT
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#LINE line
#IFDEF TEST_EXP_READER
#ENDIF
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYERROR_VERBOSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#LINE line
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF TEST_EXP_READER
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
< signal.h
#IFDEF vfork
#DEFINE VFORK_STRING
#ELSE
#DEFINE VFORK_STRING
#ENDIF
#IFDEF HAVE_VFORK_H
< vfork.h
#ENDIF
#IFDEF VMS
#DEFINE vfork
#ENDIF
#DEFINE COLLECT
" collect2.h
" demangle.h
" obstack.h
" intl.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFDEF CROSS_COMPILE
#UNDEF SUNOS4_SHARED_LIBRARIES
#UNDEF OBJECT_FORMAT_COFF
#UNDEF OBJECT_FORMAT_ROSE
#UNDEF MD_EXEC_PREFIX
#UNDEF REAL_LD_FILE_NAME
#UNDEF REAL_NM_FILE_NAME
#UNDEF REAL_STRIP_FILE_NAME
#ENDIF
#IF
#DEFINE OBJECT_FORMAT_NONE
#ENDIF
#IFDEF OBJECT_FORMAT_COFF
< a.out.h
< ar.h
#IFDEF UMAX
< sgs.h
#ENDIF
#IFDEF FREAD
#UNDEF FREAD
#UNDEF FWRITE
#ENDIF
< ldfcn.h
#IFNDEF MY_ISCOFF
#DEFINE MY_ISCOFF
#ENDIF
#ENDIF
#IFDEF OBJECT_FORMAT_ROSE
#IFDEF _OSF_SOURCE
#DEFINE USE_MMAP
#ENDIF
#IFDEF USE_MMAP
< sys/mman.h
#ENDIF
< unistd.h
< mach_o_format.h
< mach_o_header.h
< mach_o_vals.h
< mach_o_types.h
#ENDIF
#IFDEF OBJECT_FORMAT_NONE
#IFNDEF NM_FLAGS
#DEFINE NM_FLAGS
#ENDIF
#ENDIF
#IFNDEF NAME__MAIN
#DEFINE NAME__MAIN
#DEFINE SYMBOL__MAIN
#ENDIF
#DEFINE DEFAULT_INIT_PRIORITY
#IF
#DEFINE SCAN_LIBRARIES
#ENDIF
#IFDEF USE_COLLECT2
#ELSE
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF LDD_SUFFIX
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFNDEF GET_ENV_PATH_LIST
#DEFINE GET_ENV_PATH_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IF
#ENDIF
#IFDEF SCAN_LIBRARIES
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF NO_DUP2
#ENDIF
#IFDEF HAVE_STRERROR
#ELSE
#ENDIF
#IFDEF HAVE_STRSIGNAL
#ELSE
#IFDEF NO_SYS_SIGLIST
#ELSE
#ENDIF
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF NO_DOLLAR_IN_LABEL
#IFDEF NO_DOT_IN_LABEL
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF CFRONT_LOSSAGE
#ENDIF
#IFNDEF HAVE_PUTENV
#IFNDEF VMS
#ENDIF
#ENDIF
#IFNDEF PATH_SEPARATOR
#DEFINE PATH_SEPARATOR
#ENDIF
#IFDEF CROSS_COMPILE
#ENDIF
#IFDEF EXECUTABLE_SUFFIX
#ENDIF
#IFDEF HAVE_DOS_BASED_FILE_SYSTEM
#ENDIF
#IFDEF EXECUTABLE_SUFFIX
#ENDIF
#IFDEF EXECUTABLE_SUFFIX
#ENDIF
#IFDEF LDD_SUFFIX
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_LC_MESSAGES
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFNDEF DEFAULT_A_OUT_NAME
#ELSE
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF SIGALRM
#ENDIF
#IFDEF SIGHUP
#ENDIF
#IFDEF SIGBUS
#ENDIF
#IFDEF CROSS_COMPILE
#IF
#ENDIF
#IFDEF LDD_SUFFIX
#ENDIF
#ENDIF
#IFDEF DEFAULT_LINKER
#ENDIF
#IFDEF REAL_LD_FILE_NAME
#ENDIF
#IFDEF REAL_NM_FILE_NAME
#ENDIF
#IFDEF LDD_SUFFIX
#ENDIF
#IFDEF REAL_STRIP_FILE_NAME
#ENDIF
#IFDEF CROSS_COMPILE
#ELSE
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF TARGET_VERSION
#ENDIF
#IFDEF LDD_SUFFIX
#ENDIF
#IFNDEF COLLECT_EXPORT_LIST
#ENDIF
#IFNDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFNDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF SCAN_LIBRARIES
#ENDIF
#IF
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF LD_INIT_SWITCH
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ELSE
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IF
#ENDIF
#DEFINE INIT_NAME_FORMAT
#DEFINE FINI_NAME_FORMAT
#IFNDEF LD_INIT_SWITCH
#ENDIF
#IFNDEF LD_INIT_SWITCH
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF OBJECT_FORMAT_NONE
#IFDEF SIGQUIT
#ENDIF
#IFNDEF LD_INIT_SWITCH
#ENDIF
#IFNDEF LD_FINI_SWITCH
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IF
< a.out.h
< fcntl.h
< link.h
< sys/mman.h
< sys/param.h
< unistd.h
< sys/dir.h
#ELSE
#IFDEF LDD_SUFFIX
#IFDEF SIGQUIT
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF OBJECT_FORMAT_COFF
#IF
#DEFINE GCC_SYMBOLS
#DEFINE GCC_SYMENT
#DEFINE GCC_OK_SYMBOL
#DEFINE GCC_SYMINC
#DEFINE GCC_SYMZERO
#DEFINE GCC_CHECK_HDR
#ELSE
#DEFINE GCC_SYMBOLS
#DEFINE GCC_SYMENT
#DEFINE GCC_OK_SYMBOL
#DEFINE GCC_UNDEF_SYMBOL
#DEFINE GCC_SYMINC
#DEFINE GCC_SYMZERO
#DEFINE GCC_CHECK_HDR
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ELSE
#ENDIF
#IFDEF COLLECT_EXPORT_LIST
#ENDIF
#ENDIF
#IFDEF OBJECT_FORMAT_ROSE
#IFNDEF CROSS_COMPILE
#ENDIF
#IF
#ENDIF
#IFDEF USE_MMAP
#ENDIF
#IFDEF USE_MMAP
#ENDIF
#IFDEF USE_MMAP
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" flags.h
" regs.h
" hard-reg-set.h
" basic-block.h
" insn-config.h
" expr.h
" insn-flags.h
" insn-codes.h
" insn-attr.h
" recog.h
" real.h
" toplev.h
#DEFINE gen_lowpart
#IFNDEF REVERSIBLE_CC_MODE
#DEFINE REVERSIBLE_CC_MODE
#ENDIF
#DEFINE INSN_CUID
#DEFINE SUBST
#DEFINE SUBST_INT
#IFDEF HAVE_cc0
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF PROMOTE_FUNCTION_ARGS
#ENDIF
#IFDEF SHORT_IMMEDIATES_SIGN_EXTEND
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFNDEF HAVE_cc0
#IFDEF EXTRA_CC_MODES
#ENDIF
#IFDEF EXTRA_CC_MODES
#ENDIF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#IFDEF HAVE_lo_sum
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#DEFINE COMBINE_RTX_EQUAL_P
#IFDEF HAVE_cc0
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_lo_sum
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF SHIFT_COUNT_TRUNCATED
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF EXTRA_CC_MODES
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFNDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IFDEF LOAD_EXTEND_OP
#ENDIF
#IFDEF HAVE_conditional_move
#ENDIF
#IFDEF HAVE_insv
#ENDIF
#IFDEF HAVE_extzv
#ENDIF
#IFDEF HAVE_extv
#ENDIF
#IFDEF STACK_BIAS
#ENDIF
#DEFINE num_sign_bit_copies
#IFNDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF STACK_BOUNDARY
#IFDEF STACK_BIAS
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
#ENDIF
#IFDEF SHORT_IMMEDIATES_SIGN_EXTEND
#ENDIF
#IFDEF SHORT_IMMEDIATES_SIGN_EXTEND
#ENDIF
#IFDEF LOAD_EXTEND_OP
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF STACK_BIAS
#ENDIF
#IF
#ENDIF
#UNDEF num_sign_bit_copies
#IFNDEF WORD_REGISTER_OPERATIONS
#ELSE
#IFDEF LOAD_EXTEND_OP
#ENDIF
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF LOAD_EXTEND_OP
#ENDIF
#IFDEF WORD_REGISTER_OPERATIONS
#IFDEF LOAD_EXTEND_OP
#ENDIF
#ENDIF
#UNDEF gen_lowpart
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IFDEF HAVE_extzv
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IFNDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IFDEF CANONICALIZE_COMPARISON
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
__E__O__F__
" config.h
" tree.h
" flags.h
" convert.h
" toplev.h
__E__O__F__
" config.h
" system.h
" cpplib.h
__E__O__F__
#IFNDEF EMACS
" config.h
" system.h
#ELSE
< stdio.h
#ENDIF
" cpplib.h
" intl.h
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF VMS
#ELSE
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
" cpplib.h
#IFDEF MULTIBYTE_CHARS
< locale.h
#ENDIF
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF WCHAR_TYPE_SIZE
#DEFINE WCHAR_TYPE_SIZE
#ENDIF
#IFNDEF MAX_CHAR_TYPE_SIZE
#DEFINE MAX_CHAR_TYPE_SIZE
#ENDIF
#IFNDEF MAX_INT_TYPE_SIZE
#DEFINE MAX_INT_TYPE_SIZE
#ENDIF
#IFNDEF MAX_LONG_TYPE_SIZE
#DEFINE MAX_LONG_TYPE_SIZE
#ENDIF
#IFNDEF MAX_WCHAR_TYPE_SIZE
#DEFINE MAX_WCHAR_TYPE_SIZE
#ENDIF
#DEFINE MAX_CHAR_TYPE_MASK
#DEFINE MAX_WCHAR_TYPE_MASK
#DEFINE possible_sum_sign
#DEFINE ERROR
#DEFINE OROR
#DEFINE ANDAND
#DEFINE EQUAL
#DEFINE NOTEQUAL
#DEFINE LEQ
#DEFINE GEQ
#DEFINE LSH
#DEFINE RSH
#DEFINE NAME
#DEFINE INT
#DEFINE CHAR
#DEFINE LEFT_OPERAND_REQUIRED
#DEFINE RIGHT_OPERAND_REQUIRED
#DEFINE HAVE_VALUE
#DEFINE SKIP_OPERAND
#IFDEF MULTIBYTE_CHARS
#ELSE
#ENDIF
#IFNDEF MULTIBYTE_CHARS
#ELSE
#ENDIF
#DEFINE PAREN_INNER_PRIO
#DEFINE COMMA_PRIO
#DEFINE COND_PRIO
#DEFINE OROR_PRIO
#DEFINE ANDAND_PRIO
#DEFINE OR_PRIO
#DEFINE XOR_PRIO
#DEFINE AND_PRIO
#DEFINE EQUAL_PRIO
#DEFINE LESS_PRIO
#DEFINE SHIFT_PRIO
#DEFINE PLUS_PRIO
#DEFINE MUL_PRIO
#DEFINE UNARY_PRIO
#DEFINE PAREN_OUTER_PRIO
#DEFINE COMPARE
#DEFINE INIT_STACK_SIZE
#DEFINE LOGICAL
__E__O__F__
" config.h
" system.h
" cpplib.h
#IF
#ENDIF
#IFDEF VMS
#DEFINE INO_T_EQ
#ELIF
#DEFINE INO_T_EQ
#ELSE
#DEFINE INO_T_EQ
#ENDIF
#IFDEF EACCES
#ENDIF
#DEFINE FILE_NAME_MAP_FILE
#DEFINE SPECCASE_EMPTY
#DEFINE SPECCASE_NUL
#DEFINE SPECCASE_CR
#DEFINE SPECCASE_BACKSLASH
#DEFINE SPECCASE_QUESTION
#IFDEF _PC_PIPE_BUF
#ENDIF
#IFDEF PIPE_BUF
#ELSE
#ENDIF
#IFNDEF MAX_OUTPUT_COLUMNS
#DEFINE MAX_OUTPUT_COLUMNS
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" cpplib.h
" cpphash.h
#UNDEF abort
#DEFINE SKIP_WHITE_SPACE
#DEFINE CPP_IS_MACRO_BUFFER
#DEFINE FORWARD
#DEFINE ARG_BASE
#IF
#ENDIF
#IF
#ENDIF
#DEFINE REST_EXTENSION_LENGTH
#IFDEF STDC_0_IN_SYSTEM_HEADERS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
#DEFINE FAKE_CONST
" cpplib.h
" cpphash.h
" output.h
" prefix.h
" intl.h
#IFNDEF GET_ENV_PATH_LIST
#DEFINE GET_ENV_PATH_LIST
#ENDIF
#IFNDEF PATH_SEPARATOR
#DEFINE PATH_SEPARATOR
#ENDIF
#IFNDEF STANDARD_INCLUDE_DIR
#DEFINE STANDARD_INCLUDE_DIR
#ENDIF
#IFNDEF SIZE_TYPE
#DEFINE SIZE_TYPE
#ENDIF
#IFNDEF PTRDIFF_TYPE
#DEFINE PTRDIFF_TYPE
#ENDIF
#IFNDEF WCHAR_TYPE
#DEFINE WCHAR_TYPE
#ENDIF
#DEFINE CPP_WCHAR_TYPE
#IFNDEF USER_LABEL_PREFIX
#DEFINE USER_LABEL_PREFIX
#ENDIF
#IFNDEF REGISTER_PREFIX
#DEFINE REGISTER_PREFIX
#ENDIF
#IFNDEF OBJECT_SUFFIX
#IFDEF VMS
#DEFINE OBJECT_SUFFIX
#ELSE
#DEFINE OBJECT_SUFFIX
#ENDIF
#ENDIF
#IFDEF INCLUDE_DEFAULTS
#ELSE
#IFDEF CROSS_COMPILE
#IFDEF TOOL_INCLUDE_DIR
#ENDIF
#ELSE
#IFDEF LOCAL_INCLUDE_DIR
#ENDIF
#IFDEF TOOL_INCLUDE_DIR
#ENDIF
#IFDEF SYSTEM_INCLUDE_DIR
#ENDIF
#IFNDEF STANDARD_INCLUDE_COMPONENT
#DEFINE STANDARD_INCLUDE_COMPONENT
#ENDIF
#ENDIF
#ENDIF
#IFDEF __STDC__
#DEFINE APPEND
#ELSE
#DEFINE APPEND
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE NAME
#IFNDEF NO_BUILTIN_SIZE_TYPE
#ENDIF
#IFNDEF NO_BUILTIN_PTRDIFF_TYPE
#ENDIF
#IF
#ENDIF
#UNDEF NAME
#IFNDEF NO_BUILTIN_SIZE_TYPE
#ENDIF
#IFNDEF NO_BUILTIN_PTRDIFF_TYPE
#ENDIF
#IF
#ENDIF
#IFDEF TARGET_VERSION
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" cpplib.h
" cpphash.h
" intl.h
#DEFINE SKIP_WHITE_SPACE
#DEFINE SKIP_ALL_WHITE_SPACE
#DEFINE PEEKN
#DEFINE FORWARD
#DEFINE GETC
#DEFINE PEEKC
#DEFINE CPP_IS_MACRO_BUFFER
#IFDEF SCCS_DIRECTIVE
#ENDIF
#DEFINE IS_INCLUDE_DIRECTIVE_TYPE
#IFDEF SCCS_DIRECTIVE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF NO_IMPLICIT_EXTERN_C
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF VMS
#ENDIF
#IFDEF SCCS_DIRECTIVE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF VMS
#IFNDEF HAVE_STRERROR
#ELSE
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFNDEF EMACS
" config.h
" system.h
#ELSE
< stdio.h
#ENDIF
" cpplib.h
" intl.h
#IFDEF HAVE_LC_MESSAGES
#ENDIF
__E__O__F__
" config.h
" system.h
#DEFINE DEFAULT_SWITCH_TAKES_ARG
#IFNDEF SWITCH_TAKES_ARG
#DEFINE SWITCH_TAKES_ARG
#ENDIF
#DEFINE DEFAULT_WORD_SWITCH_TAKES_ARG
#IFNDEF WORD_SWITCH_TAKES_ARG
#DEFINE WORD_SWITCH_TAKES_ARG
#ENDIF
__E__O__F__
" config.h
" system.h
" output.h
__E__O__F__
" tm.h
" defaults.h
< stddef.h
" frame.h
#IFNDEF OBJECT_FORMAT_MACHO
#IFNDEF CTORS_SECTION_ASM_OP
#DEFINE CTORS_SECTION_ASM_OP
#ENDIF
#IFNDEF DTORS_SECTION_ASM_OP
#DEFINE DTORS_SECTION_ASM_OP
#ENDIF
#IF
#DEFINE EH_FRAME_SECTION_ASM_OP
#ENDIF
#IFDEF OBJECT_FORMAT_ELF
#DEFINE STATIC
#ELSE
" gbl-ctors.h
#IFNDEF ON_EXIT
#DEFINE ON_EXIT
#ENDIF
#DEFINE STATIC
#ENDIF
#IFDEF CRT_BEGIN
#IFDEF INIT_SECTION_ASM_OP
#IFDEF OBJECT_FORMAT_ELF
#IFDEF EH_FRAME_SECTION_ASM_OP
#ENDIF
#IFDEF FORCE_FINI_SECTION_ALIGN
#ENDIF
#IFDEF EH_FRAME_SECTION_ASM_OP
#IFDEF FORCE_INIT_SECTION_ALIGN
#ENDIF
#ENDIF
#ELSE
#IFDEF INVOKE__main
#ENDIF
#IFDEF INIT_SECTION_PREAMBLE
#ENDIF
#IFDEF FORCE_INIT_SECTION_ALIGN
#ENDIF
#ENDIF
#ELSE
#IFDEF HAS_INIT_SECTION
#IFDEF EH_FRAME_SECTION_ASM_OP
#ENDIF
#IFDEF EH_FRAME_SECTION_ASM_OP
#ENDIF
#ENDIF
#ENDIF
#IFDEF CTOR_LIST_BEGIN
#ELSE
#ENDIF
#IFDEF DTOR_LIST_BEGIN
#ELSE
#ENDIF
#IFDEF EH_FRAME_SECTION_ASM_OP
#IFDEF INIT_SECTION_ASM_OP
#ENDIF
#ENDIF
#ENDIF
#IFDEF CRT_END
#IFDEF INIT_SECTION_ASM_OP
#IFDEF OBJECT_FORMAT_ELF
#IFDEF FORCE_INIT_SECTION_ALIGN
#ENDIF
#IF
#ENDIF
#ELSE
#IFDEF FORCE_INIT_SECTION_ALIGN
#ENDIF
#ENDIF
#ELSE
#IFDEF HAS_INIT_SECTION
#IFDEF EH_FRAME_SECTION_ASM_OP
#ENDIF
#IFDEF EH_FRAME_SECTION_ASM_OP
#ENDIF
#ENDIF
#ENDIF
#IFDEF CTOR_LIST_END
#ELSE
#ENDIF
#IFDEF DTOR_LIST_END
#ELSE
#ENDIF
#IFDEF EH_FRAME_SECTION_ASM_OP
#ENDIF
#ENDIF
#ELSE
< mach-o/ldsyms.h
#IFDEF CRT_BEGIN
#ENDIF
#IFDEF CRT_END
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
< setjmp.h
" rtl.h
" regs.h
" hard-reg-set.h
" flags.h
" real.h
" insn-config.h
" recog.h
" expr.h
" toplev.h
" output.h
" splay-tree.h
#IFDEF HAVE_cc0
#ENDIF
#DEFINE INSN_CUID
#IFDEF LOAD_EXTEND_OP
#ENDIF
#DEFINE NBUCKETS
#DEFINE HASH
#IFDEF OVERLAPPING_REGNO_P
#DEFINE FIXED_REGNO_P
#ELSE
#DEFINE FIXED_REGNO_P
#ENDIF
#DEFINE CHEAP_REGNO
#DEFINE CHEAP_REG
#DEFINE COST
#DEFINE GET_CSE_REG_INFO
#DEFINE REG_TICK
#DEFINE REG_IN_TABLE
#DEFINE REG_QTY
#DEFINE REGNO_QTY_VALID_P
#IFDEF ADDRESS_COST
#DEFINE CSE_ADDRESS_COST
#ENDIF
#DEFINE PATHLENGTH
#DEFINE FIXED_BASE_PLUS_P
#DEFINE NONZERO_BASE_PLUS_P
#DEFINE COSTS_N_INSNS
#IFDEF RTX_COSTS
#ENDIF
#IFDEF CONST_COSTS
#ENDIF
#IFDEF DEFAULT_RTX_COSTS
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#DEFINE CHEAPER
#IFDEF ADDRESS_COST
#ENDIF
#IFDEF ADDRESS_COST
#ELSE
#ENDIF
#IFNDEF ADDRESS_COST
#ELSE
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IF
#IFDEF REAL_ARITHMETIC
#IFNDEF REAL_INFINITY
#ENDIF
#ELSE
#IFNDEF REAL_INFINITY
#ENDIF
#ENDIF
#ENDIF
#IFDEF SHIFT_COUNT_TRUNCATED
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IFDEF SHIFT_COUNT_TRUNCATED
#ENDIF
#IFDEF SHIFT_COUNT_TRUNCATED
#ENDIF
#IFDEF SHIFT_COUNT_TRUNCATED
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IF
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF LOAD_EXTEND_OP
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF LOAD_EXTEND_OP
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" flags.h
" regs.h
" insn-config.h
" reload.h
" defaults.h
" output.h
" dbxout.h
" toplev.h
#IFDEF XCOFF_DEBUGGING_INFO
" xcoffout.h
#ENDIF
#IFNDEF ASM_STABS_OP
#DEFINE ASM_STABS_OP
#ENDIF
#IFNDEF ASM_STABN_OP
#DEFINE ASM_STABN_OP
#ENDIF
#IFNDEF DBX_TYPE_DECL_STABS_CODE
#DEFINE DBX_TYPE_DECL_STABS_CODE
#ENDIF
#IFNDEF DBX_STATIC_CONST_VAR_CODE
#DEFINE DBX_STATIC_CONST_VAR_CODE
#ENDIF
#IFNDEF DBX_REGPARM_STABS_CODE
#DEFINE DBX_REGPARM_STABS_CODE
#ENDIF
#IFNDEF DBX_REGPARM_STABS_LETTER
#DEFINE DBX_REGPARM_STABS_LETTER
#ENDIF
#IFNDEF GDB_INV_REF_REGPARM_STABS_LETTER
#DEFINE GDB_INV_REF_REGPARM_STABS_LETTER
#ENDIF
#IFNDEF DBX_MEMPARM_STABS_LETTER
#DEFINE DBX_MEMPARM_STABS_LETTER
#ENDIF
#IFNDEF FILE_NAME_JOINER
#DEFINE FILE_NAME_JOINER
#ENDIF
#DEFINE MINIMAL_DEBUG
#IFDEF NO_DOLLAR_IN_LABEL
#IFDEF NO_DOT_IN_LABEL
#UNDEF MINIMAL_DEBUG
#DEFINE MINIMAL_DEBUG
#ENDIF
#ENDIF
#IF
#IFDEF DEBUG_SYMS_TEXT
#DEFINE FORCE_TEXT
#ELSE
#DEFINE FORCE_TEXT
#ENDIF
#IF
" gstab.h
#ELSE
< stab.h
#IFNDEF N_CATCH
#DEFINE N_CATCH
#ENDIF
#ENDIF
#IFDEF __GNU_STAB__
#DEFINE STAB_CODE_TYPE
#ELSE
#DEFINE STAB_CODE_TYPE
#ENDIF
#DEFINE PARM_PASSED_IN_MEMORY
#IFNDEF DEBUGGER_AUTO_OFFSET
#DEFINE DEBUGGER_AUTO_OFFSET
#ENDIF
#IFNDEF DEBUGGER_ARG_OFFSET
#DEFINE DEBUGGER_ARG_OFFSET
#ENDIF
#IFDEF DBX_USE_BINCL
#ENDIF
#IFDEF DBX_USE_BINCL
#ENDIF
#DEFINE CHARS
#IFNDEF DBX_CONTIN_LENGTH
#DEFINE DBX_CONTIN_LENGTH
#ENDIF
#IF
#DEFINE CONTIN
#ELSE
#DEFINE CONTIN
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF DBX_WORKING_DIRECTORY
#ENDIF
#IFDEF DBX_OUTPUT_MAIN_SOURCE_DIRECTORY
#ELSE
#ENDIF
#IFDEF DBX_OUTPUT_MAIN_SOURCE_FILENAME
#ELSE
#ENDIF
#IFDEF ASM_IDENTIFY_GCC_AFTER_SOURCE
#ENDIF
#IFDEF DBX_USE_BINCL
#ENDIF
#IFDEF DBX_OUTPUT_STANDARD_TYPES
#ELSE
#ENDIF
#IFDEF DBX_USE_BINCL
#ENDIF
#IFDEF DBX_USE_BINCL
#ENDIF
#IFDEF DBX_OUTPUT_SOURCE_FILENAME
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_SOURCE_LINE
#ELSE
#ENDIF
#IFDEF DBX_OUTPUT_MAIN_SOURCE_FILE_END
#ENDIF
#IFNDEF DBX_USE_BINCL
#ELSE
#ENDIF
#IF
#IFDEF DBX_CONTIN_CHAR
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF NO_DOLLAR_IN_LABEL
#ELSE
#ENDIF
#IFDEF DBX_USE_BINCL
#ENDIF
#IFDEF DBX_TYPE_DEFINED
#ENDIF
#IFDEF DBX_NO_XREFS
#ENDIF
#IF
#ENDIF
#IFDEF DBX_OUTPUT_ENUM
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DBX_OUTPUT_CONSTANT_SYMBOL
#ELSE
#ENDIF
#IFDEF LEAF_REG_REMAP
#ENDIF
#IFDEF DBX_STATIC_STAB_DATA_SECTION
#ENDIF
#IF
#ENDIF
#IFDEF DBX_STATIC_BLOCK_START
#ENDIF
#IFDEF DBX_STATIC_BLOCK_END
#ENDIF
#IFDEF WINNING_GDB
#ENDIF
#IFDEF DBX_FINISH_SYMBOL
#ELSE
#ENDIF
#IFDEF LEAF_REG_REMAP
#ENDIF
#IF
#ENDIF
#IFNDEF DBX_LBRAC_FIRST
#ENDIF
#IFDEF DBX_OUTPUT_CATCH
#ELSE
#ENDIF
#IFDEF DBX_OUTPUT_LBRAC
#ELSE
#IF
#ENDIF
#ENDIF
#IFDEF DBX_LBRAC_FIRST
#ENDIF
#IFDEF DBX_OUTPUT_RBRAC
#ELSE
#IF
#ENDIF
#ENDIF
#IFDEF DBX_FUNCTION_FIRST
#ENDIF
#IFNDEF DBX_FUNCTION_FIRST
#ENDIF
#IFDEF DBX_OUTPUT_FUNCTION_END
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
#UNDEF _doprnt
#IFDEF TEST
#DEFINE _doprnt
#ENDIF
#DEFINE COPY_VA_INT
#DEFINE PRINT_CHAR
#DEFINE PRINT_TYPE
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF TEST
< math.h
#IFNDEF M_PI
#DEFINE M_PI
#ENDIF
#DEFINE RESULT
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
__E__O__F__
< stdio.h
#IFDEF __MSDOS__
< alloc.h
#ELSE
< malloc.h
#ENDIF
< ctype.h
< string.h
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" output.h
" flags.h
" rtl.h
" toplev.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFDEF GATHER_STATISTICS
#ENDIF
#DEFINE IDENTITY_RANK
#DEFINE EXACT_RANK
#DEFINE PROMO_RANK
#DEFINE STD_RANK
#DEFINE PBOOL_RANK
#DEFINE USER_RANK
#DEFINE ELLIPSIS_RANK
#DEFINE BAD_RANK
#DEFINE ICS_RANK
#DEFINE ICS_STD_RANK
#DEFINE ICS_USER_FLAG
#DEFINE ICS_ELLIPSIS_FLAG
#DEFINE ICS_THIS_FLAG
#DEFINE ICS_BAD_FLAG
#DEFINE USER_CONV_CAND
#DEFINE USER_CONV_FN
#IF
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" flags.h
" rtl.h
" output.h
" toplev.h
" splay-tree.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE SAME_FN
#IFDEF GATHER_STATISTICS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IF
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFNDEF WRITABLE_VTABLES
#ENDIF
#IFDEF JOINER
#ENDIF
#IFNDEF WRITABLE_VTABLES
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IF
#IFDEF GATHER_STATISTICS
#ENDIF
#ENDIF
#IFDEF NOTQUITE
#ENDIF
#IFNDEF DUMB_USER
#ENDIF
#IF
#ENDIF
#IFDEF NOTQUITE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF EMPTY_FIELD_BOUNDARY
#ENDIF
#IFDEF PCC_BITFIELD_TYPE_MATTERS
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF NOTQUITE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" flags.h
" cp-tree.h
" convert.h
" toplev.h
" decl.h
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" flags.h
" cp-tree.h
" decl.h
" lex.h
< signal.h
" obstack.h
" defaults.h
" output.h
" except.h
" toplev.h
" ../hash.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
" stack.h
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF SHORT_TYPE_SIZE
#DEFINE SHORT_TYPE_SIZE
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF LONG_LONG_TYPE_SIZE
#DEFINE LONG_LONG_TYPE_SIZE
#ENDIF
#IFNDEF WCHAR_UNSIGNED
#DEFINE WCHAR_UNSIGNED
#ENDIF
#IFNDEF FLOAT_TYPE_SIZE
#DEFINE FLOAT_TYPE_SIZE
#ENDIF
#IFNDEF DOUBLE_TYPE_SIZE
#DEFINE DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF LONG_DOUBLE_TYPE_SIZE
#DEFINE LONG_DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF BOOL_TYPE_SIZE
#IFDEF SLOW_BYTE_ACCESS
#DEFINE BOOL_TYPE_SIZE
#ELSE
#DEFINE BOOL_TYPE_SIZE
#ENDIF
#ENDIF
#IFNDEF SIZE_TYPE
#DEFINE SIZE_TYPE
#ENDIF
#IFNDEF PTRDIFF_TYPE
#DEFINE PTRDIFF_TYPE
#ENDIF
#IFNDEF WCHAR_TYPE
#DEFINE WCHAR_TYPE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE NULL_BINDING_LEVEL
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE BINDING_LEVEL
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DEBUG_CP_BINDING_LEVELS
#ENDIF
#IFDEF DEBUG_CP_BINDING_LEVELS
#ENDIF
#DEFINE ROUND
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF SIGILL
#ENDIF
#IFDEF SIGABRT
#ENDIF
#IFDEF SIGBUS
#ENDIF
#IF
#ENDIF
#IFDEF __GNUC__
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF SIGILL
#ENDIF
#IFDEF SIGABRT
#ENDIF
#IFDEF SIGBUS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF SET_DEFAULT_DECL_ATTRIBUTES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DEFAULT_STATIC_DEFS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
#IFDEF NONNESTED_CLASSES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF SET_DEFAULT_DECL_ATTRIBUTES
#ENDIF
#IFDEF VMS
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" flags.h
" cp-tree.h
" decl.h
" lex.h
" output.h
" except.h
" expr.h
" defaults.h
" toplev.h
" dwarf2out.h
" dwarfout.h
" splay-tree.h
" varray.h
#IF
" cpplib.h
#ENDIF
#IFNDEF DEFAULT_VTABLE_THUNKS
#DEFINE DEFAULT_VTABLE_THUNKS
#ENDIF
#IFNDEF DOLLARS_IN_IDENTIFIERS
#DEFINE DOLLARS_IN_IDENTIFIERS
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF SPEW_DEBUG
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF VALID_MACHINE_TYPE_ATTRIBUTE
#ENDIF
#IFDEF MULTIPLE_SYMBOL_SPACES
#ENDIF
#IFDEF JOINER
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE INITIALIZE_P_IDENTIFIER
#DEFINE PRIORITY_IDENTIFIER
#DEFINE SSDF_IDENTIFIER
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" toplev.h
#DEFINE STRDUP
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" obstack.h
" toplev.h
#DEFINE A
#DEFINE C
#DEFINE D
#DEFINE E
#DEFINE F
#DEFINE L
#DEFINE O
#DEFINE P
#DEFINE Q
#DEFINE T
#DEFINE V
#DEFINE o
#UNDEF C
#UNDEF D
#UNDEF E
#UNDEF F
#UNDEF L
#UNDEF O
#UNDEF P
#UNDEF Q
#UNDEF T
#UNDEF V
#UNDEF o
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE OB_INIT
#DEFINE OB_PUTC
#DEFINE OB_PUTC2
#DEFINE OB_PUTS
#DEFINE OB_PUTID
#DEFINE OB_PUTCP
#DEFINE OB_FINISH
#DEFINE OB_PUTI
#DEFINE OB_UNPUT
#DEFINE OB_END_TEMPLATE_ID
#DEFINE NEXT_CODE
#IFNDEF NO_DOLLAR_IN_LABEL
#DEFINE GLOBAL_THING
#ELSE
#IFNDEF NO_DOT_IN_LABEL
#DEFINE GLOBAL_THING
#ELSE
#DEFINE GLOBAL_THING
#ENDIF
#ENDIF
#DEFINE GLOBAL_IORD_P
#IFNDEF REAL_IS_NOT_DOUBLE
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" cp-tree.h
" flags.h
" obstack.h
" expr.h
" output.h
" except.h
" function.h
" defaults.h
" toplev.h
" eh-common.h
#IF
#ENDIF
#IF
#IFNDEF EXCEPT_SECTION_ASM_OP
#DEFINE EXCEPT_SECTION_ASM_OP
#ENDIF
#IFDEF EXCEPT_SECTION_ASM_OP
#ENDIF
#IFDEF EXCEPT_SECTION_ASM_OP
#ENDIF
#ENDIF
" decl.h
" insn-flags.h
" obstack.h
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" flags.h
" expr.h
" cp-tree.h
" toplev.h
#IF
#ENDIF
#IFDEF PCC_STATIC_STRUCT_RETURN
#ENDIF
#IFDEF FUNCTION_OUTGOING_VALUE
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" cp-tree.h
" flags.h
" output.h
" toplev.h
#IFDEF SET_DEFAULT_DECL_ATTRIBUTES
#ENDIF
__E__O__F__
" config.h
" system.h
#DEFINE LANGSPEC
#DEFINE MATHLIB
#DEFINE WITHLIBC
#IFNDEF MATH_LIBRARY
#DEFINE MATH_LIBRARY
#ENDIF
#IFNDEF LIBSTDCXX
#DEFINE LIBSTDCXX
#ENDIF
#IFDEF ALT_LIBM
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" cp-tree.h
" flags.h
" output.h
" except.h
" expr.h
" toplev.h
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" system.h
#IF
#DEFINE GETC
#ELSE
#DEFINE GETC
#ENDIF
__E__O__F__
#DEFINE YYDEBUG
" config.h
" system.h
" input.h
" tree.h
" lex.h
" cp-tree.h
" parse.h
" flags.h
" obstack.h
" c-pragma.h
" toplev.h
" output.h
#IFDEF MULTIBYTE_CHARS
" mbchar.h
< locale.h
#ENDIF
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#ENDIF
#IFDEF GATHER_STATISTICS
#IFDEF REDUCE_LENGTH
#ENDIF
#ENDIF
#IF
" cpplib.h
#ELSE
#ENDIF
#IF
" input.c
#ELSE
#ENDIF
#IF
#ENDIF
#IFNDEF WCHAR_TYPE_SIZE
#IFDEF INT_TYPE_SIZE
#DEFINE WCHAR_TYPE_SIZE
#ELSE
#DEFINE WCHAR_TYPE_SIZE
#ENDIF
#ENDIF
#DEFINE WCHAR_BYTES
" hash.h
#IFDEF __GNUC__
#ENDIF
#DEFINE DEFTREECODE
" cp-tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" cp-tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" cp-tree.def
#UNDEF DEFTREECODE
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF GATHER_STATISTICS
#IFDEF REDUCE_LENGTH
#ENDIF
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IF
#ELSE
#IFDEF IO_BUFFER_SIZE
#ENDIF
#ENDIF
#DEFINE UNSET_RESERVED_WORD
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF __GNUC__
#ENDIF
#IF
#ENDIF
#IF
#DEFINE REDUCE_LENGTH
#DEFINE TOKEN_LENGTH
#ENDIF
#IFDEF GATHER_STATISTICS
#IFDEF REDUCE_LENGTH
#ENDIF
#ENDIF
#IFDEF GATHER_STATISTICS
#IFDEF REDUCE_LENGTH
#IF
#ENDIF
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DEBUG_DEFAULT_FUNCTIONS
#ENDIF
#IF
#ENDIF
#IFDEF HANDLE_PRAGMA
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#ENDIF
#IFDEF ASM_OUTPUT_IDENT
#ENDIF
#DEFINE ENDFILE
#IFDEF __GNUC__
#ENDIF
#IF
#ENDIF
#DEFINE TOTAL_PARTS
#IFDEF ERANGE
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MAP_CHARACTER
#ENDIF
#IFDEF MULTIBYTE_CHARS
#IFDEF MAP_CHARACTER
#ENDIF
#ELSE
#IFDEF MAP_CHARACTER
#ENDIF
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF MULTIBYTE_CHARS
#ENDIF
#IFDEF GATHER_STATISTICS
#IFDEF REDUCE_LENGTH
#ENDIF
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IF
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IF
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF AUTO_IMPLEMENT
#ENDIF
#IFDEF MULTIPLE_SYMBOL_SPACES
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#ENDIF
__E__O__F__
#IFNDEF __GNUC__
#DEFINE __inline
#ENDIF
#IFNDEF PARM_CAN_BE_ARRAY_TYPE
#DEFINE PARM_CAN_BE_ARRAY_TYPE
#ENDIF
" config.h
" system.h
" tree.h
" cp-tree.h
" obstack.h
" rtl.h
" expr.h
" output.h
" hard-reg-set.h
" flags.h
" toplev.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IF
#ENDIF
#DEFINE OB_INIT
#DEFINE OB_PUTC
#DEFINE OB_PUTC2
#DEFINE OB_PUTS
#DEFINE OB_PUTID
#DEFINE OB_PUTCP
#DEFINE OB_FINISH
#DEFINE OB_LAST
#IF
#ENDIF
#IFDEF NO_DOT_IN_LABEL
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF JOINER
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF DEAD
#ENDIF
#IFDEF ASM_OUTPUT_MI_THUNK
#ELSE
#ENDIF
__E__O__F__
#DEFINE YYBISON
#DEFINE IDENTIFIER
#DEFINE TYPENAME
#DEFINE SELFNAME
#DEFINE PFUNCNAME
#DEFINE SCSPEC
#DEFINE TYPESPEC
#DEFINE CV_QUALIFIER
#DEFINE CONSTANT
#DEFINE STRING
#DEFINE ELLIPSIS
#DEFINE SIZEOF
#DEFINE ENUM
#DEFINE IF
#DEFINE ELSE
#DEFINE WHILE
#DEFINE DO
#DEFINE FOR
#DEFINE SWITCH
#DEFINE CASE
#DEFINE DEFAULT
#DEFINE BREAK
#DEFINE CONTINUE
#DEFINE RETURN_KEYWORD
#DEFINE GOTO
#DEFINE ASM_KEYWORD
#DEFINE TYPEOF
#DEFINE ALIGNOF
#DEFINE SIGOF
#DEFINE ATTRIBUTE
#DEFINE EXTENSION
#DEFINE LABEL
#DEFINE REALPART
#DEFINE IMAGPART
#DEFINE AGGR
#DEFINE VISSPEC
#DEFINE DELETE
#DEFINE NEW
#DEFINE THIS
#DEFINE OPERATOR
#DEFINE CXX_TRUE
#DEFINE CXX_FALSE
#DEFINE NAMESPACE
#DEFINE TYPENAME_KEYWORD
#DEFINE USING
#DEFINE LEFT_RIGHT
#DEFINE TEMPLATE
#DEFINE TYPEID
#DEFINE DYNAMIC_CAST
#DEFINE STATIC_CAST
#DEFINE REINTERPRET_CAST
#DEFINE CONST_CAST
#DEFINE SCOPE
#DEFINE EMPTY
#DEFINE PTYPENAME
#DEFINE NSNAME
#DEFINE THROW
#DEFINE ASSIGN
#DEFINE OROR
#DEFINE ANDAND
#DEFINE MIN_MAX
#DEFINE EQCOMPARE
#DEFINE ARITHCOMPARE
#DEFINE LSHIFT
#DEFINE RSHIFT
#DEFINE POINTSAT_STAR
#DEFINE DOT_STAR
#DEFINE UNARY
#DEFINE PLUSPLUS
#DEFINE MINUSMINUS
#DEFINE HYPERUNARY
#DEFINE PAREN_STAR_PAREN
#DEFINE POINTSAT
#DEFINE TRY
#DEFINE CATCH
#DEFINE PRE_PARSED_FUNCTION_DECL
#DEFINE EXTERN_LANG_STRING
#DEFINE ALL
#DEFINE PRE_PARSED_CLASS_DECL
#DEFINE DEFARG
#DEFINE DEFARG_MARKER
#DEFINE TYPENAME_DEFN
#DEFINE IDENTIFIER_DEFN
#DEFINE PTYPENAME_DEFN
#DEFINE END_OF_LINE
#DEFINE END_OF_SAVED_INPUT
#LINE line
#DEFINE YYDEBUG
" config.h
" system.h
" tree.h
" input.h
" flags.h
" lex.h
" cp-tree.h
" output.h
" except.h
" toplev.h
#DEFINE YYERROR1
#DEFINE OP0
#DEFINE OP1
#IFDEF __GNUC__
#ENDIF
#LINE line
#LINE line
#DEFINE YYPRINT
< stdio.h
#IFNDEF __cplusplus
#IFNDEF __STDC__
#DEFINE const
#ENDIF
#ENDIF
#DEFINE YYFINAL
#DEFINE YYFLAG
#DEFINE YYNTBASE
#DEFINE YYTRANSLATE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE YYLAST
#LINE line
#IFNDEF alloca
#IFDEF __GNUC__
#DEFINE alloca
#ELSE
#IF
< alloca.h
#ELSE
#IF
< malloc.h
#ELSE
#IF
< malloc.h
#PRAGMA alloca
#ELSE
#IFDEF __hpux
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#DEFINE yyerrok
#DEFINE yyclearin
#DEFINE YYEMPTY
#DEFINE YYEOF
#DEFINE YYACCEPT
#DEFINE YYABORT
#DEFINE YYERROR
#DEFINE YYFAIL
#DEFINE YYRECOVERING
#DEFINE YYBACKUP
#DEFINE YYTERROR
#DEFINE YYERRCODE
#IFNDEF YYPURE
#DEFINE YYLEX
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ELSE
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ENDIF
#ENDIF
#IFNDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF YYINITDEPTH
#DEFINE YYINITDEPTH
#ENDIF
#IF
#UNDEF YYMAXDEPTH
#ENDIF
#IFNDEF YYMAXDEPTH
#DEFINE YYMAXDEPTH
#ENDIF
#IFDEF __GNUC__
#ENDIF
#IF
#DEFINE __yy_memcpy
#ELSE
#IFNDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#LINE line
#IFDEF YYPARSE_PARAM
#IFDEF __cplusplus
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#IFDEF YYLSP_NEEDED
#DEFINE YYPOPSTACK
#ELSE
#DEFINE YYPOPSTACK
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF yyoverflow
#IFDEF YYLSP_NEEDED
#ELSE
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#ELSE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF YYPRINT
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYERROR_VERBOSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#LINE line
#IFDEF SPEW_DEBUG
#ENDIF
__E__O__F__
" config.h
" system.h
" obstack.h
" tree.h
" flags.h
" cp-tree.h
" decl.h
" parse.h
" lex.h
" output.h
" defaults.h
" except.h
" toplev.h
" rtl.h
" varray.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE UNIFY_ALLOW_NONE
#DEFINE UNIFY_ALLOW_MORE_CV_QUAL
#DEFINE UNIFY_ALLOW_LESS_CV_QUAL
#DEFINE UNIFY_ALLOW_DERIVED
#DEFINE UNIFY_ALLOW_INTEGER
#DEFINE GTB_VIA_VIRTUAL
#DEFINE GTB_IGNORE_TYPE
#DEFINE TMPL_ARGS_HAVE_MULTIPLE_LEVELS
#DEFINE TMPL_ARGS_DEPTH
#DEFINE TMPL_ARGS_LEVEL
#DEFINE SET_TMPL_ARGS_LEVEL
#DEFINE TMPL_ARG
#DEFINE SET_TMPL_ARG
#DEFINE NUM_TMPL_ARGS
#DEFINE TMPL_PARMS_DEPTH
#IF
#ENDIF
#DEFINE ccat
#DEFINE cat
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" input.h
" obstack.h
" toplev.h
#DEFINE IDENTIFIER_REPO_USED
#DEFINE IDENTIFIER_REPO_CHOSEN
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" flags.h
" output.h
" assert.h
" toplev.h
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" obstack.h
" flags.h
" rtl.h
" output.h
" toplev.h
" varray.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
" stack.h
#DEFINE search_level
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF GATHER_STATISTICS
#ELSE
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#DEFINE scratch_tree_cons
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" except.h
" lex.h
" toplev.h
#DEFINE RECHAIN_STMTS
#DEFINE RECHAIN_STMTS_FROM_LAST
#DEFINE RECHAIN_STMTS_FROM_CHAIN
#IFDEF WARNING_ABOUT_CCD
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" obstack.h
" tree.h
" cp-tree.h
" flags.h
" assert.h
" toplev.h
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" input.h
" tree.h
" lex.h
" cp-tree.h
" parse.h
" flags.h
" obstack.h
" toplev.h
#IFDEF SPEW_DEBUG
#ENDIF
#IFDEF SPEW_DEBUG
#ENDIF
#IFDEF SPEW_DEBUG
#ELSE
#DEFINE num_tokens
#DEFINE nth_token
#DEFINE add_token
#DEFINE consume_token
#ENDIF
#IFDEF SPEW_DEBUG
#ENDIF
#IFDEF SPEW_DEBUG
#ENDIF
#IFDEF SPEW_DEBUG
#ENDIF
#IFDEF SPEW_DEBUG
#ENDIF
__E__O__F__
" config.h
" system.h
" obstack.h
" tree.h
" cp-tree.h
" flags.h
" rtl.h
" toplev.h
#DEFINE CEIL
#IF
#ENDIF
#DEFINE TYPE_HASH
#IF
#ELSE
#ENDIF
#IFDEF STRUCTURE_SIZE_BOUNDARY
#ENDIF
#DEFINE TYPE_HASH_SIZE
#DEFINE PRINT_RING_SIZE
#DEFINE TRY
#UNDEF TRY
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFNDEF __STDC__
#ENDIF
#IFNDEF __STDC__
#ENDIF
#IFNDEF __STDC__
#ENDIF
#IFNDEF __STDC__
#ENDIF
#DEFINE ROUND
#UNDEF ROUND
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" cp-tree.h
" flags.h
" output.h
" expr.h
" toplev.h
#IF
#ENDIF
#IFNDEF COMP_TYPE_ATTRIBUTES
#DEFINE COMP_TYPE_ATTRIBUTES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DEAD
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" flags.h
" toplev.h
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" cp-tree.h
" input.h
" toplev.h
#IFNDEF FILE_NAME_JOINER
#DEFINE FILE_NAME_JOINER
#ENDIF
#IFNDEF FILE_NAME_ABSOLUTE_P
#DEFINE FILE_NAME_ABSOLUTE_P
#ENDIF
#IFNDEF TRUE
#DEFINE TRUE
#ENDIF
#IFNDEF FALSE
#DEFINE FALSE
#ENDIF
#DEFINE PALLOC
#DEFINE SALLOC
#DEFINE SFREE
#DEFINE STREQL
#DEFINE STRNEQ
#DEFINE STRLSS
#DEFINE STRLEQ
#DEFINE STRGTR
#DEFINE STRGEQ
#IFDEF XREF_SHORT_MEMBER_NAMES
#ENDIF
#IFDEF XREF_SHORT_MEMBER_NAMES
#ENDIF
#IFDEF XREF_SHORT_MEMBER_NAMES
#ENDIF
#IFDEF XREF_FILE_NAME
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" defaults.h
" tree.h
" flags.h
" rtl.h
" hard-reg-set.h
" regs.h
" insn-config.h
" reload.h
" output.h
" expr.h
" except.h
" dwarf2.h
" dwarf2out.h
" toplev.h
" dyn-string.h
#UNDEF assert
#IFDEF NDEBUG
#DEFINE assert
#ELSE
#DEFINE assert
#ENDIF
#IFDEF DWARF2_FRAME_INFO
#ENDIF
#IFDEF DWARF2_UNWIND_INFO
#ENDIF
#IF
#IFNDEF ASM_COMMENT_START
#DEFINE ASM_COMMENT_START
#ENDIF
#DEFINE MAX_ARTIFICIAL_LABEL_BYTES
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF PTR_SIZE
#DEFINE PTR_SIZE
#ENDIF
#IFNDEF DWARF_OFFSET_SIZE
#DEFINE DWARF_OFFSET_SIZE
#ENDIF
#DEFINE DWARF_VERSION
#DEFINE DWARF_ROUND
#IFDEF STACK_GROWS_DOWNWARD
#DEFINE DWARF_CIE_DATA_ALIGNMENT
#ELSE
#DEFINE DWARF_CIE_DATA_ALIGNMENT
#ENDIF
#DEFINE FDE_TABLE_INCREMENT
#IFDEF OBJECT_FORMAT_ELF
#IFNDEF UNALIGNED_SHORT_ASM_OP
#DEFINE UNALIGNED_SHORT_ASM_OP
#ENDIF
#IFNDEF UNALIGNED_INT_ASM_OP
#DEFINE UNALIGNED_INT_ASM_OP
#ENDIF
#IFNDEF UNALIGNED_DOUBLE_INT_ASM_OP
#DEFINE UNALIGNED_DOUBLE_INT_ASM_OP
#ENDIF
#ENDIF
#IFNDEF ASM_BYTE_OP
#DEFINE ASM_BYTE_OP
#ENDIF
#DEFINE DW_FORM_data
#DEFINE DW_FORM_ref
#IFNDEF SECTION_ASM_OP
#DEFINE SECTION_ASM_OP
#ENDIF
#IFNDEF SECTION_FORMAT
#IFDEF PUSHSECTION_FORMAT
#DEFINE SECTION_FORMAT
#ELSE
#DEFINE SECTION_FORMAT
#ENDIF
#ENDIF
#IFNDEF FRAME_SECTION
#DEFINE FRAME_SECTION
#ENDIF
#IFNDEF FUNC_BEGIN_LABEL
#DEFINE FUNC_BEGIN_LABEL
#ENDIF
#IFNDEF FUNC_END_LABEL
#DEFINE FUNC_END_LABEL
#ENDIF
#DEFINE CIE_AFTER_SIZE_LABEL
#DEFINE CIE_END_LABEL
#DEFINE CIE_LENGTH_LABEL
#DEFINE FDE_AFTER_SIZE_LABEL
#DEFINE FDE_END_LABEL
#DEFINE FDE_LENGTH_LABEL
#IFNDEF ASM_OUTPUT_SECTION
#DEFINE ASM_OUTPUT_SECTION
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA1
#DEFINE ASM_OUTPUT_DWARF_DATA1
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DELTA1
#DEFINE ASM_OUTPUT_DWARF_DELTA1
#ENDIF
#IFDEF UNALIGNED_INT_ASM_OP
#IFNDEF UNALIGNED_OFFSET_ASM_OP
#DEFINE UNALIGNED_OFFSET_ASM_OP
#ENDIF
#IFNDEF UNALIGNED_WORD_ASM_OP
#DEFINE UNALIGNED_WORD_ASM_OP
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DELTA2
#DEFINE ASM_OUTPUT_DWARF_DELTA2
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DELTA4
#DEFINE ASM_OUTPUT_DWARF_DELTA4
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DELTA
#DEFINE ASM_OUTPUT_DWARF_DELTA
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_ADDR_DELTA
#DEFINE ASM_OUTPUT_DWARF_ADDR_DELTA
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_ADDR
#DEFINE ASM_OUTPUT_DWARF_ADDR
#ENDIF
#IFDEF ASM_OUTPUT_DWARF2_ADDR_CONST
#UNDEF ASM_OUTPUT_DWARF_ADDR_CONST
#DEFINE ASM_OUTPUT_DWARF_ADDR_CONST
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_ADDR_CONST
#DEFINE ASM_OUTPUT_DWARF_ADDR_CONST
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_OFFSET4
#DEFINE ASM_OUTPUT_DWARF_OFFSET4
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_OFFSET
#DEFINE ASM_OUTPUT_DWARF_OFFSET
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA2
#DEFINE ASM_OUTPUT_DWARF_DATA2
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA4
#DEFINE ASM_OUTPUT_DWARF_DATA4
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA
#DEFINE ASM_OUTPUT_DWARF_DATA
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_ADDR_DATA
#DEFINE ASM_OUTPUT_DWARF_ADDR_DATA
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA8
#DEFINE ASM_OUTPUT_DWARF_DATA8
#ENDIF
#ELSE
#DEFINE ASM_OUTPUT_DWARF_ADDR
#DEFINE ASM_OUTPUT_DWARF_OFFSET4
#DEFINE ASM_OUTPUT_DWARF_OFFSET
#DEFINE ASM_OUTPUT_DWARF_DELTA2
#DEFINE ASM_OUTPUT_DWARF_DELTA4
#DEFINE ASM_OUTPUT_DWARF_ADDR_DELTA
#DEFINE ASM_OUTPUT_DWARF_DELTA
#DEFINE ASM_OUTPUT_DWARF_DATA4
#ENDIF
#IFDEF SET_ASM_OP
#IFNDEF ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL
#DEFINE ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL
#ENDIF
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_STRING
#DEFINE ASM_OUTPUT_DWARF_STRING
#ENDIF
#IFNDEF DWARF_FRAME_RETURN_COLUMN
#IFDEF PC_REGNUM
#DEFINE DWARF_FRAME_RETURN_COLUMN
#ELSE
#DEFINE DWARF_FRAME_RETURN_COLUMN
#ENDIF
#ENDIF
#IFNDEF DWARF_FRAME_REGNUM
#DEFINE DWARF_FRAME_REGNUM
#ENDIF
#IFNDEF INCOMING_FRAME_SP_OFFSET
#DEFINE INCOMING_FRAME_SP_OFFSET
#ENDIF
#IFNDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFNDEF STACK_GROWS_DOWNWARD
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#IF
#IF
#DEFINE EH_FRAME_SECTION
#ELSE
#IF
#DEFINE EH_FRAME_SECTION
#ENDIF
#ENDIF
#ENDIF
#IF
#UNDEF EH_FRAME_SECTION
#ENDIF
#IFDEF ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL
#ENDIF
#IFDEF EH_FRAME_SECTION
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL
#ENDIF
#IFDEF ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL
#ENDIF
#IFNDEF EH_FRAME_SECTION
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_UNWIND_INFO
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ELSE
#ENDIF
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#IFNDEF ASM_COMMENT_START
#DEFINE ASM_COMMENT_START
#ENDIF
#DEFINE TYPE_DECL_IS_STUB
#DEFINE DWARF_COMPILE_UNIT_HEADER_SIZE
#DEFINE DWARF_LINE_PROLOG_HEADER_SIZE
#DEFINE DWARF_PUBNAMES_HEADER_SIZE
#DEFINE DWARF_ARANGES_HEADER_SIZE
#IFNDEF DWARF_LINE_MIN_INSTR_LENGTH
#DEFINE DWARF_LINE_MIN_INSTR_LENGTH
#ENDIF
#DEFINE DWARF_LINE_BASE
#DEFINE DWARF_LINE_OPCODE_BASE
#DEFINE DWARF_LINE_RANGE
#DEFINE DWARF_LINE_DEFAULT_IS_STMT_START
#DEFINE FILE_TABLE_INCREMENT
#DEFINE DECL_DIE_TABLE_INCREMENT
#DEFINE DECL_SCOPE_TABLE_INCREMENT
#DEFINE ABBREV_DIE_TABLE_INCREMENT
#DEFINE LINE_INFO_TABLE_INCREMENT
#DEFINE PUBNAME_TABLE_INCREMENT
#DEFINE ARANGE_TABLE_INCREMENT
#DEFINE PENDING_TYPES_INCREMENT
#DEFINE INCOMPLETE_TYPES_INCREMENT
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF DEBUG_INFO_SECTION
#DEFINE DEBUG_INFO_SECTION
#ENDIF
#IFNDEF ABBREV_SECTION
#DEFINE ABBREV_SECTION
#ENDIF
#IFNDEF ARANGES_SECTION
#DEFINE ARANGES_SECTION
#ENDIF
#IFNDEF DW_MACINFO_SECTION
#DEFINE DW_MACINFO_SECTION
#ENDIF
#IFNDEF DEBUG_LINE_SECTION
#DEFINE DEBUG_LINE_SECTION
#ENDIF
#IFNDEF LOC_SECTION
#DEFINE LOC_SECTION
#ENDIF
#IFNDEF PUBNAMES_SECTION
#DEFINE PUBNAMES_SECTION
#ENDIF
#IFNDEF STR_SECTION
#DEFINE STR_SECTION
#ENDIF
#IFNDEF TEXT_SECTION
#DEFINE TEXT_SECTION
#ENDIF
#IFNDEF DATA_SECTION
#DEFINE DATA_SECTION
#ENDIF
#IFNDEF BSS_SECTION
#DEFINE BSS_SECTION
#ENDIF
#IFNDEF TEXT_SECTION_LABEL
#DEFINE TEXT_SECTION_LABEL
#ENDIF
#IFNDEF DEBUG_LINE_SECTION_LABEL
#DEFINE DEBUG_LINE_SECTION_LABEL
#ENDIF
#IFNDEF DEBUG_INFO_SECTION_LABEL
#DEFINE DEBUG_INFO_SECTION_LABEL
#ENDIF
#IFNDEF ABBREV_SECTION_LABEL
#DEFINE ABBREV_SECTION_LABEL
#ENDIF
#IFNDEF TEXT_END_LABEL
#DEFINE TEXT_END_LABEL
#ENDIF
#IFNDEF DATA_END_LABEL
#DEFINE DATA_END_LABEL
#ENDIF
#IFNDEF BSS_END_LABEL
#DEFINE BSS_END_LABEL
#ENDIF
#IFNDEF INSN_LABEL_FMT
#DEFINE INSN_LABEL_FMT
#ENDIF
#IFNDEF BLOCK_BEGIN_LABEL
#DEFINE BLOCK_BEGIN_LABEL
#ENDIF
#IFNDEF BLOCK_END_LABEL
#DEFINE BLOCK_END_LABEL
#ENDIF
#IFNDEF BODY_BEGIN_LABEL
#DEFINE BODY_BEGIN_LABEL
#ENDIF
#IFNDEF BODY_END_LABEL
#DEFINE BODY_END_LABEL
#ENDIF
#IFNDEF LINE_CODE_LABEL
#DEFINE LINE_CODE_LABEL
#ENDIF
#IFNDEF SEPARATE_LINE_CODE_LABEL
#DEFINE SEPARATE_LINE_CODE_LABEL
#ENDIF
#IFNDEF ASM_NAME_TO_STRING
#DEFINE ASM_NAME_TO_STRING
#ENDIF
#IF
#ENDIF
#IFDEF ENABLE_CHECKING
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF LEAF_REG_REMAP
#ENDIF
#IFNDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFNDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFNDEF MIPS_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFNDEF MIPS_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
__E__O__F__
" config.h
#IFDEF DWARF_DEBUGGING_INFO
" system.h
" dwarf.h
" tree.h
" flags.h
" rtl.h
" hard-reg-set.h
" insn-config.h
" reload.h
" output.h
" defaults.h
" dwarfout.h
" toplev.h
#IF
#IF
#ENDIF
#ENDIF
#UNDEF assert
#IFDEF NDEBUG
#DEFINE assert
#ELSE
#DEFINE assert
#ENDIF
#IFNDEF ASM_COMMENT_START
#DEFINE ASM_COMMENT_START
#ENDIF
#IFNDEF PRINT_REG
#DEFINE PRINT_REG
#ENDIF
#DEFINE TYPE_USED_FOR_FUNCTION
#DEFINE TYPE_DECL_IS_STUB
#DEFINE MAX_ARTIFICIAL_LABEL_BYTES
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF SHORT_TYPE_SIZE
#DEFINE SHORT_TYPE_SIZE
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF LONG_LONG_TYPE_SIZE
#DEFINE LONG_LONG_TYPE_SIZE
#ENDIF
#IFNDEF WCHAR_TYPE_SIZE
#DEFINE WCHAR_TYPE_SIZE
#ENDIF
#IFNDEF WCHAR_UNSIGNED
#DEFINE WCHAR_UNSIGNED
#ENDIF
#IFNDEF FLOAT_TYPE_SIZE
#DEFINE FLOAT_TYPE_SIZE
#ENDIF
#IFNDEF DOUBLE_TYPE_SIZE
#DEFINE DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF LONG_DOUBLE_TYPE_SIZE
#DEFINE LONG_DOUBLE_TYPE_SIZE
#ENDIF
#DEFINE FT_ENTRIES_INCREMENT
#DEFINE NEXT_DIE_NUM
#DEFINE PENDING_SIBLINGS_INCREMENT
#DEFINE PENDING_TYPES_INCREMENT
#DEFINE INCOMPLETE_TYPES_INCREMENT
#IF
#ENDIF
#IFDEF USE_ORDERING_ATTRIBUTE
#ENDIF
#IF
#ENDIF
#IFDEF DWARF_DECL_COORDINATES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF FILE_ASM_OP
#DEFINE FILE_ASM_OP
#ENDIF
#IFNDEF VERSION_ASM_OP
#DEFINE VERSION_ASM_OP
#ENDIF
#IFNDEF UNALIGNED_SHORT_ASM_OP
#DEFINE UNALIGNED_SHORT_ASM_OP
#ENDIF
#IFNDEF UNALIGNED_INT_ASM_OP
#DEFINE UNALIGNED_INT_ASM_OP
#ENDIF
#IFNDEF ASM_BYTE_OP
#DEFINE ASM_BYTE_OP
#ENDIF
#IFNDEF SET_ASM_OP
#DEFINE SET_ASM_OP
#ENDIF
#IFNDEF PUSHSECTION_ASM_OP
#DEFINE PUSHSECTION_ASM_OP
#ENDIF
#IFNDEF POPSECTION_ASM_OP
#DEFINE POPSECTION_ASM_OP
#ENDIF
#IFNDEF PUSHSECTION_FORMAT
#DEFINE PUSHSECTION_FORMAT
#ENDIF
#IFNDEF DEBUG_SECTION
#DEFINE DEBUG_SECTION
#ENDIF
#IFNDEF LINE_SECTION
#DEFINE LINE_SECTION
#ENDIF
#IFNDEF SFNAMES_SECTION
#DEFINE SFNAMES_SECTION
#ENDIF
#IFNDEF SRCINFO_SECTION
#DEFINE SRCINFO_SECTION
#ENDIF
#IFNDEF MACINFO_SECTION
#DEFINE MACINFO_SECTION
#ENDIF
#IFNDEF PUBNAMES_SECTION
#DEFINE PUBNAMES_SECTION
#ENDIF
#IFNDEF ARANGES_SECTION
#DEFINE ARANGES_SECTION
#ENDIF
#IFNDEF TEXT_SECTION
#DEFINE TEXT_SECTION
#ENDIF
#IFNDEF DATA_SECTION
#DEFINE DATA_SECTION
#ENDIF
#IFNDEF DATA1_SECTION
#DEFINE DATA1_SECTION
#ENDIF
#IFNDEF RODATA_SECTION
#DEFINE RODATA_SECTION
#ENDIF
#IFNDEF RODATA1_SECTION
#DEFINE RODATA1_SECTION
#ENDIF
#IFNDEF BSS_SECTION
#DEFINE BSS_SECTION
#ENDIF
#IFNDEF TEXT_BEGIN_LABEL
#DEFINE TEXT_BEGIN_LABEL
#ENDIF
#IFNDEF TEXT_END_LABEL
#DEFINE TEXT_END_LABEL
#ENDIF
#IFNDEF DATA_BEGIN_LABEL
#DEFINE DATA_BEGIN_LABEL
#ENDIF
#IFNDEF DATA_END_LABEL
#DEFINE DATA_END_LABEL
#ENDIF
#IFNDEF DATA1_BEGIN_LABEL
#DEFINE DATA1_BEGIN_LABEL
#ENDIF
#IFNDEF DATA1_END_LABEL
#DEFINE DATA1_END_LABEL
#ENDIF
#IFNDEF RODATA_BEGIN_LABEL
#DEFINE RODATA_BEGIN_LABEL
#ENDIF
#IFNDEF RODATA_END_LABEL
#DEFINE RODATA_END_LABEL
#ENDIF
#IFNDEF RODATA1_BEGIN_LABEL
#DEFINE RODATA1_BEGIN_LABEL
#ENDIF
#IFNDEF RODATA1_END_LABEL
#DEFINE RODATA1_END_LABEL
#ENDIF
#IFNDEF BSS_BEGIN_LABEL
#DEFINE BSS_BEGIN_LABEL
#ENDIF
#IFNDEF BSS_END_LABEL
#DEFINE BSS_END_LABEL
#ENDIF
#IFNDEF LINE_BEGIN_LABEL
#DEFINE LINE_BEGIN_LABEL
#ENDIF
#IFNDEF LINE_LAST_ENTRY_LABEL
#DEFINE LINE_LAST_ENTRY_LABEL
#ENDIF
#IFNDEF LINE_END_LABEL
#DEFINE LINE_END_LABEL
#ENDIF
#IFNDEF DEBUG_BEGIN_LABEL
#DEFINE DEBUG_BEGIN_LABEL
#ENDIF
#IFNDEF SFNAMES_BEGIN_LABEL
#DEFINE SFNAMES_BEGIN_LABEL
#ENDIF
#IFNDEF SRCINFO_BEGIN_LABEL
#DEFINE SRCINFO_BEGIN_LABEL
#ENDIF
#IFNDEF MACINFO_BEGIN_LABEL
#DEFINE MACINFO_BEGIN_LABEL
#ENDIF
#IFNDEF DIE_BEGIN_LABEL_FMT
#DEFINE DIE_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF DIE_END_LABEL_FMT
#DEFINE DIE_END_LABEL_FMT
#ENDIF
#IFNDEF PUB_DIE_LABEL_FMT
#DEFINE PUB_DIE_LABEL_FMT
#ENDIF
#IFNDEF INSN_LABEL_FMT
#DEFINE INSN_LABEL_FMT
#ENDIF
#IFNDEF BLOCK_BEGIN_LABEL_FMT
#DEFINE BLOCK_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF BLOCK_END_LABEL_FMT
#DEFINE BLOCK_END_LABEL_FMT
#ENDIF
#IFNDEF SS_BEGIN_LABEL_FMT
#DEFINE SS_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF SS_END_LABEL_FMT
#DEFINE SS_END_LABEL_FMT
#ENDIF
#IFNDEF EE_BEGIN_LABEL_FMT
#DEFINE EE_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF EE_END_LABEL_FMT
#DEFINE EE_END_LABEL_FMT
#ENDIF
#IFNDEF MT_BEGIN_LABEL_FMT
#DEFINE MT_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF MT_END_LABEL_FMT
#DEFINE MT_END_LABEL_FMT
#ENDIF
#IFNDEF LOC_BEGIN_LABEL_FMT
#DEFINE LOC_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF LOC_END_LABEL_FMT
#DEFINE LOC_END_LABEL_FMT
#ENDIF
#IFNDEF BOUND_BEGIN_LABEL_FMT
#DEFINE BOUND_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF BOUND_END_LABEL_FMT
#DEFINE BOUND_END_LABEL_FMT
#ENDIF
#IFNDEF DERIV_BEGIN_LABEL_FMT
#DEFINE DERIV_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF DERIV_END_LABEL_FMT
#DEFINE DERIV_END_LABEL_FMT
#ENDIF
#IFNDEF SL_BEGIN_LABEL_FMT
#DEFINE SL_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF SL_END_LABEL_FMT
#DEFINE SL_END_LABEL_FMT
#ENDIF
#IFNDEF BODY_BEGIN_LABEL_FMT
#DEFINE BODY_BEGIN_LABEL_FMT
#ENDIF
#IFNDEF BODY_END_LABEL_FMT
#DEFINE BODY_END_LABEL_FMT
#ENDIF
#IFNDEF FUNC_END_LABEL_FMT
#DEFINE FUNC_END_LABEL_FMT
#ENDIF
#IFNDEF TYPE_NAME_FMT
#DEFINE TYPE_NAME_FMT
#ENDIF
#IFNDEF DECL_NAME_FMT
#DEFINE DECL_NAME_FMT
#ENDIF
#IFNDEF LINE_CODE_LABEL_FMT
#DEFINE LINE_CODE_LABEL_FMT
#ENDIF
#IFNDEF SFNAMES_ENTRY_LABEL_FMT
#DEFINE SFNAMES_ENTRY_LABEL_FMT
#ENDIF
#IFNDEF LINE_ENTRY_LABEL_FMT
#DEFINE LINE_ENTRY_LABEL_FMT
#ENDIF
#IFNDEF ASM_OUTPUT_PUSH_SECTION
#DEFINE ASM_OUTPUT_PUSH_SECTION
#ENDIF
#IFNDEF ASM_OUTPUT_POP_SECTION
#DEFINE ASM_OUTPUT_POP_SECTION
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DELTA2
#DEFINE ASM_OUTPUT_DWARF_DELTA2
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DELTA4
#DEFINE ASM_OUTPUT_DWARF_DELTA4
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_TAG
#DEFINE ASM_OUTPUT_DWARF_TAG
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_ATTRIBUTE
#DEFINE ASM_OUTPUT_DWARF_ATTRIBUTE
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_STACK_OP
#DEFINE ASM_OUTPUT_DWARF_STACK_OP
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_FUND_TYPE
#DEFINE ASM_OUTPUT_DWARF_FUND_TYPE
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_FMT_BYTE
#DEFINE ASM_OUTPUT_DWARF_FMT_BYTE
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_TYPE_MODIFIER
#DEFINE ASM_OUTPUT_DWARF_TYPE_MODIFIER
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_ADDR
#DEFINE ASM_OUTPUT_DWARF_ADDR
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_ADDR_CONST
#DEFINE ASM_OUTPUT_DWARF_ADDR_CONST
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_REF
#DEFINE ASM_OUTPUT_DWARF_REF
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA1
#DEFINE ASM_OUTPUT_DWARF_DATA1
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA2
#DEFINE ASM_OUTPUT_DWARF_DATA2
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA4
#DEFINE ASM_OUTPUT_DWARF_DATA4
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_DATA8
#DEFINE ASM_OUTPUT_DWARF_DATA8
#ENDIF
#IFNDEF ASM_OUTPUT_DWARF_STRING
#DEFINE ASM_OUTPUT_DWARF_STRING_NEWLINE
#ELSE
#DEFINE ASM_OUTPUT_DWARF_STRING_NEWLINE
#ENDIF
#IFDEF ENABLE_CHECKING
#ENDIF
#IF
#ENDIF
#IFDEF LEAF_REG_REMAP
#ENDIF
#IFDEF USE_ORDERING_ATTRIBUTE
#ENDIF
#IF
#ENDIF
#IFDEF DWARF_DECL_COORDINATES
#ENDIF
#IF
#ENDIF
#IFDEF DWARF_DECL_COORDINATES
#ENDIF
#IFDEF USE_ORDERING_ATTRIBUTE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DWARF_TIMESTAMPS
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" dyn-string.h
__E__O__F__
" config.h
" system.h
" toplev.h
" rtl.h
" tree.h
" flags.h
" except.h
" function.h
" expr.h
" regs.h
" hard-reg-set.h
" insn-config.h
" recog.h
" real.h
" obstack.h
" bitmap.h
#IFDEF __GNUC__
#DEFINE FLDI
#ELSE
#DEFINE FLDI
#ENDIF
#DEFINE SEQUENCE_RESULT_SIZE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF RETURN_ADDRESS_POINTER_REGNUM
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IF
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#IFDEF HOST_WORDS_BIG_ENDIAN
#ELSE
#ENDIF
#ENDIF
#IFDEF REAL_ARITHMETIC
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF REAL_ARITHMETIC
#IF
#ENDIF
#ELSE
#IFDEF HOST_WORDS_BIG_ENDIAN
#ELSE
#ENDIF
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IFDEF STACK_BOUNDARY
#ENDIF
#IFDEF INIT_EXPANDERS
#ENDIF
#IFNDEF DOUBLE_TYPE_SIZE
#DEFINE DOUBLE_TYPE_SIZE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF RETURN_ADDRESS_POINTER_REGNUM
#ENDIF
#IFDEF STRUCT_VALUE
#ELSE
#ENDIF
#IFDEF STRUCT_VALUE_INCOMING
#ELSE
#IFDEF STRUCT_VALUE_INCOMING_REGNUM
#ELSE
#ENDIF
#ENDIF
#IFDEF STATIC_CHAIN_REGNUM
#IFDEF STATIC_CHAIN_INCOMING_REGNUM
#ENDIF
#ENDIF
#IFDEF STATIC_CHAIN
#IFDEF STATIC_CHAIN_INCOMING
#ELSE
#ENDIF
#ENDIF
#IFDEF PIC_OFFSET_TABLE_REGNUM
#ENDIF
#IFDEF INIT_EXPANDERS
#ENDIF
__E__O__F__
#IFNDEF VERSION
#DEFINE VERSION
#ENDIF
#IFNDEF FILENAME
#IFDEF NO_FILE
#DEFINE FILENAME
#ELSE
#IFDEF __FILE__
#DEFINE FILENAME
#ELSE
#DEFINE FILENAME
#ENDIF
#ENDIF
#ENDIF
#IFNDEF PASS
#IFNDEF SEP
#DEFINE PASS
#DEFINE PASS0
#DEFINE PASS1
#ENDIF
#DEFINE D_CHAR_BIT
#DEFINE D_CHAR_MAX
#DEFINE D_CHAR_MIN
#DEFINE D_SCHAR_MAX
#DEFINE D_SCHAR_MIN
#DEFINE D_UCHAR_MAX
#DEFINE D_INT_MAX
#DEFINE D_INT_MIN
#DEFINE D_UINT_MAX
#DEFINE D_FLT_ROUNDS
#DEFINE D_FLT_RADIX
#DEFINE D_MANT_DIG
#DEFINE D_DIG
#DEFINE D_MIN_EXP
#DEFINE D_MIN_10_EXP
#DEFINE D_MAX_EXP
#DEFINE D_MAX_10_EXP
#DEFINE D_MAX
#DEFINE D_EPSILON
#DEFINE D_MIN
#IFDEF NO_VOID
#DEFINE Procedure
#ELSE
#DEFINE Procedure
#ENDIF
#IFNDEF NO_STDC
#IFDEF __STDC__
#IF
#DEFINE STDC
#ENDIF
#ENDIF
#ENDIF
#IFDEF STDC
#DEFINE ARGS
#DEFINE NOARGS
#DEFINE Volatile
#DEFINE Long_double
#DEFINE stdc
#DEFINE U
#ELSE
#DEFINE ARGS
#DEFINE NOARGS
#DEFINE Volatile
#DEFINE Long_double
#DEFINE stdc
#DEFINE U
#ENDIF
#DEFINE __GCC_FLOAT_NOT_NEEDED
< stdio.h
#IFDEF STDC
#IFNDEF NO_STDDEF
< stddef.h
#ENDIF
#ENDIF
#IFDEF NO_SIG
#DEFINE jmp_buf
#ELSE
< sys/types.h
< signal.h
< setjmp.h
#ENDIF
#IFDEF CHAR_BIT
#UNDEF CHAR_BIT
#UNDEF CHAR_MAX
#UNDEF CHAR_MIN
#UNDEF SCHAR_MAX
#UNDEF SCHAR_MIN
#UNDEF UCHAR_MAX
#UNDEF UCHAR_MIN
#ENDIF
#IFDEF VERIFY
" limits.h
#ENDIF
#IFNDEF SYS_FLOAT_H_WRAP
#DEFINE SYS_FLOAT_H_WRAP
#ENDIF
#IF
" float.h
#ENDIF
#DEFINE Vprintf
#DEFINE Unexpected
#DEFINE fabs
#ENDIF
#IFDEF PASS0
#IFDEF NO_STDDEF
#ELSE
#ENDIF
#IFDEF NO_SIG
#ELSE
#ENDIF
#IFDEF TEST
#DEFINE ROUND_BITS
#DEFINE TO_NEAREST
#DEFINE TO_ZERO
#DEFINE TO_MINUS_INF
#DEFINE TO_PLUS_INF
#DEFINE EXT_BITS
#DEFINE ROUND_EXTENDED
#DEFINE ROUND_SINGLE
#DEFINE ROUND_DOUBLE
#DEFINE EXE_INEX1
#DEFINE EXE_INEX2
#DEFINE EXE_DZ
#DEFINE EXE_UNFL
#DEFINE EXE_OVFL
#DEFINE EXE_OPERR
#DEFINE EXE_SNAN
#DEFINE EXE_BSUN
#ELSE
#ENDIF
#IFDEF SIGFPE
#ENDIF
#IFDEF SIGOVER
#ENDIF
#IFDEF ID
#ELSE
#ENDIF
#IFDEF VERIFY
#ENDIF
#IFDEF NO_SIG
#ENDIF
#IFDEF NO_SC
#ENDIF
#IFDEF NO_UC
#ENDIF
#IFDEF NO_UI
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
#IFNDEF NO_MEM
#ENDIF
#IFDEF VERIFY
#ENDIF
#IFDEF VERIFY
#ENDIF
#IFDEF NO_LONG_DOUBLE_IO
#ELSE
#ENDIF
#IFDEF NO_LONG_DOUBLE_IO
#ELSE
#ENDIF
#DEFINE Order
#DEFINE Promoted
#DEFINE is_signed
#DEFINE sign_of
#DEFINE Signed
#DEFINE Unsigned
#DEFINE sgn
#DEFINE showtype
#DEFINE checktype
#DEFINE fchecktype
#IFDEF VERIFY
#IFDEF NO_UI
#ELSE
#ENDIF
#IFDEF CHAR_BIT
#ELSE
#ENDIF
#IFDEF CHAR_MAX
#ELSE
#ENDIF
#IFDEF CHAR_MIN
#ELSE
#ENDIF
#IFDEF SCHAR_MAX
#ELSE
#ENDIF
#IFDEF SCHAR_MIN
#ELSE
#ENDIF
#IFDEF UCHAR_MAX
#ELSE
#ENDIF
#IFDEF SHRT_MAX
#ELSE
#ENDIF
#IFDEF SHRT_MIN
#ELSE
#ENDIF
#IFDEF INT_MAX
#ELSE
#ENDIF
#IFDEF INT_MIN
#ELSE
#ENDIF
#IFDEF LONG_MAX
#ELSE
#ENDIF
#IFDEF LONG_MIN
#ELSE
#ENDIF
#IFDEF USHRT_MAX
#ELSE
#ENDIF
#IFDEF UINT_MAX
#ELSE
#ENDIF
#IFDEF ULONG_MAX
#ELSE
#ENDIF
#IFDEF FLT_RADIX
#ELSE
#ENDIF
#IFDEF FLT_MANT_DIG
#ELSE
#ENDIF
#IFDEF FLT_DIG
#ELSE
#ENDIF
#IFDEF FLT_ROUNDS
#ELSE
#ENDIF
#IFDEF FLT_EPSILON
#ELSE
#ENDIF
#IFDEF FLT_MIN_EXP
#ELSE
#ENDIF
#IFDEF FLT_MIN
#ELSE
#ENDIF
#IFDEF FLT_MIN_10_EXP
#ELSE
#ENDIF
#IFDEF FLT_MAX_EXP
#ELSE
#ENDIF
#IFDEF FLT_MAX
#ELSE
#ENDIF
#IFDEF FLT_MAX_10_EXP
#ELSE
#ENDIF
#IFDEF DBL_MANT_DIG
#ELSE
#ENDIF
#IFDEF DBL_DIG
#ELSE
#ENDIF
#IFDEF DBL_EPSILON
#ELSE
#ENDIF
#IFDEF DBL_MIN_EXP
#ELSE
#ENDIF
#IFDEF DBL_MIN
#ELSE
#ENDIF
#IFDEF DBL_MIN_10_EXP
#ELSE
#ENDIF
#IFDEF DBL_MAX_EXP
#ELSE
#ENDIF
#IFDEF DBL_MAX
#ELSE
#ENDIF
#IFDEF DBL_MAX_10_EXP
#ELSE
#ENDIF
#IFDEF STDC
#IFDEF LDBL_MANT_DIG
#ELSE
#ENDIF
#IFDEF LDBL_DIG
#ELSE
#ENDIF
#IFDEF LDBL_EPSILON
#ELSE
#ENDIF
#IFDEF LDBL_MIN_EXP
#ELSE
#ENDIF
#IFDEF LDBL_MIN
#ELSE
#ENDIF
#IFDEF LDBL_MIN_10_EXP
#ELSE
#ENDIF
#IFDEF LDBL_MAX_EXP
#ELSE
#ENDIF
#IFDEF LDBL_MAX
#ELSE
#ENDIF
#IFDEF LDBL_MAX_10_EXP
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF VERIFY
#IFNDEF SCHAR_MAX
#DEFINE SCHAR_MAX
#ENDIF
#IFNDEF SCHAR_MIN
#DEFINE SCHAR_MIN
#ENDIF
#IFNDEF UCHAR_MAX
#DEFINE UCHAR_MAX
#ENDIF
#ENDIF
#IFNDEF CHAR_BIT
#DEFINE CHAR_BIT
#ENDIF
#IFNDEF CHAR_MAX
#DEFINE CHAR_MAX
#ENDIF
#IFNDEF CHAR_MIN
#DEFINE CHAR_MIN
#ENDIF
#IFNDEF SCHAR_MAX
#DEFINE SCHAR_MAX
#ENDIF
#IFNDEF SCHAR_MIN
#DEFINE SCHAR_MIN
#ENDIF
#IFNDEF UCHAR_MAX
#DEFINE UCHAR_MAX
#ENDIF
#IFNDEF NO_UC
#ENDIF
#IFNDEF NO_SC
#ENDIF
#DEFINE alignment
#ELSE
#IFDEF SEP
#ENDIF
#ENDIF
#IFDEF Number
#UNDEF Number
#UNDEF THING
#UNDEF Thing
#UNDEF thing
#UNDEF FPROP
#UNDEF Fname
#UNDEF Store
#UNDEF Sum
#UNDEF Diff
#UNDEF Mul
#UNDEF Div
#UNDEF ZERO
#UNDEF HALF
#UNDEF ONE
#UNDEF TWO
#UNDEF THREE
#UNDEF FOUR
#UNDEF Self
#UNDEF F_check
#UNDEF Validate
#UNDEF EPROP
#UNDEF MARK
#UNDEF F_RADIX
#UNDEF F_MANT_DIG
#UNDEF F_DIG
#UNDEF F_ROUNDS
#UNDEF F_EPSILON
#UNDEF F_MIN_EXP
#UNDEF F_MIN
#UNDEF F_MIN_10_EXP
#UNDEF F_MAX_EXP
#UNDEF F_MAX
#UNDEF F_MAX_10_EXP
#ENDIF
#IFDEF Integer
#UNDEF Integer
#UNDEF INT
#UNDEF IPROP
#UNDEF Iname
#UNDEF UPROP
#UNDEF Uname
#UNDEF OK_UI
#UNDEF IMARK
#UNDEF I_MAX
#UNDEF I_MIN
#UNDEF U_MAX
#ENDIF
#IFDEF PASS1
#DEFINE Number
#DEFINE THING
#DEFINE Thing
#DEFINE thing
#DEFINE Fname
#DEFINE FPROP
#DEFINE Store
#DEFINE Sum
#DEFINE Diff
#DEFINE Mul
#DEFINE Div
#DEFINE ZERO
#DEFINE HALF
#DEFINE ONE
#DEFINE TWO
#DEFINE THREE
#DEFINE FOUR
#DEFINE Self
#DEFINE F_check
#DEFINE MARK
#IFDEF VERIFY
#DEFINE Validate
#ENDIF
#DEFINE EPROP
#DEFINE Integer
#DEFINE INT
#DEFINE IPROP
#DEFINE Iname
#IFNDEF NO_UI
#DEFINE OK_UI
#ENDIF
#DEFINE IMARK
#DEFINE UPROP
#DEFINE Uname
#IFDEF SHRT_MAX
#DEFINE I_MAX
#ENDIF
#IFDEF SHRT_MIN
#DEFINE I_MIN
#ENDIF
#IFDEF USHRT_MAX
#DEFINE U_MAX
#ENDIF
#IFDEF FLT_RADIX
#DEFINE F_RADIX
#ENDIF
#IFDEF FLT_MANT_DIG
#DEFINE F_MANT_DIG
#ENDIF
#IFDEF FLT_DIG
#DEFINE F_DIG
#ENDIF
#IFDEF FLT_ROUNDS
#DEFINE F_ROUNDS
#ENDIF
#IFDEF FLT_EPSILON
#DEFINE F_EPSILON
#ENDIF
#IFDEF FLT_MIN_EXP
#DEFINE F_MIN_EXP
#ENDIF
#IFDEF FLT_MIN
#DEFINE F_MIN
#ENDIF
#IFDEF FLT_MIN_10_EXP
#DEFINE F_MIN_10_EXP
#ENDIF
#IFDEF FLT_MAX_EXP
#DEFINE F_MAX_EXP
#ENDIF
#IFDEF FLT_MAX
#DEFINE F_MAX
#ENDIF
#IFDEF FLT_MAX_10_EXP
#DEFINE F_MAX_10_EXP
#ENDIF
#ENDIF
#IFDEF PASS2
#DEFINE Number
#DEFINE THING
#DEFINE Thing
#DEFINE thing
#DEFINE Fname
#DEFINE FPROP
#DEFINE Store
#DEFINE Sum
#DEFINE Diff
#DEFINE Mul
#DEFINE Div
#DEFINE ZERO
#DEFINE HALF
#DEFINE ONE
#DEFINE TWO
#DEFINE THREE
#DEFINE FOUR
#DEFINE Self
#DEFINE F_check
#DEFINE MARK
#IFDEF VERIFY
#DEFINE Validate
#ENDIF
#DEFINE EPROP
#DEFINE Integer
#DEFINE INT
#DEFINE IPROP
#DEFINE Iname
#DEFINE OK_UI
#DEFINE IMARK
#DEFINE UPROP
#DEFINE Uname
#IFDEF INT_MAX
#DEFINE I_MAX
#ENDIF
#IFDEF INT_MIN
#DEFINE I_MIN
#ENDIF
#IFDEF UINT_MAX
#DEFINE U_MAX
#ENDIF
#IFDEF DBL_MANT_DIG
#DEFINE F_MANT_DIG
#ENDIF
#IFDEF DBL_DIG
#DEFINE F_DIG
#ENDIF
#IFDEF DBL_EPSILON
#DEFINE F_EPSILON
#ENDIF
#IFDEF DBL_MIN_EXP
#DEFINE F_MIN_EXP
#ENDIF
#IFDEF DBL_MIN
#DEFINE F_MIN
#ENDIF
#IFDEF DBL_MIN_10_EXP
#DEFINE F_MIN_10_EXP
#ENDIF
#IFDEF DBL_MAX_EXP
#DEFINE F_MAX_EXP
#ENDIF
#IFDEF DBL_MAX
#DEFINE F_MAX
#ENDIF
#IFDEF DBL_MAX_10_EXP
#DEFINE F_MAX_10_EXP
#ENDIF
#ENDIF
#IFDEF PASS3
#IFDEF STDC
#DEFINE Number
#DEFINE ZERO
#DEFINE HALF
#DEFINE ONE
#DEFINE TWO
#DEFINE THREE
#DEFINE FOUR
#ENDIF
#DEFINE THING
#DEFINE Thing
#DEFINE thing
#DEFINE Fname
#DEFINE FPROP
#DEFINE Store
#DEFINE Sum
#DEFINE Diff
#DEFINE Mul
#DEFINE Div
#DEFINE Self
#DEFINE F_check
#DEFINE MARK
#IFDEF VERIFY
#DEFINE Validate
#ENDIF
#DEFINE EPROP
#DEFINE Integer
#DEFINE INT
#DEFINE IPROP
#DEFINE Iname
#IFNDEF NO_UI
#DEFINE OK_UI
#ENDIF
#DEFINE IMARK
#DEFINE UPROP
#DEFINE Uname
#IFDEF LONG_MAX
#DEFINE I_MAX
#ENDIF
#IFDEF LONG_MIN
#DEFINE I_MIN
#ENDIF
#IFDEF ULONG_MAX
#DEFINE U_MAX
#ENDIF
#IFDEF LDBL_MANT_DIG
#DEFINE F_MANT_DIG
#ENDIF
#IFDEF LDBL_DIG
#DEFINE F_DIG
#ENDIF
#IFDEF LDBL_EPSILON
#DEFINE F_EPSILON
#ENDIF
#IFDEF LDBL_MIN_EXP
#DEFINE F_MIN_EXP
#ENDIF
#IFDEF LDBL_MIN
#DEFINE F_MIN
#ENDIF
#IFDEF LDBL_MIN_10_EXP
#DEFINE F_MIN_10_EXP
#ENDIF
#IFDEF LDBL_MAX_EXP
#DEFINE F_MAX_EXP
#ENDIF
#IFDEF LDBL_MAX
#DEFINE F_MAX
#ENDIF
#IFDEF LDBL_MAX_10_EXP
#DEFINE F_MAX_10_EXP
#ENDIF
#ENDIF
#DEFINE UNDEFINED
#IFNDEF I_MAX
#DEFINE I_MAX
#ENDIF
#IFNDEF I_MIN
#DEFINE I_MIN
#ENDIF
#IFNDEF U_MAX
#DEFINE U_MAX
#ENDIF
#IFNDEF F_RADIX
#DEFINE F_RADIX
#ENDIF
#IFNDEF F_MANT_DIG
#DEFINE F_MANT_DIG
#ENDIF
#IFNDEF F_DIG
#DEFINE F_DIG
#ENDIF
#IFNDEF F_ROUNDS
#DEFINE F_ROUNDS
#ENDIF
#IFNDEF F_EPSILON
#DEFINE F_EPSILON
#ENDIF
#IFNDEF F_MIN_EXP
#DEFINE F_MIN_EXP
#ENDIF
#IFNDEF F_MIN
#DEFINE F_MIN
#ENDIF
#IFNDEF F_MIN_10_EXP
#DEFINE F_MIN_10_EXP
#ENDIF
#IFNDEF F_MAX_EXP
#DEFINE F_MAX_EXP
#ENDIF
#IFNDEF F_MAX
#DEFINE F_MAX
#ENDIF
#IFNDEF F_MAX_10_EXP
#DEFINE F_MAX_10_EXP
#ENDIF
#IFNDEF VERIFY
#DEFINE Validate
#ENDIF
#IFDEF Integer
#IFDEF OK_UI
#ENDIF
#ENDIF
#IFDEF Number
#IFDEF STDC
#DEFINE ARGS1
#DEFINE ARGS2
#ELSE
#DEFINE ARGS1
#DEFINE ARGS2
#ENDIF
#IFDEF NO_LONG_DOUBLE_IO
#ELSE
#ENDIF
#IFDEF VERIFY
#ENDIF
#ELSE
#IFDEF FPROP
#ENDIF
#IFDEF EPROP
#ENDIF
#ENDIF
#UNDEF PASS
#IFDEF PASS2
#UNDEF PASS2
#DEFINE PASS
#DEFINE PASS3
#ENDIF
#IFDEF PASS1
#UNDEF PASS1
#DEFINE PASS
#DEFINE PASS2
#ENDIF
#IFDEF PASS0
#UNDEF PASS0
#ENDIF
#IFDEF PASS
#IFDEF NO_FILE
" enquire.c
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" config.h
" defaults.h
" eh-common.h
" system.h
" rtl.h
" tree.h
" flags.h
" except.h
" function.h
" insn-flags.h
" expr.h
" insn-codes.h
" regs.h
" hard-reg-set.h
" insn-config.h
" recog.h
" output.h
" toplev.h
" intl.h
" obstack.h
#IFDEF DONT_USE_BUILTIN_SETJMP
#ENDIF
#IFDEF HAVE_exception_receiver
#ENDIF
#IFDEF HAVE_nonlocal_goto_receiver
#ENDIF
#DEFINE SIZE_FUNC_EH
#IFDEF MASK_RETURN_ADDR
#ENDIF
#IF
#ENDIF
#IFDEF DONT_USE_BUILTIN_SETJMP
#ENDIF
#IFNDEF DONT_USE_BUILTIN_SETJMP
#ELSE
#IFDEF JMP_BUF_SIZE
#ELSE
#ENDIF
#ENDIF
#IFDEF DONT_USE_BUILTIN_SETJMP
#ELSE
#ENDIF
#IFDEF JUMP_TO_THROW
#ELSE
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFNDEF OMIT_EH_TABLE
#ENDIF
#IF
#ENDIF
#IFDEF SETUP_FRAME_ADDRESSES
#ENDIF
#IFDEF RETURN_ADDR_OFFSET
#ENDIF
#IFDEF FUNCTION_OUTGOING_VALUE
#ENDIF
#IFDEF STATIC_CHAIN_REGNUM
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF HAVE_eh_epilogue
#ENDIF
#IFDEF RETURN_ADDR_OFFSET
#ENDIF
__E__O__F__
" config.h
" system.h
" toplev.h
" rtl.h
" tree.h
" flags.h
" expr.h
" hard-reg-set.h
" insn-config.h
" recog.h
" insn-flags.h
" insn-codes.h
#IF
#DEFINE PREFERRED_STACK_BOUNDARY
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IF
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF PROMOTE_FOR_CALL_ONLY
#ENDIF
#IFDEF PROMOTE_MODE
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#IFDEF HAVE_save_stack_block
#ENDIF
#IFDEF HAVE_save_stack_function
#ENDIF
#IFDEF HAVE_save_stack_nonlocal
#ENDIF
#IFDEF HAVE_restore_stack_block
#ENDIF
#IFDEF HAVE_restore_stack_function
#ENDIF
#IFDEF HAVE_restore_stack_nonlocal
#ENDIF
#IFDEF SETJMP_VIA_SAVE_AREA
#ENDIF
#IFDEF SETJMP_VIA_SAVE_AREA
#ENDIF
#IF
#DEFINE MUST_ALIGN
#ELSE
#DEFINE MUST_ALIGN
#ENDIF
#IFDEF SETJMP_VIA_SAVE_AREA
#IF
#ENDIF
#ENDIF
#IFDEF PREFERRED_STACK_BOUNDARY
#IF
#ENDIF
#ENDIF
#IFDEF HAVE_allocate_stack
#IFDEF POINTERS_EXTEND_UNSIGNED
#ELSE
#ENDIF
#ENDIF
#IFNDEF STACK_GROWS_DOWNWARD
#ENDIF
#IFDEF SETJMP_VIA_SAVE_AREA
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ENDIF
#IFDEF HAVE_probe
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#DEFINE STACK_GROW_OP
#ELSE
#DEFINE STACK_GROW_OP
#ENDIF
#IFDEF HAVE_check_stack
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#DEFINE CMP_OPCODE
#ELSE
#DEFINE CMP_OPCODE
#ENDIF
__E__O__F__
" config.h
" system.h
" toplev.h
" rtl.h
" tree.h
" flags.h
" insn-flags.h
" insn-codes.h
" insn-config.h
" expr.h
" real.h
" recog.h
#DEFINE CEIL
#IFNDEF SLOW_UNALIGNED_ACCESS
#DEFINE SLOW_UNALIGNED_ACCESS
#ENDIF
#IFNDEF MAX_BITS_PER_WORD
#DEFINE MAX_BITS_PER_WORD
#ENDIF
#IFDEF HAVE_insv
#ENDIF
#IFDEF HAVE_insv
#ENDIF
#IFDEF HAVE_extv
#ENDIF
#IFDEF HAVE_extzv
#ENDIF
#IFDEF HAVE_extv
#ENDIF
#IFDEF HAVE_extzv
#ENDIF
#IFDEF HAVE_extzv
#ENDIF
#IFDEF HAVE_extv
#ENDIF
#IF
#IFDEF SLOW_ZERO_EXTEND
#ENDIF
#ENDIF
#IFDEF SHIFT_COUNT_TRUNCATED
#ENDIF
#DEFINE EXACT_POWER_OF_2_OR_ZERO_P
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" machmode.h
" rtl.h
" tree.h
" obstack.h
" flags.h
" regs.h
" hard-reg-set.h
" except.h
" function.h
" insn-flags.h
" insn-codes.h
" insn-config.h
" expr.h
" recog.h
" output.h
" typeclass.h
" defaults.h
" toplev.h
#DEFINE CEIL
#IFDEF PUSH_ROUNDING
#IF
#DEFINE PUSH_ARGS_REVERSED
#ENDIF
#ENDIF
#IFNDEF STACK_PUSH_CODE
#IFDEF STACK_GROWS_DOWNWARD
#DEFINE STACK_PUSH_CODE
#ELSE
#DEFINE STACK_PUSH_CODE
#ENDIF
#ENDIF
#IFNDEF CASE_VECTOR_PC_RELATIVE
#DEFINE CASE_VECTOR_PC_RELATIVE
#ENDIF
#IFNDEF MOVE_RATIO
#IF
#DEFINE MOVE_RATIO
#ELSE
#DEFINE MOVE_RATIO
#ENDIF
#ENDIF
#IFNDEF MOVE_BY_PIECES_P
#DEFINE MOVE_BY_PIECES_P
#ENDIF
#IFNDEF SLOW_UNALIGNED_ACCESS
#DEFINE SLOW_UNALIGNED_ACCESS
#ENDIF
#IFNDEF INCOMING_REGNO
#DEFINE INCOMING_REGNO
#ENDIF
#IFNDEF OUTGOING_REGNO
#DEFINE OUTGOING_REGNO
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_trunchfqf2
#ENDIF
#IFDEF HAVE_trunctqfqf2
#ENDIF
#IFDEF HAVE_truncsfqf2
#ENDIF
#IFDEF HAVE_truncdfqf2
#ENDIF
#IFDEF HAVE_truncxfqf2
#ENDIF
#IFDEF HAVE_trunctfqf2
#ENDIF
#IFDEF HAVE_trunctqfhf2
#ENDIF
#IFDEF HAVE_truncsfhf2
#ENDIF
#IFDEF HAVE_truncdfhf2
#ENDIF
#IFDEF HAVE_truncxfhf2
#ENDIF
#IFDEF HAVE_trunctfhf2
#ENDIF
#IFDEF HAVE_truncsftqf2
#ENDIF
#IFDEF HAVE_truncdftqf2
#ENDIF
#IFDEF HAVE_truncxftqf2
#ENDIF
#IFDEF HAVE_trunctftqf2
#ENDIF
#IFDEF HAVE_truncdfsf2
#ENDIF
#IFDEF HAVE_truncxfsf2
#ENDIF
#IFDEF HAVE_trunctfsf2
#ENDIF
#IFDEF HAVE_truncxfdf2
#ENDIF
#IFDEF HAVE_trunctfdf2
#ENDIF
#IFDEF HAVE_slt
#ENDIF
#IFDEF HAVE_truncqipqi2
#ENDIF
#IFDEF HAVE_extendpqiqi2
#ENDIF
#IFDEF HAVE_truncsipsi2
#ENDIF
#IFDEF HAVE_extendpsisi2
#ENDIF
#IFDEF HAVE_truncdipdi2
#ENDIF
#IFDEF HAVE_extendpdidi2
#ENDIF
#IFDEF HAVE_truncdisi2
#ENDIF
#IFDEF HAVE_truncdihi2
#ENDIF
#IFDEF HAVE_truncdiqi2
#ENDIF
#IFDEF HAVE_truncsihi2
#ENDIF
#IFDEF HAVE_truncsiqi2
#ENDIF
#IFDEF HAVE_trunchiqi2
#ENDIF
#IFDEF HAVE_trunctidi2
#ENDIF
#IFDEF HAVE_trunctisi2
#ENDIF
#IFDEF HAVE_trunctihi2
#ENDIF
#IFDEF HAVE_trunctiqi2
#ENDIF
#IFNDEF MOVE_MAX_PIECES
#DEFINE MOVE_MAX_PIECES
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IFDEF HAVE_load_multiple
#ENDIF
#IFDEF HAVE_load_multiple
#ENDIF
#IFDEF HAVE_store_multiple
#ENDIF
#IFDEF HAVE_store_multiple
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
#IFNDEF ACCUMULATE_OUTGOING_ARGS
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IFNDEF PUSH_ARGS_REVERSED
#ELSE
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ELSE
#ENDIF
#IFDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ENDIF
#IFDEF MAX_INTEGER_COMPUTATION_MODE
#ENDIF
#IFDEF MAX_INTEGER_COMPUTATION_MODE
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ELSE
#ENDIF
#IFDEF HAVE_conditional_move
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF CONSTANT_ALIGNMENT
#ENDIF
#IFDEF SETUP_FRAME_ADDRESSES
#ENDIF
#IFDEF RETURN_ADDR_IN_PREVIOUS_FRAME
#ENDIF
#IFDEF DYNAMIC_CHAIN_ADDRESS
#ENDIF
#IFDEF RETURN_ADDR_RTX
#ELSE
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFNDEF BUILTIN_SETJMP_FRAME_VALUE
#DEFINE BUILTIN_SETJMP_FRAME_VALUE
#ENDIF
#IFDEF HAVE_builtin_setjmp_setup
#ENDIF
#IFDEF HAVE_nonlocal_goto
#ENDIF
#IF
#IFDEF ELIMINABLE_REGS
#ENDIF
#ENDIF
#IFDEF HAVE_builtin_setjmp_receiver
#ENDIF
#IFDEF HAVE_nonlocal_goto_receiver
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF HAVE_builtin_longjmp
#ENDIF
#IF
#ENDIF
#DEFINE CALLED_AS_BUILT_IN
#IFDEF TARGET_EDOM
#IFDEF GEN_ERRNO_RTX
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF EXPAND_BUILTIN_SAVEREGS
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cmpstrsi
#ELSE
#ENDIF
#IFDEF HAVE_trap
#ENDIF
#IFDEF DWARF2_UNWIND_INFO
#ENDIF
#IFDEF OUTGOING_REGNO
#ENDIF
#IFDEF APPLY_RESULT_SIZE
#ENDIF
#IF
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFNDEF STACK_GROWS_DOWNWARD
#ENDIF
#IFDEF HAVE_save_stack_nonlocal
#ENDIF
#IFDEF HAVE_untyped_call
#ENDIF
#IFDEF HAVE_call_value
#ENDIF
#IFDEF HAVE_save_stack_nonlocal
#ENDIF
#IFDEF HAVE_untyped_return
#ENDIF
#IF
#ENDIF
#IFDEF EXIT_IGNORE_STACK
#ENDIF
#IFDEF MAX_INTEGER_COMPUTATION_MODE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_canonicalize_funcptr_for_compare
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_canonicalize_funcptr_for_compare
#ENDIF
#IFDEF LOAD_EXTEND_OP
#ELSE
#ENDIF
#IFDEF HAVE_tablejump
#IFDEF PIC_CASE_VECTOR_ADDRESS
#ENDIF
#IFDEF PIC_CASE_VECTOR_ADDRESS
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" regs.h
" insn-config.h
" insn-flags.h
" insn-attr.h
" insn-codes.h
" recog.h
" conditions.h
" flags.h
" real.h
" hard-reg-set.h
" defaults.h
" output.h
" except.h
" toplev.h
" reload.h
" intl.h
#IF
" dbxout.h
#IF
" gstab.h
#ELSE
< stab.h
#ENDIF
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
" xcoffout.h
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
" dwarfout.h
#ENDIF
#IF
" dwarf2out.h
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
" sdbout.h
#ENDIF
#IFNDEF N_SLINE
#DEFINE N_SLINE
#ENDIF
#IFNDEF N_SOL
#DEFINE N_SOL
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF CC_STATUS_INIT
#DEFINE CC_STATUS_INIT
#ENDIF
#IFNDEF ASM_COMMENT_START
#DEFINE ASM_COMMENT_START
#ENDIF
#IFNDEF IS_ASM_LOGICAL_LINE_SEPARATOR
#DEFINE IS_ASM_LOGICAL_LINE_SEPARATOR
#ENDIF
#IFNDEF JUMP_TABLES_IN_TEXT_SECTION
#DEFINE JUMP_TABLES_IN_TEXT_SECTION
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF ASSEMBLER_DIALECT
#ENDIF
#IFDEF HAVE_ATTR_length
#ENDIF
#IFDEF LEAF_REGISTERS
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF ASSEMBLER_DIALECT
#ENDIF
#IFDEF ASM_OUTPUT_SHARED_LOCAL
#ENDIF
#IFDEF ASM_OUTPUT_ALIGNED_DECL_LOCAL
#ELSE
#IFDEF ASM_OUTPUT_ALIGNED_LOCAL
#ELSE
#ENDIF
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF HAVE_ATTR_length
#IFDEF ADJUST_INSN_LENGTH
#ENDIF
#ELSE
#ENDIF
#IFNDEF LABEL_ALIGN
#DEFINE LABEL_ALIGN
#ENDIF
#IFNDEF LABEL_ALIGN_MAX_SKIP
#DEFINE LABEL_ALIGN_MAX_SKIP
#ENDIF
#IFNDEF LOOP_ALIGN
#DEFINE LOOP_ALIGN
#ENDIF
#IFNDEF LOOP_ALIGN_MAX_SKIP
#DEFINE LOOP_ALIGN_MAX_SKIP
#ENDIF
#IFNDEF LABEL_ALIGN_AFTER_BARRIER
#DEFINE LABEL_ALIGN_AFTER_BARRIER
#ENDIF
#IFNDEF LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP
#DEFINE LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP
#ENDIF
#IFNDEF ADDR_VEC_ALIGN
#DEFINE ADDR_VEC_ALIGN
#ENDIF
#IFNDEF INSN_LENGTH_ALIGNMENT
#DEFINE INSN_LENGTH_ALIGNMENT
#ENDIF
#DEFINE INSN_SHUID
#DEFINE LABEL_TO_ALIGNMENT
#DEFINE LABEL_TO_MAX_SKIP
#IFDEF HAVE_ATTR_length
#ENDIF
#IFNDEF FIRST_INSN_ADDRESS
#DEFINE FIRST_INSN_ADDRESS
#ENDIF
#IFDEF HAVE_ATTR_length
#DEFINE MAX_CODE_ALIGN
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_ATTR_length
#IFDEF CASE_VECTOR_SHORTEN_MODE
#ENDIF
#IF
#ENDIF
#IFDEF DELAY_SLOTS
#ELSE
#ENDIF
#IFDEF ADJUST_INSN_LENGTH
#ENDIF
#IFDEF ADJUST_INSN_LENGTH
#ENDIF
#IFDEF CASE_VECTOR_SHORTEN_MODE
#IF
#ENDIF
#ENDIF
#IFDEF ADJUST_INSN_LENGTH
#ENDIF
#ENDIF
#IFDEF HAVE_ATTR_length
#ENDIF
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#ENDIF
#IFDEF LEAF_REG_REMAP
#ENDIF
#IFDEF PROFILE_BEFORE_PROLOGUE
#ENDIF
#IF
#ENDIF
#IFDEF FUNCTION_PROLOGUE
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_prologue
#ENDIF
#IFDEF FUNCTION_BLOCK_PROFILER
#ENDIF
#IFNDEF PROFILE_BEFORE_PROLOGUE
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#ENDIF
#IFDEF FUNCTION_EPILOGUE
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#ENDIF
#IFDEF BLOCK_PROFILER
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_ATTR_length
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF ASM_OUTPUT_EH_REGION_BEG
#ENDIF
#IFDEF ASM_OUTPUT_EH_REGION_END
#ENDIF
#IFDEF FUNCTION_END_PROLOGUE
#ENDIF
#IFDEF FUNCTION_BEGIN_EPILOGUE
#ENDIF
#IF
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF ASM_OUTPUT_MAX_SKIP_ALIGN
#ENDIF
#IFDEF ASM_OUTPUT_MAX_SKIP_ALIGN
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF FINAL_PRESCAN_LABEL
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IF
#ELSE
#IFDEF READONLY_DATA_SECTION
#ENDIF
#IFDEF ASM_OUTPUT_CASE_LABEL
#ELSE
#ENDIF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IF
#IFDEF ASM_OUTPUT_ADDR_VEC
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_ADDR_DIFF_VEC
#ELSE
#ENDIF
#ELSE
#IFDEF ASM_OUTPUT_ADDR_VEC_ELT
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_ADDR_DIFF_ELT
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_CASE_END
#ENDIF
#ENDIF
#IFDEF DBR_OUTPUT_SEQEND
#ENDIF
#IFDEF HAVE_cc0
#IF
#ENDIF
#ENDIF
#IFNDEF STACK_REGS
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ENDIF
#IFDEF FINAL_PRESCAN_INSN
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_ATTR_length
#ENDIF
#IF
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#IF
#ENDIF
#IFDEF ASM_OUTPUT_SOURCE_LINE
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF ALTER_HARD_SUBREG
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_ATTR_length
#ENDIF
#IFDEF ASM_OUTPUT_OPCODE
#ENDIF
#IFDEF ASM_OUTPUT_OPCODE
#ENDIF
#IFDEF ASSEMBLER_DIALECT
#ENDIF
#IFDEF PRINT_OPERAND_PUNCT_VALID_P
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF ASSEMBLER_DIALECT
#ENDIF
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#IFDEF ASM_OUTPUT_OPCODE
#ENDIF
#IFDEF REGISTER_PREFIX
#ENDIF
#IFDEF IMMEDIATE_PREFIX
#ENDIF
#IFDEF LOCAL_LABEL_PREFIX
#ENDIF
#IFDEF REAL_ARITHMETIC
#IF
#ENDIF
#ELSE
#IFDEF HOST_WORDS_BIG_ENDIAN
#ELSE
#ENDIF
#ENDIF
#IFDEF LEAF_REGISTERS
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" obstack.h
" scan.h
" cpplib.h
" cpphash.h
#IF
#ENDIF
" xsys-protos.h
#IFDEF FIXPROTO_IGNORE_LIST
#ENDIF
#IFDEF errno_h
#UNDEF errno_h
#ENDIF
#IFDEF stdio_h
#UNDEF stdio_h
#ENDIF
#IFDEF stdlib_h
#UNDEF stdlib_h
#ENDIF
#IFDEF sys_stat_h
#UNDEF sys_stat_h
#ENDIF
#DEFINE ANSI_SYMBOL
#IF
#DEFINE POSIX1_SYMBOL
#DEFINE POSIX2_SYMBOL
#ELSE
#DEFINE POSIX1_SYMBOL
#DEFINE POSIX2_SYMBOL
#ENDIF
#IF
#DEFINE XOPEN_SYMBOL
#DEFINE XOPEN_EXTENDED_SYMBOL
#ELSE
#DEFINE XOPEN_SYMBOL
#DEFINE XOPEN_EXTENDED_SYMBOL
#ENDIF
#DEFINE MACRO_SYMBOL
#DEFINE SYMBOL_TABLE_SIZE
#IF
#ENDIF
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IF
#ENDIF
#DEFINE REQUIRED
#DEFINE SET_REQUIRED
#DEFINE SET_SEEN
#DEFINE SEEN
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF NO_IMPLICIT_EXTERN_C
#ENDIF
#IFDEF NO_IMPLICIT_EXTERN_C
#ENDIF
#IF
#ENDIF
#DEFINE INF_GET
#DEFINE INF_UNGET
#IFDEF FIXPROTO_IGNORE_LIST
#ENDIF
#IFDEF FIXPROTO_IGNORE_LIST
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
#DEFINE EXCESS
#DEFINE SIGNBIT
#DEFINE HIDDEN
#DEFINE SIGN
#DEFINE EXP
#DEFINE MANT
#DEFINE PACK
#DEFINE EXCESSD
#DEFINE HIDDEND
#DEFINE EXPD
#DEFINE SIGND
#DEFINE MANTD
#DEFINE HIDDEND_LL
#DEFINE MANTD_LL
#DEFINE PACKD_LL
#IFDEF SWAP
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" basic-block.h
" insn-config.h
" regs.h
" hard-reg-set.h
" flags.h
" output.h
" except.h
" toplev.h
" recog.h
" insn-flags.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF EXIT_IGNORE_STACK
#DEFINE EXIT_IGNORE_STACK
#ENDIF
#DEFINE INSN_VOLATILE
#DEFINE SET_INSN_VOLATILE
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF ENABLE_CHECKING
#ENDIF
#IFDEF CASE_DROPS_THROUGH
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF ELIMINABLE_REGS
#ENDIF
#IFDEF ELIMINABLE_REGS
#ELSE
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF EPILOGUE_USES
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF EPILOGUE_USES
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
__E__O__F__
" config.h
" system.h
< setjmp.h
" flags.h
" tree.h
" rtl.h
" toplev.h
#IFNDEF BRANCH_COST
#DEFINE BRANCH_COST
#ENDIF
#DEFINE overflow_sum_sign
#DEFINE LOWPART
#DEFINE HIGHPART
#DEFINE BASE
#IFDEF CHECK_FLOAT_VALUE
#ENDIF
#IFDEF SHIFT_COUNT_TRUNCATED
#ENDIF
#IFDEF SHIFT_COUNT_TRUNCATED
#ENDIF
#IFNDEF REAL_ARITHMETIC
#IF
#ELSE
#ENDIF
#IF
#ELSE
#IF
#DEFINE K
#ELSE
#IF
#DEFINE K
#ELSE
#DEFINE K
#ENDIF
#ENDIF
#ENDIF
#IFDEF REAL_INFINITY
#ENDIF
#IFDEF CHECK_FLOAT_VALUE
#ENDIF
#IFDEF REAL_INFINITY
#ENDIF
#IF
#ELSE
#ENDIF
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#IFNDEF REAL_INFINITY
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IFNDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF MAX_INTEGER_COMPUTATION_MODE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFNDEF REAL_INFINITY
#ENDIF
#ENDIF
#IF
#ENDIF
__E__O__F__
#IF
< math.h
#ENDIF
__E__O__F__
" tconfig.h
#IFNDEF inhibit_libc
< stdlib.h
< unistd.h
#ENDIF
" defaults.h
#IFDEF DWARF2_UNWIND_INFO
" dwarf2.h
< stddef.h
" frame.h
" gthr.h
#IFDEF __GTHREAD_MUTEX_INIT
#ELSE
#ENDIF
#IFDEF abort
#UNDEF abort
#ENDIF
#DEFINE init_object_mutex_once
#IF
#IFDEF __GTHREAD_MUTEX_INIT_FUNCTION
#UNDEF init_object_mutex_once
#ENDIF
#ENDIF
#DEFINE SWAP
#UNDEF SWAP
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" flags.h
" except.h
" function.h
" insn-flags.h
" expr.h
" insn-codes.h
" regs.h
" hard-reg-set.h
" insn-config.h
" recog.h
" output.h
" basic-block.h
" obstack.h
" toplev.h
" hash.h
#IFNDEF TRAMPOLINE_ALIGNMENT
#DEFINE TRAMPOLINE_ALIGNMENT
#ENDIF
#IFNDEF LOCAL_ALIGNMENT
#DEFINE LOCAL_ALIGNMENT
#ENDIF
#IFNDEF NAME__MAIN
#DEFINE NAME__MAIN
#DEFINE SYMBOL__MAIN
#ENDIF
#DEFINE FLOOR_ROUND
#DEFINE CEIL_ROUND
#IF
#DEFINE NEED_SEPARATE_AP
#ENDIF
#IF
#ENDIF
#IFNDEF ARGS_GROW_DOWNWARD
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ENDIF
#IF
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFNDEF FRAME_GROWS_DOWNWARD
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFNDEF FRAME_GROWS_DOWNWARD
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFNDEF PROMOTE_FOR_CALL_ONLY
#ENDIF
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_extzv
#ENDIF
#IFDEF HAVE_extv
#ENDIF
#IFDEF HAVE_insv
#ENDIF
#IFDEF HAVE_insv
#ENDIF
#IF
#ENDIF
#IFNDEF STACK_POINTER_OFFSET
#DEFINE STACK_POINTER_OFFSET
#ENDIF
#IFNDEF STACK_DYNAMIC_OFFSET
#IFDEF ACCUMULATE_OUTGOING_ARGS
#IF
#DEFINE STACK_DYNAMIC_OFFSET
#ELSE
#DEFINE STACK_DYNAMIC_OFFSET
#ENDIF
#ELSE
#DEFINE STACK_DYNAMIC_OFFSET
#ENDIF
#ENDIF
#IFNDEF ARG_POINTER_CFA_OFFSET
#DEFINE ARG_POINTER_CFA_OFFSET
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF SETUP_INCOMING_VARARGS
#ENDIF
#IFDEF INIT_CUMULATIVE_INCOMING_ARGS
#ELSE
#ENDIF
#IFDEF FUNCTION_ARG_PASS_BY_REFERENCE
#ENDIF
#IFDEF PROMOTE_FUNCTION_ARGS
#ENDIF
#IFDEF FUNCTION_INCOMING_ARG
#ELSE
#ENDIF
#IFDEF SETUP_INCOMING_VARARGS
#ENDIF
#IFDEF STACK_PARMS_IN_REG_PARM_AREA
#ELSE
#IFDEF FUNCTION_INCOMING_ARG
#ELSE
#ENDIF
#ENDIF
#IFDEF FUNCTION_ARG_PARTIAL_NREGS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF FUNCTION_ARG_CALLEE_COPIES
#ENDIF
#IFDEF REG_PARM_STACK_SPACE
#IFNDEF MAYBE_REG_PARM_STACK_SPACE
#ENDIF
#ENDIF
#IFDEF STACK_BOUNDARY
#DEFINE STACK_BYTES
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#IFDEF PROMOTE_FUNCTION_ARGS
#ENDIF
#IFDEF REG_PARM_STACK_SPACE
#IFDEF MAYBE_REG_PARM_STACK_SPACE
#ELSE
#ENDIF
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#IFDEF PUSH_ROUNDING
#ENDIF
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ELSE
#ENDIF
#IFNDEF ARGS_GROW_DOWNWARD
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ENDIF
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IFDEF NEED_SEPARATE_AP
#ELSE
#ENDIF
#IFDEF ALLOCATE_TRAMPOLINE
#ELSE
#IFDEF TRAMPOLINE_ALIGNMENT
#DEFINE TRAMPOLINE_REAL_SIZE
#ELSE
#DEFINE TRAMPOLINE_REAL_SIZE
#ENDIF
#ENDIF
#IFDEF TRAMPOLINE_ALIGNMENT
#ENDIF
#IFDEF PCC_STATIC_STRUCT_RETURN
#ENDIF
#IF
#UNDEF HAS_INIT_SECTION
#DEFINE HAS_INIT_SECTION
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_return
#ELSE
#ENDIF
#IFDEF PCC_STATIC_STRUCT_RETURN
#ENDIF
#IFDEF PROMOTE_FUNCTION_RETURN
#ENDIF
#IFDEF FUNCTION_OUTGOING_VALUE
#ELSE
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ENDIF
#IFDEF TRAMPOLINE_TEMPLATE
#ENDIF
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IFDEF TRAMPOLINE_TEMPLATE
#ENDIF
#IFDEF TRAMPOLINE_TEMPLATE
#ENDIF
#IFDEF TRAMPOLINE_TEMPLATE
#ENDIF
#IFDEF EXIT_IGNORE_STACK
#ENDIF
#IFDEF FUNCTION_OUTGOING_VALUE
#ELSE
#ENDIF
#IFDEF FUNCTION_OUTGOING_VALUE
#ELSE
#ENDIF
#IFDEF HAVE_return
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_prologue
#ENDIF
#IFDEF HAVE_epilogue
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
< signal.h
" obstack.h
" intl.h
" prefix.h
#IFDEF VMS
#DEFINE exit
#ENDIF
#IFDEF EXECUTABLE_SUFFIX
#DEFINE HAVE_EXECUTABLE_SUFFIX
#ELSE
#DEFINE EXECUTABLE_SUFFIX
#ENDIF
#IFDEF OBJECT_SUFFIX
#DEFINE HAVE_OBJECT_SUFFIX
#ELSE
#DEFINE OBJECT_SUFFIX
#ENDIF
#IFNDEF PATH_SEPARATOR
#DEFINE PATH_SEPARATOR
#ENDIF
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#IFNDEF DIR_SEPARATOR_2
#DEFINE IS_DIR_SEPARATOR
#ELSE
#DEFINE IS_DIR_SEPARATOR
#ENDIF
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF GET_ENV_PATH_LIST
#DEFINE GET_ENV_PATH_LIST
#ENDIF
#IFNDEF HAVE_KILL
#DEFINE kill
#ENDIF
#DEFINE MIN_FATAL_STATUS
#IFDEF CROSS_COMPILE
#ELSE
#ENDIF
#IFNDEF ASM_SPEC
#DEFINE ASM_SPEC
#ENDIF
#IFNDEF ASM_FINAL_SPEC
#DEFINE ASM_FINAL_SPEC
#ENDIF
#IFNDEF CPP_SPEC
#DEFINE CPP_SPEC
#ENDIF
#IFNDEF CC1_SPEC
#DEFINE CC1_SPEC
#ENDIF
#IFNDEF CC1PLUS_SPEC
#DEFINE CC1PLUS_SPEC
#ENDIF
#IFNDEF LINK_SPEC
#DEFINE LINK_SPEC
#ENDIF
#IFNDEF LIB_SPEC
#DEFINE LIB_SPEC
#ENDIF
#IFNDEF LIBGCC_SPEC
#IF
#DEFINE LIBGCC_SPEC
#ELSE
#DEFINE LIBGCC_SPEC
#ENDIF
#ENDIF
#IFNDEF STARTFILE_SPEC
#DEFINE STARTFILE_SPEC
#ENDIF
#IFNDEF SWITCHES_NEED_SPACES
#DEFINE SWITCHES_NEED_SPACES
#ENDIF
#IFNDEF ENDFILE_SPEC
#DEFINE ENDFILE_SPEC
#ENDIF
#IFNDEF SIGNED_CHAR_SPEC
#IF
#DEFINE SIGNED_CHAR_SPEC
#ELSE
#DEFINE SIGNED_CHAR_SPEC
#ENDIF
#ENDIF
#IFNDEF LINKER_NAME
#DEFINE LINKER_NAME
#ENDIF
" multilib.h
#IFNDEF MULTILIB_DEFAULTS
#DEFINE MULTILIB_DEFAULTS
#ENDIF
#DEFINE DEFAULT_SWITCH_TAKES_ARG
#IFNDEF SWITCH_TAKES_ARG
#DEFINE SWITCH_TAKES_ARG
#ENDIF
#DEFINE DEFAULT_WORD_SWITCH_TAKES_ARG
#IFNDEF WORD_SWITCH_TAKES_ARG
#DEFINE WORD_SWITCH_TAKES_ARG
#ENDIF
#IFDEF HAVE_EXECUTABLE_SUFFIX
#DEFINE DEFAULT_SWITCH_CURTAILS_COMPILATION
#IFNDEF SWITCH_CURTAILS_COMPILATION
#DEFINE SWITCH_CURTAILS_COMPILATION
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
" specs.h
#IFDEF LINK_COMMAND_SPEC
#ELSE
#IFDEF LINK_LIBGCC_SPECIAL
#ELSE
#ENDIF
#ENDIF
#IFDEF HAVE_STRERROR
#ELSE
#ENDIF
#DEFINE INIT_STATIC_SPEC
#IFDEF EXTRA_SPECS
#ENDIF
#IFDEF EXTRA_SPECS
#ENDIF
#IFDEF DEBUG_SPECS
#ENDIF
#DEFINE MKTEMP_EACH_FILE
#IFDEF MKTEMP_EACH_FILE
#ENDIF
#IFDEF CROSS_COMPILE
#UNDEF MD_EXEC_PREFIX
#UNDEF MD_STARTFILE_PREFIX
#UNDEF MD_STARTFILE_PREFIX_1
#ENDIF
#IFNDEF STANDARD_EXEC_PREFIX
#DEFINE STANDARD_EXEC_PREFIX
#ENDIF
#IFDEF MD_EXEC_PREFIX
#ENDIF
#IFNDEF STANDARD_STARTFILE_PREFIX
#DEFINE STANDARD_STARTFILE_PREFIX
#ENDIF
#IFDEF MD_STARTFILE_PREFIX
#ENDIF
#IFDEF MD_STARTFILE_PREFIX_1
#ENDIF
#IFNDEF TOOLDIR_BASE_PREFIX
#DEFINE TOOLDIR_BASE_PREFIX
#ENDIF
#IFDEF DEBUG_SPECS
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFNDEF HAVE_PUTENV
#IFNDEF VMS
#ENDIF
#ENDIF
#IFDEF DEFAULT_ASSEMBLER
#ENDIF
#IFDEF DEFAULT_LINKER
#ENDIF
#IFDEF HAVE_DOS_BASED_FILESYSTEM
#ENDIF
#IF
#ENDIF
#IFDEF DEBUG
#ENDIF
#IF
#IFDEF HAVE_OBJECT_SUFFIX
#ENDIF
#IFDEF HAVE_EXECUTABLE_SUFFIX
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF OS2
#ENDIF
#IFDEF HAVE_OBJECT_SUFFIX
#ENDIF
#IFDEF RELATIVE_PREFIX_NOT_LINKDIR
#ENDIF
#IFDEF SPACE_AFTER_L_OPTION
#ENDIF
#IFDEF SPACE_AFTER_L_OPTION
#ENDIF
#IFDEF SPACE_AFTER_L_OPTION
#ENDIF
#IFDEF SPACE_AFTER_L_OPTION
#ENDIF
#IFDEF MKTEMP_EACH_FILE
#ELSE
#ENDIF
#IFDEF DEBUG_SPECS
#ENDIF
#IFNDEF SMALL_ARG_MAX
#ENDIF
#IFDEF HAVE_LC_MESSAGES
#ENDIF
#IFDEF SIGHUP
#ENDIF
#IFDEF SIGPIPE
#ENDIF
#IFDEF INIT_ENVIRONMENT
#ENDIF
#IFNDEF MKTEMP_EACH_FILE
#ENDIF
#IFDEF MD_EXEC_PREFIX
#ENDIF
#IFDEF MD_STARTFILE_PREFIX
#ENDIF
#IFDEF MD_STARTFILE_PREFIX_1
#ENDIF
#IFDEF HAVE_DOS_BASED_FILESYSTEM
#ENDIF
#IF
#ENDIF
#IFDEF OS2
#ELSE
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
__E__O__F__
" config.h
" system.h
" intl.h
#UNDEF abort
" gcov-io.h
#DEFINE STRING_SIZE
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_LC_MESSAGES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
" toplev.h
" rtl.h
" regs.h
" hard-reg-set.h
" flags.h
" real.h
" insn-config.h
" recog.h
" basic-block.h
" output.h
" expr.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE MAX_PASSES
#DEFINE FOLLOW_BACK_EDGES
#DEFINE INSN_CUID
#DEFINE CUID_INSN
#DEFINE REG_SET_TABLE_SLOP
#IFNDEF AVOID_CCMODE_COPIES
#ENDIF
#IFDEF AVOID_CCMODE_COPIES
#ELSE
#ENDIF
#DEFINE NEVER_SET
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE MAX_USES
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" scan.h
" cpplib.h
" cpphash.h
#UNDEF abort
#DEFINE HASH_SIZE
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" insn-config.h
#IFDEF HAVE_SYS_RESOURCE_H
< sys/resource.h
#ENDIF
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE MAX_DIGITS
#DEFINE NULL_ATTR
#DEFINE MAX_ATTRS_INDEX
#DEFINE SIMPLIFY_TEST_EXP
#DEFINE SIMPLIFY_ALTERNATIVE
#IF
#ENDIF
#IF
#ENDIF
#DEFINE oballoc
#DEFINE RTL_HASH_SIZE
#DEFINE RTL_HASH
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE NUM_UNITOP_CUTOFF
#IFDEF HAIFA
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IF
#ENDIF
__E__O__F__
" hconfig.h
" system.h
#DEFINE DEFTREECODE
" tree.def
" gencheck.h
#IF
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFDEF EXTRA_CC_NAMES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
" insn-config.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
#UNDEF abort
#DEFINE NO_GENRTL_H
" rtl.h
#DEFINE DEF_RTL_EXPR
" rtl.def
#IF
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE MAX_MAX_OPERANDS
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" rtl.h
" obstack.h
#DEFINE OUTPUT_LABEL
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE SUBROUTINE_THRESHOLD
#IFDEF PREDICATE_CODES
#ENDIF
#DEFINE NUM_KNOWN_PREDS
#IFDEF PREDICATE_CODES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
#IF
#DEFINE getcwd
#IFDEF MAXPATHLEN
#DEFINE GUESSPATHLEN
#ELSE
#DEFINE GUESSPATHLEN
#ENDIF
#ELSE
#DEFINE GUESSPATHLEN
#ENDIF
#IF
#IFDEF ERANGE
#ENDIF
#ELSE
#IFNDEF MAXPATHLEN
#DEFINE MAXPATHLEN
#ENDIF
#IFDEF VMS
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" machmode.h
" hard-reg-set.h
" rtl.h
" flags.h
" basic-block.h
" regs.h
" insn-config.h
" reload.h
" output.h
" toplev.h
#DEFINE INT_BITS
#DEFINE INT_TYPE
#DEFINE CONFLICTP
#DEFINE SET_CONFLICT
#DEFINE REGBITP
#DEFINE SET_REGBIT
#DEFINE ALLOCNO_LIVE_P
#DEFINE SET_ALLOCNO_LIVE
#DEFINE CLEAR_ALLOCNO_LIVE
#IF
#DEFINE NUM_NO_CONFLICT_PAIRS
#ENDIF
#IFDEF ELIMINABLE_REGS
#ENDIF
#IFDEF EXIT_IGNORE_STACK
#ENDIF
#IFDEF OVERLAPPING_REGNO_P
#ENDIF
#IFDEF ELIMINABLE_REGS
#IF
#ENDIF
#ELSE
#ENDIF
#IFDEF LEAF_REGISTERS
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF HARD_REG_SET
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IFDEF REG_ALLOC_ORDER
#ELSE
#ENDIF
#IFNDEF REG_ALLOC_ORDER
#ENDIF
#IFDEF REG_ALLOC_ORDER
#ELSE
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IF
#ENDIF
__E__O__F__
#IFNDEF lint
#ENDIF
#IF
< unistd.h
#ENDIF
#IFDEF DEBUG
< stdio.h
#ENDIF
" gmon.h
#IFDEF __alpha
#ENDIF
#DEFINE SCALE_1_TO_1
#DEFINE MSG
#IFNDEF hp300
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF DEBUG
#ENDIF
#DEFINE TOLIMIT
__E__O__F__
< config.h
" system.h
" rtl.h
" flags.h
" output.h
" hard-reg-set.h
" basic-block.h
" toplev.h
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" toplev.h
" rtl.h
" basic-block.h
" regs.h
" hard-reg-set.h
" flags.h
" insn-config.h
" insn-attr.h
" except.h
" toplev.h
" recog.h
#IFDEF INSN_SCHEDULING
#IFNDEF ISSUE_RATE
#DEFINE ISSUE_RATE
#ENDIF
#DEFINE MAX_RGN_BLOCKS
#DEFINE MAX_RGN_INSNS
#DEFINE INSN_LUID
#DEFINE INSN_PRIORITY
#DEFINE INSN_COST
#DEFINE INSN_UNIT
#DEFINE INSN_REG_WEIGHT
#DEFINE INSN_DEPEND
#DEFINE INSN_DEP_COUNT
#DEFINE INSN_BLOCKAGE
#DEFINE UNIT_BITS
#DEFINE BLOCKAGE_MASK
#DEFINE ENCODE_BLOCKAGE
#DEFINE UNIT_BLOCKED
#DEFINE BLOCKAGE_RANGE
#DEFINE MIN_BLOCKAGE_COST
#DEFINE MAX_BLOCKAGE_COST
#DEFINE DONE_PRIORITY
#DEFINE MAX_PRIORITY
#DEFINE TAIL_PRIORITY
#DEFINE LAUNCH_PRIORITY
#DEFINE DONE_PRIORITY_P
#DEFINE LOW_PRIORITY_P
#DEFINE INSN_REF_COUNT
#DEFINE LINE_NOTE
#DEFINE NEXT_Q
#DEFINE NEXT_Q_AFTER
#DEFINE INSN_TICK
#DEFINE INSN_BLOCK
#DEFINE CANT_MOVE
#DEFINE NEXT_IN
#DEFINE NEXT_OUT
#DEFINE FROM_BLOCK
#DEFINE TO_BLOCK
#DEFINE IN_EDGES
#DEFINE OUT_EDGES
#DEFINE RGN_NR_BLOCKS
#DEFINE RGN_BLOCKS
#DEFINE BLOCK_TO_BB
#DEFINE CONTAINING_RGN
#DEFINE BB_TO_BLOCK
#DEFINE IS_VALID
#DEFINE IS_SPECULATIVE
#DEFINE SRC_PROB
#DEFINE IS_RGN_ENTRY
#DEFINE IS_DOMINATED
#DEFINE GET_SRC_PROB
#DEFINE EDGE_TO_BIT
#DEFINE ABS_VALUE
#DEFINE INSN_PROBABILITY
#DEFINE IS_SPECULATIVE_INSN
#DEFINE INSN_BB
#DEFINE MIN_DIFF_PRIORITY
#DEFINE MIN_PROBABILITY
#DEFINE MIN_PROB_DIFF
#ENDIF
#DEFINE SIZE_FOR_MODE
#IFDEF HAVE_cc0
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#IFNDEF INSN_SCHEDULING
#ELSE
#IFNDEF __GNUC__
#DEFINE __inline
#ENDIF
#IFNDEF HAIFA_INLINE
#DEFINE HAIFA_INLINE
#ENDIF
#DEFINE BITSET_UNION
#DEFINE BITSET_INTER
#DEFINE BITSET_DIFFER
#DEFINE BITSET_INVERT
#DEFINE BITSET_ADD
#DEFINE BITSET_REMOVE
#DEFINE UPDATE_LOOP_RELATIONS
#DEFINE WORST_CLASS
#DEFINE IS_REACHABLE
#DEFINE FED_BY_SPEC_LOAD
#DEFINE IS_LOAD_INSN
#DEFINE CONST_BASED_ADDRESS_P
#IF
#ENDIF
#IF
#ENDIF
#IFDEF ADJUST_COST
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#DEFINE SCHED_SORT
#IFDEF ADJUST_PRIORITY
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE MAX_VISUAL_LINES
#DEFINE INSN_LEN
#DEFINE BUF_LEN
#DEFINE NEED_NOTHING
#DEFINE NEED_HEAD
#DEFINE NEED_TAIL
#IFDEF MD_SCHED_INIT
#ENDIF
#IFDEF MD_SCHED_REORDER
#ENDIF
#IFDEF MD_SCHED_REORDER
#ENDIF
#IFDEF MD_SCHED_VARIABLE_ISSUE
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#ENDIF
__E__O__F__
" config.h
#IFDEF HALF_PIC_INIT
" system.h
" tree.h
" rtl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF MAX_HASH_TABLE
#DEFINE MAX_HASH_TABLE
#ENDIF
#DEFINE HASHBITS
#IFDEF HALF_PIC_DEBUG
#ENDIF
#IFDEF HALF_PIC_DEBUG
#ENDIF
#IFDEF HALF_PIC_DEBUG
#ENDIF
#IFDEF HALF_PIC_DEBUG
#ENDIF
#IFDEF HALF_PIC_DEBUG
#ENDIF
#IFDEF HALF_PIC_DEBUG
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" hash.h
" obstack.h
" toplev.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE DEFAULT_SIZE
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" regs.h
" flags.h
" insn-config.h
" insn-flags.h
" expr.h
" output.h
" recog.h
" integrate.h
" real.h
" except.h
" function.h
" toplev.h
" intl.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE CEIL_ROUND
#IFNDEF INTEGRATE_THRESHOLD
#DEFINE INTEGRATE_THRESHOLD
#ENDIF
#IF
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IF
#ENDIF
#DEFINE FIXED_BASE_PLUS_P
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ENDIF
#IFDEF FRAME_GROWS_DOWNWARD
#ENDIF
#IFDEF STACK_BOUNDARY
#ENDIF
#IFDEF ARGS_GROW_DOWNWARD
#ENDIF
#IFDEF STACK_BOUNDARY
#ENDIF
#IF
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFNDEF NO_FUNCTION_CSE
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
__E__O__F__
" gansidecl.h
" intl.h
__E__O__F__
" config.h
" system.h
" rtl.h
" flags.h
" hard-reg-set.h
" regs.h
" insn-config.h
" insn-flags.h
" insn-attr.h
" recog.h
" expr.h
" real.h
" except.h
" toplev.h
#IFNDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_return
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFNDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_conditional_move
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_incscc
#ENDIF
#IFDEF HAVE_decscc
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#ENDIF
#IF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#ENDIF
#IF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#ENDIF
#IFDEF HAVE_trap
#ENDIF
#IFDEF HAVE_return
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#IFNDEF HAVE_cc0
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" flags.h
" real.h
" insn-config.h
" recog.h
" basic-block.h
__E__O__F__
__E__O__F__
" config.h
#IFDEF abort
#UNDEF abort
#ENDIF
#IFNDEF perform_mulsi3
#DEFINE perform_mulsi3
#ENDIF
#IFNDEF perform_divsi3
#DEFINE perform_divsi3
#ENDIF
#IFNDEF perform_udivsi3
#DEFINE perform_udivsi3
#ENDIF
#IFNDEF perform_modsi3
#DEFINE perform_modsi3
#ENDIF
#IFNDEF perform_umodsi3
#DEFINE perform_umodsi3
#ENDIF
#IFNDEF perform_lshrsi3
#DEFINE perform_lshrsi3
#ENDIF
#IFNDEF perform_ashrsi3
#DEFINE perform_ashrsi3
#ENDIF
#IFNDEF perform_ashlsi3
#DEFINE perform_ashlsi3
#ENDIF
#IFNDEF perform_adddf3
#DEFINE perform_adddf3
#ENDIF
#IFNDEF perform_subdf3
#DEFINE perform_subdf3
#ENDIF
#IFNDEF perform_muldf3
#DEFINE perform_muldf3
#ENDIF
#IFNDEF perform_divdf3
#DEFINE perform_divdf3
#ENDIF
#IFNDEF perform_addsf3
#DEFINE perform_addsf3
#ENDIF
#IFNDEF perform_subsf3
#DEFINE perform_subsf3
#ENDIF
#IFNDEF perform_mulsf3
#DEFINE perform_mulsf3
#ENDIF
#IFNDEF perform_divsf3
#DEFINE perform_divsf3
#ENDIF
#IFNDEF perform_negdf2
#DEFINE perform_negdf2
#ENDIF
#IFNDEF perform_negsf2
#DEFINE perform_negsf2
#ENDIF
#IFNDEF perform_fixdfsi
#DEFINE perform_fixdfsi
#ENDIF
#IFNDEF perform_fixsfsi
#DEFINE perform_fixsfsi
#ENDIF
#IFNDEF perform_floatsidf
#DEFINE perform_floatsidf
#ENDIF
#IFNDEF perform_floatsisf
#DEFINE perform_floatsisf
#ENDIF
#IFNDEF perform_extendsfdf2
#DEFINE perform_extendsfdf2
#ENDIF
#IFNDEF perform_truncdfsf2
#DEFINE perform_truncdfsf2
#ENDIF
#IFNDEF perform_eqdf2
#DEFINE perform_eqdf2
#ENDIF
#IFNDEF perform_nedf2
#DEFINE perform_nedf2
#ENDIF
#IFNDEF perform_gtdf2
#DEFINE perform_gtdf2
#ENDIF
#IFNDEF perform_gedf2
#DEFINE perform_gedf2
#ENDIF
#IFNDEF perform_ltdf2
#DEFINE perform_ltdf2
#ENDIF
#IFNDEF perform_ledf2
#DEFINE perform_ledf2
#ENDIF
#IFNDEF perform_eqsf2
#DEFINE perform_eqsf2
#ENDIF
#IFNDEF perform_nesf2
#DEFINE perform_nesf2
#ENDIF
#IFNDEF perform_gtsf2
#DEFINE perform_gtsf2
#ENDIF
#IFNDEF perform_gesf2
#DEFINE perform_gesf2
#ENDIF
#IFNDEF perform_ltsf2
#DEFINE perform_ltsf2
#ENDIF
#IFNDEF perform_lesf2
#DEFINE perform_lesf2
#ENDIF
#IFNDEF nongcc_SI_type
#DEFINE nongcc_SI_type
#ENDIF
#IFNDEF nongcc_word_type
#DEFINE nongcc_word_type
#ENDIF
#IFNDEF FLOAT_VALUE_TYPE
#DEFINE FLOAT_VALUE_TYPE
#ENDIF
#IFNDEF INTIFY
#DEFINE INTIFY
#ENDIF
#IFNDEF FLOATIFY
#DEFINE FLOATIFY
#ENDIF
#IFNDEF FLOAT_ARG_TYPE
#DEFINE FLOAT_ARG_TYPE
#ENDIF
#IFDEF L_mulsi3
#ENDIF
#IFDEF L_udivsi3
#ENDIF
#IFDEF L_divsi3
#ENDIF
#IFDEF L_umodsi3
#ENDIF
#IFDEF L_modsi3
#ENDIF
#IFDEF L_lshrsi3
#ENDIF
#IFDEF L_ashrsi3
#ENDIF
#IFDEF L_ashlsi3
#ENDIF
#IFDEF L_divdf3
#ENDIF
#IFDEF L_muldf3
#ENDIF
#IFDEF L_negdf2
#ENDIF
#IFDEF L_adddf3
#ENDIF
#IFDEF L_subdf3
#ENDIF
#IFDEF L_eqdf2
#ENDIF
#IFDEF L_nedf2
#ENDIF
#IFDEF L_gtdf2
#ENDIF
#IFDEF L_gedf2
#ENDIF
#IFDEF L_ltdf2
#ENDIF
#IFDEF L_ledf2
#ENDIF
#IFDEF L_fixdfsi
#ENDIF
#IFDEF L_fixsfsi
#ENDIF
#IFDEF L_floatsidf
#ENDIF
#IFDEF L_floatsisf
#ENDIF
#IFDEF L_addsf3
#ENDIF
#IFDEF L_negsf2
#ENDIF
#IFDEF L_subsf3
#ENDIF
#IFDEF L_eqsf2
#ENDIF
#IFDEF L_nesf2
#ENDIF
#IFDEF L_gtsf2
#ENDIF
#IFDEF L_gesf2
#ENDIF
#IFDEF L_ltsf2
#ENDIF
#IFDEF L_lesf2
#ENDIF
#IFDEF L_mulsf3
#ENDIF
#IFDEF L_divsf3
#ENDIF
#IFDEF L_truncdfsf2
#ENDIF
#IFDEF L_extendsfdf2
#ENDIF
__E__O__F__
" tconfig.h
#IFNDEF inhibit_libc
< stdlib.h
< unistd.h
#ENDIF
" machmode.h
" defaults.h
#IFNDEF L_trampoline
< stddef.h
#ENDIF
#IFDEF abort
#UNDEF abort
#ENDIF
#IF
#DEFINE WEAK_ALIAS
#ENDIF
#IF
#DEFINE inhibit_libc
#ENDIF
#IFNDEF LIBGCC2_WORDS_BIG_ENDIAN
#DEFINE LIBGCC2_WORDS_BIG_ENDIAN
#ENDIF
#IFNDEF LIBGCC2_LONG_DOUBLE_TYPE_SIZE
#DEFINE LIBGCC2_LONG_DOUBLE_TYPE_SIZE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE char
#DEFINE short
#DEFINE int
#DEFINE long
#DEFINE unsigned
#DEFINE float
#DEFINE double
#DEFINE SI_TYPE_SIZE
#IF
#ELSE
#ENDIF
#IF
" longlong.h
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IFDEF L_lshrdi3
#ENDIF
#IFDEF L_ashldi3
#ENDIF
#IFDEF L_ashrdi3
#ENDIF
#IFDEF L_ffsdi2
#ENDIF
#IFDEF L_muldi3
#ENDIF
#IFDEF L_udiv_w_sdiv
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#DEFINE L_udivmoddi4
#ENDIF
#IFDEF L_udivmoddi4
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#ENDIF
#IFDEF L_divdi3
#ENDIF
#IFDEF L_moddi3
#ENDIF
#IFDEF L_umoddi3
#ENDIF
#IFDEF L_udivdi3
#ENDIF
#IFDEF L_cmpdi2
#ENDIF
#IFDEF L_ucmpdi2
#ENDIF
#IF
#DEFINE WORD_SIZE
#DEFINE HIGH_WORD_COEFF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE WORD_SIZE
#DEFINE HIGH_WORD_COEFF
#ENDIF
#IF
#ENDIF
#IFDEF L_fixunsdfdi
#DEFINE WORD_SIZE
#DEFINE HIGH_WORD_COEFF
#ENDIF
#IFDEF L_fixdfdi
#ENDIF
#IFDEF L_fixunssfdi
#DEFINE WORD_SIZE
#DEFINE HIGH_WORD_COEFF
#ENDIF
#IFDEF L_fixsfdi
#ENDIF
#IF
#DEFINE WORD_SIZE
#DEFINE HIGH_HALFWORD_COEFF
#DEFINE HIGH_WORD_COEFF
#ENDIF
#IF
#DEFINE WORD_SIZE
#DEFINE HIGH_HALFWORD_COEFF
#DEFINE HIGH_WORD_COEFF
#ENDIF
#IFDEF L_floatdidf
#DEFINE WORD_SIZE
#DEFINE HIGH_HALFWORD_COEFF
#DEFINE HIGH_WORD_COEFF
#ENDIF
#IFDEF L_floatdisf
#DEFINE WORD_SIZE
#DEFINE HIGH_HALFWORD_COEFF
#DEFINE HIGH_WORD_COEFF
#DEFINE DI_SIZE
#DEFINE UNKNOWN_FLOAT_FORMAT
#DEFINE IEEE_FLOAT_FORMAT
#DEFINE VAX_FLOAT_FORMAT
#DEFINE IBM_FLOAT_FORMAT
#IFNDEF HOST_FLOAT_FORMAT
#DEFINE HOST_FLOAT_FORMAT
#ENDIF
#IF
#DEFINE DF_SIZE
#DEFINE SF_SIZE
#ENDIF
#IF
#DEFINE DF_SIZE
#DEFINE SF_SIZE
#ENDIF
#IF
#DEFINE DF_SIZE
#DEFINE SF_SIZE
#ENDIF
#DEFINE REP_BIT
#ENDIF
#IF
#UNDEF char
#UNDEF short
#UNDEF int
#UNDEF type_specifier overflow: 110
long
#UNDEF unsigned
#UNDEF float
#UNDEF double
#UNDEF MIN
#UNDEF MAX
< limits.h
#ENDIF
#IFDEF L_fixunsdfsi
#UNDEF char
#UNDEF short
#UNDEF int
#UNDEF type_specifier overflow: 110
long
#UNDEF unsigned
#UNDEF float
#UNDEF double
#UNDEF MIN
#UNDEF MAX
< limits.h
#ENDIF
#IFDEF L_fixunssfsi
#UNDEF char
#UNDEF short
#UNDEF int
#UNDEF type_specifier overflow: 110
long
#UNDEF unsigned
#UNDEF float
#UNDEF double
#UNDEF MIN
#UNDEF MAX
< limits.h
#ENDIF
#DEFINE SItype
#DEFINE USItype
#DEFINE DItype
#DEFINE UDItype
#DEFINE SFtype
#DEFINE DFtype
#UNDEF char
#UNDEF short
#UNDEF int
#UNDEF type_specifier overflow: 110
long
#UNDEF unsigned
#UNDEF float
#UNDEF double
#IFDEF L__gcc_bcmp
type_specifier overflow: 108
#ENDIF
#IFDEF L__dummy
#ENDIF
#IFDEF L_varargs
#IFDEF __i860__
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#ELSE
#IFDEF __sparc__
#IFDEF NEED_PROC_COMMAND
#ENDIF
#IFDEF NEED_TYPE_COMMAND
#ENDIF
#ELSE
#IF
#IFDEF __mips16
#ENDIF
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF L_eprintf
#IFNDEF inhibit_libc
#UNDEF NULL
< stdio.h
#ENDIF
#ENDIF
#IFDEF L_bb
#IFDEF BLOCK_PROFILER_CODE
#ELSE
#IFNDEF inhibit_libc
#UNDEF NULL
< stdio.h
" gbl-ctors.h
" gcov-io.h
< string.h
#IFDEF DEREK
#ENDIF
#IFDEF ON_EXIT
#ENDIF
#IFNDEF MACHINE_STATE_SAVE
#DEFINE MACHINE_STATE_SAVE
#ENDIF
#IFNDEF MACHINE_STATE_RESTORE
#DEFINE MACHINE_STATE_RESTORE
#ENDIF
#DEFINE BB_BUCKETS
#DEFINE BBINBUFSIZE
#DEFINE BBINBUFSIZESTR
#IFDEF HAVE_POPEN
< sys/stat.h
#DEFINE GOPENDECOMPRESS
#DEFINE GOPENCOMPRESS
#ENDIF
#IFDEF HAVE_POPEN
#ELSE
#ENDIF
#IFDEF ON_EXIT
#ENDIF
#IFDEF HAVE_POPEN
#ELSE
#ENDIF
#IFDEF ON_EXIT
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF L_shtab
#ENDIF
#IFDEF L_clear_cache
#DEFINE INSN_CACHE_PLANE_SIZE
#IFDEF CLEAR_INSN_CACHE
#ELSE
#IFDEF INSN_CACHE_SIZE
#IF
#ELSE
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF L_trampoline
#IF
#IFDEF _ALPHA_
#ELSE
#ENDIF
#IFDEF i386
#ENDIF
#ENDIF
#IFDEF TRANSFER_FROM_TRAMPOLINE
#ENDIF
#IF
#IFDEF NeXTStep21
< mach.h
#ELSE
< mach/mach.h
#ENDIF
#IFDEF CLEAR_INSN_CACHE
#ELSE
#ENDIF
#ENDIF
#IFDEF __convex__
< sys/mman.h
< sys/vmparam.h
< machine/machparam.h
#ENDIF
#IFDEF __sysV88__
< sys/param.h
< errno.h
< sys/m88kbcs.h
#ENDIF
#IFDEF __sysV68__
< sys/signal.h
< errno.h
#IFDEF MCT_TEXT
#ENDIF
#IFDEF MCT_TEXT
#ENDIF
#ENDIF
#IFDEF __pyr__
#UNDEF NULL
< stdio.h
< sys/mman.h
< sys/types.h
< sys/param.h
< sys/vmmac.h
#ENDIF
#IF
< stdio.h
< sys/types.h
< sys/param.h
< syscall.h
< machine/sysnews.h
#ENDIF
#ENDIF
#IFNDEF __CYGWIN__
#IFDEF L__main
" gbl-ctors.h
#IFNDEF NAME__MAIN
#DEFINE NAME__MAIN
#DEFINE SYMBOL__MAIN
#ENDIF
#IFDEF INIT_SECTION_ASM_OP
#UNDEF HAS_INIT_SECTION
#DEFINE HAS_INIT_SECTION
#ENDIF
#IF
#IFDEF DO_GLOBAL_DTORS_BODY
#ELSE
#ENDIF
#ENDIF
#IFNDEF HAS_INIT_SECTION
#IFNDEF ON_EXIT
#DEFINE ON_EXIT
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#ENDIF
#ENDIF
#IFDEF L_ctors
" gbl-ctors.h
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF L_exit
" gbl-ctors.h
#IFDEF NEED_ATEXIT
#IFDEF ON_EXIT
#UNDEF ON_EXIT
#ENDIF
#ENDIF
#IFNDEF ON_EXIT
#IFDEF NEED_ATEXIT
< errno.h
#ENDIF
#IF
#IFDEF NEED_ATEXIT
#ELSE
#ENDIF
#ENDIF
#IFNDEF HAVE_ATEXIT
#IFNDEF inhibit_libc
#ENDIF
#ENDIF
#IFDEF EXIT_BODY
#ELSE
#ENDIF
#ELSE
#IFNDEF HAVE_ATEXIT
#ENDIF
#ENDIF
#ENDIF
#IFDEF L_eh
" gthr.h
#IF
#ENDIF
" eh-common.h
#IFNDEF inhibit_libc
< stdio.h
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF DONT_USE_BUILTIN_SETJMP
#ENDIF
#IFDEF DONT_USE_BUILTIN_SETJMP
#ELSE
#ENDIF
#IFDEF DONT_USE_BUILTIN_SETJMP
#ELSE
#ENDIF
#IFDEF DONT_USE_BUILTIN_SETJMP
#ELSE
#ENDIF
#IFNDEF inhibit_libc
#ENDIF
#IFDEF EH_TABLE_LOOKUP
#ELSE
#IFDEF DWARF2_UNWIND_INFO
#ENDIF
#ENDIF
#IFDEF DWARF2_UNWIND_INFO
" frame.h
#IFDEF INCOMING_REGNO
#DEFINE target_flags
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF L_pure
#IFNDEF inhibit_libc
#UNDEF NULL
< stdio.h
#IFDEF __GNU_LIBRARY__
#DEFINE write
#ENDIF
#ENDIF
#DEFINE MESSAGE
#IFNDEF inhibit_libc
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" flags.h
" basic-block.h
" regs.h
" hard-reg-set.h
" insn-config.h
" insn-attr.h
" recog.h
" output.h
" toplev.h
#IFDEF ORDER_REGS_FOR_LOCAL_ALLOC
#ENDIF
#DEFINE CLEAR
#IFDEF USE_C_ALLOCA
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ELSE
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ELSE
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ENDIF
#DEFINE EXCHANGE
#DEFINE EXCHANGE
#IFDEF INSN_SCHEDULING
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#DEFINE QTY_CMP_PRI
#DEFINE QTY_CMP_SUGG
#UNDEF QTY_CMP_SUGG
#UNDEF QTY_CMP_PRI
#IFDEF HARD_REG_SET
#ENDIF
#IFDEF ELIMINABLE_REGS
#ENDIF
#IFDEF ELIMINABLE_REGS
#IF
#ENDIF
#ELSE
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IFDEF REG_ALLOC_ORDER
#ELSE
#ENDIF
#IFNDEF REG_ALLOC_ORDER
#ENDIF
#IFDEF HARD_REG_SET
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" obstack.h
" expr.h
" insn-config.h
" insn-flags.h
" regs.h
" hard-reg-set.h
" recog.h
" flags.h
" real.h
" loop.h
" except.h
" toplev.h
#IFDEF HAVE_decrement_and_branch_on_count
#ENDIF
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IF
#ENDIF
#DEFINE INSN_IN_RANGE_P
#IFDEF HAVE_decrement_and_branch_on_count
#ENDIF
#IF
#ENDIF
#IFDEF ADDRESS_COST
#ELSE
#ENDIF
#IFDEF HAVE_decrement_and_branch_on_count
#ENDIF
#IFDEF AVOID_CCMODE_COPIES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_decrement_and_branch_until_zero
#ENDIF
#IFNDEF DONT_REDUCE_ADDR
#ENDIF
#IFDEF HAVE_decrement_and_branch_until_zero
#ENDIF
#IFDEF HAVE_decrement_and_branch_until_zero
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#IFDEF HAVE_cc0
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_decrement_and_branch_on_count
#ENDIF
#IF
#ENDIF
#IFDEF ADDRESS_COST
#ELSE
#ENDIF
#IF
#IFDEF ADDRESS_COST
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IFDEF FLOAT_STORE_FLAG_VALUE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_decrement_and_branch_on_count
#IF
#ENDIF
#ENDIF
#IFDEF AVOID_CCMODE_COPIES
#ENDIF
__E__O__F__
" hconfig.j
" system.j
" assert.j
#IF
< stddef.h
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE ARRAY_SIZE
#DEFINE die_unless
__E__O__F__
#DEFINE FFEBAD_MAX_
" proj.h
" bad.h
" flags.j
" com.h
" toplev.j
" where.h
#DEFINE FFEBAD_LONG_MSGS_
#DEFINE FFEBAD_MSGS1
#IF
#DEFINE FFEBAD_MSGS2
#ELSE
#DEFINE FFEBAD_MSGS2
#ENDIF
" bad.def
#UNDEF FFEBAD_MSGS1
#UNDEF FFEBAD_MSGS2
#DEFINE ffebad_bufflush_
#DEFINE ffebad_bufputc_
#IF
#ENDIF
#DEFINE MAX_SPACES
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" proj.h
" glimits.j
" bit.h
" malloc.h
__E__O__F__
" proj.h
" bld.h
" bit.h
" info.h
" lex.h
" malloc.h
" target.h
" where.h
#DEFINE FFEBLD_OP
" bld-op.def
#UNDEF FFEBLD_OP
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE FFEBLD_OP
" bld-op.def
#UNDEF FFEBLD_OP
#DEFINE integerdefault_
#DEFINE logicaldefault_
#DEFINE realdefault_
#DEFINE realdouble_
#DEFINE realquad_
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ERROR error
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IFDEF FFECOM_constantHOOK
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_constantHOOK
#ENDIF
#ENDIF
#IFDEF FFECOM_constantHOOK
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF FFECOM_itemHOOK
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF FFECOM_nonterHOOK
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF FFECOM_nonterHOOK
#ENDIF
__E__O__F__
" proj.h
#IF
" flags.j
" rtl.j
" toplev.j
" tree.j
" output.j
" convert.j
#ENDIF
#DEFINE FFECOM_GCC_INCLUDE
#IFDEF POSIX
#IFNDEF HAVE_STDLIB_H
#DEFINE HAVE_STDLIB_H
#ENDIF
#IFNDEF HAVE_UNISTD_H
#DEFINE HAVE_UNISTD_H
#ENDIF
#IFNDEF STDC_HEADERS
#DEFINE STDC_HEADERS
#ENDIF
#ENDIF
#IF
#IFNDEF HAVE_FCNTL_H
#DEFINE HAVE_FCNTL_H
#ENDIF
#ENDIF
#IFNDEF RLIMIT_STACK
< time.h
#ELSE
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
< sys/resource.h
#ENDIF
#IF
< fcntl.h
#ENDIF
< errno.h
#IF
< stdlib.h
#ELSE
#ENDIF
#IF
< unistd.h
#ENDIF
#IFDEF VMS
< descrip.h
#DEFINE O_RDONLY
#DEFINE O_WRONLY
#DEFINE read
#DEFINE write
#DEFINE open
#DEFINE fopen
#DEFINE freopen
#DEFINE strncat
#DEFINE fstat
#DEFINE ino_t
#DEFINE INCLUDE_LEN_FUDGE
#IFDEF __GNUC__
#DEFINE BSTRING
#ENDIF
#ENDIF
#IFNDEF O_RDONLY
#DEFINE O_RDONLY
#ENDIF
#DEFINE FFECOM_DETERMINE_TYPES
" com.h
" bad.h
" bld.h
" equiv.h
" expr.h
" implic.h
" info.h
" malloc.h
" src.h
" st.h
" storag.h
" symbol.h
" target.h
" top.h
" type.h
#IF
#ENDIF
#IFNDEF FFECOM_sizeMAXSTACKITEM
#DEFINE FFECOM_sizeMAXSTACKITEM
#ENDIF
#IF
#UNDEF FFECOM_sizeMAXSTACKITEM
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF SOMEONE_GETS_DEBUG_SUPPORT_WORKING
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE DEFGFRT
" com-rt.def
#UNDEF DEFGFRT
#DEFINE DEFGFRT
" com-rt.def
#UNDEF DEFGFRT
#DEFINE DEFGFRT
" com-rt.def
#UNDEF DEFGFRT
#DEFINE DEFGFRT
" com-rt.def
#UNDEF DEFGFRT
#DEFINE DEFGFRT
" com-rt.def
#UNDEF DEFGFRT
#DEFINE DEFGFRT
" com-rt.def
#UNDEF DEFGFRT
#ENDIF
#IF
#IFNDEF SIZE_TYPE
#DEFINE SIZE_TYPE
#ENDIF
#DEFINE ffecom_concat_list_count_
#DEFINE ffecom_concat_list_expr_
#DEFINE ffecom_concat_list_maxlen_
#DEFINE ffecom_concat_list_minlen_
#DEFINE ffecom_char_args_
#DEFINE ffecom_char_args_with_null_
#DEFINE NULL_BINDING_LEVEL
#DEFINE IDENTIFIER_GLOBAL_VALUE
#DEFINE IDENTIFIER_LOCAL_VALUE
#DEFINE IDENTIFIER_LABEL_VALUE
#DEFINE IDENTIFIER_INVENTED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF HOHO
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF HOHO
#ELSE
#ENDIF
#IFDEF HOHO
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF HOHO
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IFNDEF HAHA
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF SOMEONE_GETS_DEBUG_SUPPORT_WORKING
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF HOHO
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF SOMEONE_GETS_DEBUG_SUPPORT_WORKING
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IFDEF FFECOM_sizeMAXSTACKITEM
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_sizeMAXSTACKITEM
#ENDIF
#IFDEF SOMEONE_GETS_DEBUG_SUPPORT_WORKING
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF PASS_HOLLERITH_BY_DESCRIPTOR
#ENDIF
#IFDEF PASS_HOLLERITH_BY_DESCRIPTOR
#ENDIF
#IFDEF HOHO
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF MOVE_EXPR
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IFDEF OFFSET_REF
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF HAHA
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
total_cases=0
#IF
#ENDIF
#IF
#ENDIF
#IFDEF IO_BUFFER_SIZE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#DEFINE FILE_NAME_MAP_FILE
#DEFINE INPUT_STACK_MAX
#DEFINE SKIP_WHITE_SPACE
#DEFINE SKIP_ALL_WHITE_SPACE
#IFNDEF INCLUDE_LEN_FUDGE
#DEFINE INCLUDE_LEN_FUDGE
#ENDIF
#IFDEF DIR_SEPARATOR
#ENDIF
#IFNDEF VMS
#IFDEF DIR_SEPARATOR
#ENDIF
#ELSE
#ENDIF
#IFDEF DIR_SEPARATOR
#ENDIF
#IFDEF VMS
#IF
#ENDIF
#ENDIF
#IFDEF EACCES
#ENDIF
#ENDIF
__E__O__F__
" proj.h
" data.h
" bit.h
" bld.h
" com.h
" expr.h
" global.h
" malloc.h
" st.h
" storag.h
" top.h
#IFNDEF FFEDATA_sizeTOO_BIG_INIT_
#DEFINE FFEDATA_sizeTOO_BIG_INIT_
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
total_cases=0
total_cases=0
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
#DEFINE FFEEQUIV_DEBUG
" proj.h
" equiv.h
" bad.h
" bld.h
" com.h
" data.h
" global.h
" lex.h
" malloc.h
" symbol.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" expr.h
" bad.h
" bld.h
" com.h
" global.h
" implic.h
" intrin.h
" info.h
" lex.h
" malloc.h
" src.h
" st.h
" symbol.h
" str.h
" target.h
" where.h
#DEFINE FFEEXPR_operatorassociativityL2R_
#DEFINE FFEEXPR_operatorassociativityR2L_
#DEFINE FFEEXPR_operatorassociativityPOWER_
#DEFINE FFEEXPR_operatorassociativityMULTIPLY_
#DEFINE FFEEXPR_operatorassociativityDIVIDE_
#DEFINE FFEEXPR_operatorassociativityADD_
#DEFINE FFEEXPR_operatorassociativitySUBTRACT_
#DEFINE FFEEXPR_operatorassociativityCONCATENATE_
#DEFINE FFEEXPR_operatorassociativityLT_
#DEFINE FFEEXPR_operatorassociativityLE_
#DEFINE FFEEXPR_operatorassociativityEQ_
#DEFINE FFEEXPR_operatorassociativityNE_
#DEFINE FFEEXPR_operatorassociativityGT_
#DEFINE FFEEXPR_operatorassociativityGE_
#DEFINE FFEEXPR_operatorassociativityNOT_
#DEFINE FFEEXPR_operatorassociativityAND_
#DEFINE FFEEXPR_operatorassociativityOR_
#DEFINE FFEEXPR_operatorassociativityXOR_
#DEFINE FFEEXPR_operatorassociativityEQV_
#DEFINE FFEEXPR_operatorassociativityNEQV_
#DEFINE ffeexpr_paren_lhs_let_
#DEFINE ffeexpr_sym_lhs_let_
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF WEIRD_NONFORTRAN_RULES
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
#DEFINE USE_HCONFIG
" proj.h
" malloc.h
#UNDEF MAXNAMELEN
#DEFINE MAXNAMELEN
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
< f/version.h
#IFNDEF MATH_LIBRARY
#DEFINE MATH_LIBRARY
#ENDIF
#IFNDEF FORTRAN_LIBRARY
#DEFINE FORTRAN_LIBRARY
#ENDIF
#DEFINE DEFAULT_SWITCH_TAKES_ARG
#IFNDEF SWITCH_TAKES_ARG
#DEFINE SWITCH_TAKES_ARG
#ENDIF
#DEFINE DEFAULT_WORD_SWITCH_TAKES_ARG
#IFNDEF WORD_SWITCH_TAKES_ARG
#DEFINE WORD_SWITCH_TAKES_ARG
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF ALT_LIBM
#ENDIF
__E__O__F__
" proj.h
" global.h
" info.h
" lex.h
" malloc.h
" name.h
" symbol.h
" top.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_globalHOOK
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IFDEF FFECOM_globalHOOK
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" implic.h
" info.h
" src.h
" symbol.h
" target.h
__E__O__F__
" proj.h
" info.h
" target.h
" type.h
#DEFINE FFEINFO_BASICTYPE
" info-b.def
#UNDEF FFEINFO_BASICTYPE
#DEFINE FFEINFO_KIND
" info-k.def
#UNDEF FFEINFO_KIND
#DEFINE FFEINFO_KIND
" info-k.def
#UNDEF FFEINFO_KIND
#DEFINE FFEINFO_WHERE
" info-w.def
#UNDEF FFEINFO_WHERE
#DEFINE same
#DEFINE use2
#UNDEF same
#UNDEF use2
#IFNDEF __GNUC__
#ENDIF
__E__O__F__
" hconfig.j
" system.j
" assert.j
#IF
< stddef.h
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE ARRAY_SIZE
#DEFINE FFEINTRIN_DOC
" intrin.h
#IF
#ENDIF
#IF
#ENDIF
#DEFINE DEFNAME
#DEFINE DEFGEN
#DEFINE DEFSPEC
#DEFINE DEFIMP
#DEFINE DEFIMPY
" intrin.def
#UNDEF DEFNAME
#UNDEF DEFGEN
#UNDEF DEFSPEC
#UNDEF DEFIMP
#UNDEF DEFIMPY
#DEFINE DEFNAME
#DEFINE DEFGEN
#DEFINE DEFSPEC
#DEFINE DEFIMP
#DEFINE DEFIMPY
" intrin.def
#UNDEF DEFNAME
#UNDEF DEFGEN
#UNDEF DEFSPEC
#UNDEF DEFIMP
#UNDEF DEFIMPY
#DEFINE DEFNAME
#DEFINE DEFGEN
#DEFINE DEFSPEC
#IF
#DEFINE DEFIMP
#DEFINE DEFIMPY
#ELIF
#DEFINE DEFIMP
#DEFINE DEFIMPY
#ELSE
#ERROR error
#ENDIF
" intrin.def
#UNDEF DEFNAME
#UNDEF DEFGEN
#UNDEF DEFSPEC
#UNDEF DEFIMP
#UNDEF DEFIMPY
#DEFINE DEFNAME
#DEFINE DEFGEN
#DEFINE DEFSPEC
#DEFINE DEFIMP
#DEFINE DEFIMPY
" intrin.def
#UNDEF DEFGEN
#UNDEF DEFSPEC
#UNDEF DEFIMP
#UNDEF DEFIMPY
#DEFINE DEFDOC
" intdoc.h0
#UNDEF DEFDOC
#DEFINE DEFDOC
" intdoc.h0
#UNDEF DEFDOC
#DEFINE INDENT_SUMMARY
#IF
#ENDIF
__E__O__F__
" proj.h
" intrin.h
" expr.h
" info.h
" src.h
" symbol.h
" target.h
" top.h
#IF
#ENDIF
#DEFINE DEFNAME
#DEFINE DEFGEN
#DEFINE DEFSPEC
#DEFINE DEFIMP
#DEFINE DEFIMPY
" intrin.def
#UNDEF DEFNAME
#UNDEF DEFGEN
#UNDEF DEFSPEC
#UNDEF DEFIMP
#UNDEF DEFIMPY
#DEFINE DEFNAME
#DEFINE DEFGEN
#DEFINE DEFSPEC
#DEFINE DEFIMP
#DEFINE DEFIMPY
" intrin.def
#UNDEF DEFNAME
#UNDEF DEFGEN
#UNDEF DEFSPEC
#UNDEF DEFIMP
#UNDEF DEFIMPY
#DEFINE DEFNAME
#DEFINE DEFGEN
#DEFINE DEFSPEC
#IF
#DEFINE DEFIMP
#DEFINE DEFIMPY
#ELIF
#DEFINE DEFIMP
#DEFINE DEFIMPY
#ELSE
#ERROR error
#ENDIF
" intrin.def
#UNDEF DEFNAME
#UNDEF DEFGEN
#UNDEF DEFSPEC
#UNDEF DEFIMP
#UNDEF DEFIMPY
#DEFINE DEFNAME
#DEFINE DEFGEN
#DEFINE DEFSPEC
#DEFINE DEFIMP
#DEFINE DEFIMPY
" intrin.def
#UNDEF DEFGEN
#UNDEF DEFSPEC
#UNDEF DEFIMP
#UNDEF DEFIMPY
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" lab.h
" malloc.h
#IFDEF FFECOM_labelHOOK
#ENDIF
__E__O__F__
" proj.h
" top.h
" bad.h
" com.h
" lex.h
" malloc.h
" src.h
#IF
" flags.j
" input.j
" toplev.j
" tree.j
" output.j
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#DEFINE FFELEX_columnINITIAL_SIZE_
#DEFINE FFELEX_FREE_MAX_COLUMNS_
#DEFINE FFELEX_columnTOKEN_SIZE_
#IF
#ERROR error
#ENDIF
#IFDEF MAP_CHARACTER
#ENDIF
#DEFINE wide_flag
#DEFINE warn_traditional
#DEFINE flag_traditional
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#ENDIF
#IF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#IFDEF HANDLE_PRAGMA
#ENDIF
#IFDEF HANDLE_GENERIC_PRAGMAS
#ENDIF
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF ASM_OUTPUT_IDENT
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF REDUCE_CARD_SIZE_AFTER_BIGGY
#ERROR error
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF REDUCE_CARD_SIZE_AFTER_BIGGY
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" malloc.h
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE malloc_kill_
#ELSE
#DEFINE malloc_kill_
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" bad.h
" name.h
" lex.h
" malloc.h
" src.h
" where.h
__E__O__F__
" proj.h
" top.h
" com.h
" where.h
" version.h
#IF
" flags.j
#ENDIF
#DEFINE NAME_OF_STDIN
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
__E__O__F__
" proj.h
" glimits.j
#IFNDEF HAVE_STRTOUL
#ENDIF
#IFNDEF HAVE_BSEARCH
#ENDIF
__E__O__F__
" proj.h
" src.h
" top.h
#DEFINE FFESRC_INVALID_SYMBOL_CHAR_
__E__O__F__
" proj.h
" st.h
" bad.h
" lex.h
" sta.h
" stb.h
" stc.h
" std.h
" ste.h
" stp.h
" str.h
" sts.h
" stt.h
" stu.h
" stv.h
" stw.h
__E__O__F__
" proj.h
" sta.h
" bad.h
" implic.h
" lex.h
" malloc.h
" stb.h
" stc.h
" std.h
" str.h
" storag.h
" symbol.h
#DEFINE FFESTA_ABORT_ON_CONFIRM_
#DEFINE FFESTA_maxPOSSIBLES_
#IF
#ENDIF
#IF
#ENDIF
#DEFINE ffesta_add_possible_exec_
#DEFINE ffesta_add_possible_nonexec_
#DEFINE ffesta_add_possible_unnamed_exec_
#DEFINE ffesta_add_possible_unnamed_nonexec_
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" stb.h
" bad.h
" expr.h
" lex.h
" malloc.h
" src.h
" sta.h
" stc.h
" stp.h
" str.h
#DEFINE FFESTB_KILL_EASY_
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE ffestb_subr_kill_accept_
#DEFINE ffestb_subr_kill_beru_
#DEFINE ffestb_subr_kill_close_
#DEFINE ffestb_subr_kill_delete_
#DEFINE ffestb_subr_kill_find_
#DEFINE ffestb_subr_kill_inquire_
#DEFINE ffestb_subr_kill_open_
#DEFINE ffestb_subr_kill_print_
#DEFINE ffestb_subr_kill_read_
#DEFINE ffestb_subr_kill_rewrite_
#DEFINE ffestb_subr_kill_type_
#DEFINE ffestb_subr_kill_vxtcode_
#DEFINE ffestb_subr_kill_write_
#ENDIF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#ENDIF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IF
#ENDIF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#IFDEF FFECOM_dimensionsMAX
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" stc.h
" bad.h
" bld.h
" data.h
" expr.h
" global.h
" implic.h
" lex.h
" malloc.h
" src.h
" sta.h
" std.h
" stp.h
" str.h
" stt.h
" stw.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE ffestc_check_simple_
#DEFINE ffestc_check_start_
#DEFINE ffestc_check_attrib_
#DEFINE ffestc_check_item_
#DEFINE ffestc_check_item_startvals_
#DEFINE ffestc_check_item_value_
#DEFINE ffestc_check_item_endvals_
#DEFINE ffestc_check_finish_
#DEFINE ffestc_order_action_
#IF
#DEFINE ffestc_order_interfacespec_
#ENDIF
#DEFINE ffestc_shriek_if_lost_
#IF
#DEFINE ffestc_shriek_where_lost_
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" std.h
" bld.h
" com.h
" lab.h
" lex.h
" malloc.h
" sta.h
" ste.h
" stp.h
" str.h
" sts.h
" stt.h
" stv.h
" stw.h
" symbol.h
" target.h
#DEFINE FFESTD_COPY_EASY_
#DEFINE FFESTD_IS_END_OPTIMIZED_
#IF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE ffestd_subr_line_now_
#DEFINE ffestd_subr_line_restore_
#DEFINE ffestd_subr_line_save_
#ELSE
#DEFINE ffestd_subr_line_now_
#IF
#DEFINE ffestd_subr_line_restore_
#DEFINE ffestd_subr_line_save_
#ENDIF
#ENDIF
#DEFINE ffestd_check_simple_
#DEFINE ffestd_check_start_
#DEFINE ffestd_check_attrib_
#DEFINE ffestd_check_item_
#DEFINE ffestd_check_item_startvals_
#DEFINE ffestd_check_item_value_
#DEFINE ffestd_check_item_endvals_
#DEFINE ffestd_check_finish_
#IF
#DEFINE ffestd_subr_copy_accept_
#DEFINE ffestd_subr_copy_beru_
#DEFINE ffestd_subr_copy_close_
#DEFINE ffestd_subr_copy_delete_
#DEFINE ffestd_subr_copy_find_
#DEFINE ffestd_subr_copy_inquire_
#DEFINE ffestd_subr_copy_open_
#DEFINE ffestd_subr_copy_print_
#DEFINE ffestd_subr_copy_read_
#DEFINE ffestd_subr_copy_rewrite_
#DEFINE ffestd_subr_copy_type_
#DEFINE ffestd_subr_copy_vxtcode_
#DEFINE ffestd_subr_copy_write_
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#DEFINE specified
#UNDEF specified
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#DEFINE specified
#UNDEF specified
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#DEFINE specified
#UNDEF specified
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#DEFINE specified
#UNDEF specified
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#IFDEF FFESTD_F90
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IFDEF FFESTD_F90
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IFDEF FFESTD_F90
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ELIF
#IF
#ELSE
#ENDIF
#ELSE
#ERROR error
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" proj.h
#IF
" rtl.j
" toplev.j
#ENDIF
" ste.h
" bld.h
" com.h
" expr.h
" lab.h
" lex.h
" sta.h
" stp.h
" str.h
" sts.h
" stt.h
" stv.h
" stw.h
" symbol.h
#IF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#DEFINE ffeste_emit_line_note_
#ENDIF
#DEFINE ffeste_check_simple_
#DEFINE ffeste_check_start_
#DEFINE ffeste_check_attrib_
#DEFINE ffeste_check_item_
#DEFINE ffeste_check_item_startvals_
#DEFINE ffeste_check_item_value_
#DEFINE ffeste_check_item_endvals_
#DEFINE ffeste_check_finish_
#DEFINE ffeste_f2c_init_charnolen_
#DEFINE ffeste_f2c_init_char_
#DEFINE ffeste_f2c_init_flag_
#DEFINE ffeste_f2c_init_format_
#DEFINE ffeste_f2c_init_int_
#DEFINE ffeste_f2c_init_ptrtoint_
#DEFINE ffeste_f2c_init_next_
#DEFINE ffeste_f2c_prepare_charnolen_
#DEFINE ffeste_f2c_prepare_char_
#DEFINE ffeste_f2c_prepare_format_
#DEFINE ffeste_f2c_prepare_int_
#DEFINE ffeste_f2c_prepare_ptrtoint_
#DEFINE ffeste_f2c_compile_
#DEFINE ffeste_f2c_compile_charnolen_
#DEFINE ffeste_f2c_compile_char_
#DEFINE ffeste_f2c_compile_format_
#DEFINE ffeste_f2c_compile_int_
#DEFINE ffeste_f2c_compile_ptrtoint_
#IFDEF ENABLE_CHECKING
#ELSE
#DEFINE ffeste_start_block_
#DEFINE ffeste_end_block_
#DEFINE ffeste_start_stmt_
#DEFINE ffeste_end_stmt_
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE specified
#UNDEF specified
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#IF
#ENDIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#DEFINE specified
#UNDEF specified
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#DEFINE specified
#UNDEF specified
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE specified
#UNDEF specified
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#DEFINE specified
#UNDEF specified
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#DEFINE specified
#UNDEF specified
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#IF
#ELIF
#ELSE
#ERROR error
#ENDIF
#ENDIF
#IFDEF ENABLE_CHECKING
#ENDIF
__E__O__F__
" proj.h
" storag.h
" data.h
" malloc.h
" symbol.h
" target.h
#DEFINE ffestorag_next_
#DEFINE ffestorag_previous_
#IF
#ENDIF
#IFDEF FFECOM_storageHOOK
#ENDIF
__E__O__F__
" proj.h
" stp.h
__E__O__F__
" proj.h
" src.h
" str.h
" lex.h
#IFNDEF MAKING_DEPENDENCIES
" str-1t.j
#ENDIF
#IFNDEF MAKING_DEPENDENCIES
" str-fo.j
#ENDIF
#IFNDEF MAKING_DEPENDENCIES
" str-io.j
#ENDIF
#IFNDEF MAKING_DEPENDENCIES
" str-nq.j
#ENDIF
#IFNDEF MAKING_DEPENDENCIES
" str-op.j
#ENDIF
#IFNDEF MAKING_DEPENDENCIES
" str-ot.j
#ENDIF
#IFNDEF MAKING_DEPENDENCIES
" str-2t.j
#ENDIF
__E__O__F__
" proj.h
" sts.h
" com.h
" malloc.h
__E__O__F__
" proj.h
" stt.h
" bld.h
" expr.h
" info.h
" lex.h
" malloc.h
" sta.h
" stp.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" bld.h
" com.h
" equiv.h
" global.h
" info.h
" implic.h
" intrin.h
" stu.h
" storag.h
" sta.h
" symbol.h
" target.h
#DEFINE ffestu_equiv_
__E__O__F__
" proj.h
" stv.h
" lab.h
" where.h
__E__O__F__
" proj.h
" stw.h
" bld.h
" com.h
" info.h
" lab.h
" lex.h
" malloc.h
" sta.h
" stv.h
" symbol.h
" where.h
__E__O__F__
" proj.h
" symbol.h
" bad.h
" bld.h
" com.h
" equiv.h
" global.h
" info.h
" intrin.h
" lex.h
" malloc.h
" src.h
" st.h
" storag.h
" target.h
" where.h
#DEFINE FFESYMBOL_globalPROGUNIT_
#DEFINE FFESYMBOL_globalFILE_
#IF
#DEFINE FFESYMBOL_globalCURRENT_
#ELIF
#DEFINE FFESYMBOL_globalCURRENT_
#ELSE
#ERROR error
#ENDIF
#IF
#DEFINE FFESYMBOL_SPACE_POOL_
#ELIF
#DEFINE FFESYMBOL_SPACE_POOL_
#ELSE
#ERROR error
#ENDIF
#DEFINE DEFATTR
" symbol.def
#UNDEF DEFATTR
#IF
#ENDIF
#IFDEF FFECOM_symbolHOOK
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" proj.h
" glimits.j
" target.h
" bad.h
" info.h
" lex.h
" malloc.h
#IFDEF REAL_VALUE_ATOF
#DEFINE FFETARGET_ATOF_
#ELSE
#DEFINE FFETARGET_ATOF_
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF ffetarget_offset_overflow
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
type_specifier overflow: 108
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
type_specifier overflow: 108
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE dotok
#DEFINE dotoktxt
#UNDEF dotok
#UNDEF dotoktxt
#DEFINE dotoktxt
#UNDEF dotoktxt
#ENDIF
#IF
#DEFINE dotok
#DEFINE dotoktxt
#UNDEF dotok
#UNDEF dotoktxt
#DEFINE dotoktxt
#DEFINE dotoktxtexp
#UNDEF dotoktxt
#ENDIF
__E__O__F__
" proj.h
" top.h
" bad.h
" bit.h
" bld.h
" com.h
" data.h
" equiv.h
" expr.h
" global.h
" implic.h
" info.h
" intrin.h
" lab.h
" lex.h
" malloc.h
" name.h
" src.h
" st.h
" storag.h
" symbol.h
" target.h
" where.h
#IF
" flags.j
" toplev.j
#ENDIF
__E__O__F__
" proj.h
" type.h
" malloc.h
__E__O__F__
__E__O__F__
" proj.h
" where.h
" lex.h
" malloc.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
#IFDEF MULTIBYTE_CHARS
" config.h
" system.h
" mbchar.h
< locale.h
#IFDEF CROSS_COMPILE
#ELSE
#ENDIF
#IFDEF CROSS_COMPILE
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
#IFDEF index
#UNDEF index
#UNDEF rindex
#ENDIF
#IFNDEF CROSS_COMPILE
< a.out.h
#ELSE
" mips/a.out.h
#ENDIF
#IFNDEF MIPS_IS_STAB
#DEFINE CODE_MASK
#DEFINE MIPS_IS_STAB
#DEFINE MIPS_MARK_STAB
#DEFINE MIPS_UNMARK_STAB
#ENDIF
#DEFINE __proto
#DEFINE uchar
#DEFINE ushort
#DEFINE uint
#DEFINE ulong
#DEFINE size_t
#DEFINE ptrdiff_t
#IFNDEF stStaParam
#DEFINE stStaParam
#ENDIF
#IFNDEF btVoid
#DEFINE btVoid
#ENDIF
#IFDEF stStruct
#ENDIF
#IFNDEF __alpha
#IFDEF NEED_DECLARATION_MALLOC
#ENDIF
#IFDEF NEED_DECLARATION_CALLOC
#ENDIF
#IFDEF NEED_DECLARATION_REALLOC
#ENDIF
#ENDIF
#DEFINE __define_stab
" stab.def
#UNDEF __define_stab
#IFDEF stStruct
#ENDIF
#IFDEF stStruct
#ENDIF
__E__O__F__
" config.h
" system.h
#IFNDEF __SABER__
#DEFINE saber_stop
#ENDIF
#IFNDEF __LINE__
#DEFINE __LINE__
#ENDIF
#DEFINE __proto
#IF
#DEFINE Size_t
#ELSE
#DEFINE Size_t
#ENDIF
#DEFINE Ptrdiff_t
#IFNDEF MIPS_DEBUGGING_INFO
#ELSE
#UNDEF rindex
#UNDEF index
< signal.h
#IFNDEF CROSS_COMPILE
< a.out.h
#ELSE
" mips/a.out.h
#ENDIF
#IF
" gstab.h
#ELSE
< stab.h
#ENDIF
" machmode.h
#IFDEF __GNU_STAB__
#DEFINE STAB_CODE_TYPE
#ELSE
#DEFINE STAB_CODE_TYPE
#ENDIF
#IFNDEF MALLOC_CHECK
#IFDEF __SABER__
#DEFINE MALLOC_CHECK
#ENDIF
#ENDIF
#DEFINE IS_ASM_IDENT
#IFDEF btVoid
#ELSE
#DEFINE bt_Void
#ENDIF
#DEFINE N_BTMASK
#DEFINE N_TMASK
#DEFINE N_BT_SHIFT
#DEFINE N_TQ_SHIFT
#DEFINE N_TQ
#DEFINE WORD_ALIGN
#DEFINE DWORD_ALIGN
#IFNDEF PAGE_SIZE
#DEFINE PAGE_SIZE
#ENDIF
#DEFINE PAGE_USIZE
#IFNDEF MAX_CLUSTER_PAGES
#IFNDEF USE_MALLOC
#DEFINE MAX_CLUSTER_PAGES
#ELSE
#DEFINE MAX_CLUSTER_PAGES
#ENDIF
#ENDIF
#IFNDEF MALLOC_CHECK
#DEFINE OBJECTS_PER_PAGE
#ELSE
#DEFINE OBJECTS_PER_PAGE
#ENDIF
#DEFINE INIT_VARRAY
#IFNDEF SHASH_SIZE
#DEFINE SHASH_SIZE
#ENDIF
#DEFINE HASH_LEN_MAX
#IFNDEF THASH_SIZE
#DEFINE THASH_SIZE
#ENDIF
#IFDEF HOST_WORDS_BIG_ENDIAN
#ELSE
#ENDIF
#DEFINE CHECK
#DEFINE ORIG_LINENUM
#DEFINE ORIG_DENSE
#DEFINE ORIG_PROCS
#DEFINE ORIG_FILES
#DEFINE ORIG_LSYMS
#DEFINE ORIG_LSTRS
#DEFINE ORIG_ESYMS
#DEFINE ORIG_ESTRS
#DEFINE ORIG_OPT
#DEFINE ORIG_AUX
#DEFINE ORIG_RFDS
#IFNDEF STABS_SYMBOL
#DEFINE STABS_SYMBOL
#ENDIF
#IFNDEF STATIC
#DEFINE STATIC
#ENDIF
#IFNDEF MALLOC_CHECK
#ENDIF
#IFDEF MALLOC_CHECK
#ENDIF
#DEFINE HASHBITS
#IFNDEF ALIGN_SYMTABLE_OFFSET
#DEFINE ALIGN_SYMTABLE_OFFSET
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF TARGET_VERSION
#ENDIF
#IFDEF HAVE_STRSIGNAL
#ELSE
#IFDEF NO_SYS_SIGLIST
#ELSE
#ENDIF
#ENDIF
#IFNDEF MALLOC_CHECK
#IFDEF USE_MALLOC
#ELSE
#ENDIF
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#IFNDEF MALLOC_CHECK
#ELSE
#ENDIF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
" toplev.h
" insn-config.h
" rtl.h
" tree.h
" flags.h
" insn-flags.h
" insn-codes.h
" expr.h
" recog.h
" reload.h
#IFDEF HAVE_conditional_move
#ENDIF
#IFDEF HAVE_conditional_trap
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cmpstrqi
#ENDIF
#IFDEF HAVE_cmpstrhi
#ENDIF
#IFDEF HAVE_cmpstrsi
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_conditional_move
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF FIXUNS_TRUNC_LIKE_FIX_TRUNC
#ENDIF
#IFDEF HAVE_conditional_move
#ENDIF
#IFDEF HAVE_SECONDARY_RELOADS
#ENDIF
#IFDEF FIXUNS_TRUNC_LIKE_FIX_TRUNC
#ENDIF
#IFDEF EXTRA_CC_MODES
#ENDIF
#IFDEF MULSI3_LIBCALL
#ENDIF
#IFDEF MULDI3_LIBCALL
#ENDIF
#IFDEF DIVSI3_LIBCALL
#ENDIF
#IFDEF DIVDI3_LIBCALL
#ENDIF
#IFDEF UDIVSI3_LIBCALL
#ENDIF
#IFDEF UDIVDI3_LIBCALL
#ENDIF
#IFDEF MODSI3_LIBCALL
#ENDIF
#IFDEF MODDI3_LIBCALL
#ENDIF
#IFDEF UMODSI3_LIBCALL
#ENDIF
#IFDEF UMODDI3_LIBCALL
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF DONT_USE_BUILTIN_SETJMP
#ELSE
#ENDIF
#IFDEF HAVE_conditional_trap
#ENDIF
#IFDEF INIT_TARGET_OPTABS
#ENDIF
#IFDEF BROKEN_LDEXP
#ENDIF
#IFDEF HAVE_conditional_trap
#ENDIF
#IFDEF HAVE_conditional_trap
#ENDIF
__E__O__F__
" config.h
" system.h
#IFDEF _WIN32
< windows.h
#ENDIF
" prefix.h
#IFDEF _WIN32
#ENDIF
#IFNDEF DIR_SEPARATOR
#DEFINE IS_DIR_SEPARATOR
#ELSE
#IFNDEF DIR_SEPARATOR_2
#DEFINE IS_DIR_SEPARATOR
#ELSE
#DEFINE IS_DIR_SEPARATOR
#ENDIF
#ENDIF
#IFDEF _WIN32
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF _WIN32
#ENDIF
#IFDEF DIR_SEPARATOR_2
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" real.h
" flags.h
" basic-block.h
#IFNDEF DEBUG_PRINT_REG
#DEFINE DEBUG_PRINT_REG
#ENDIF
#IFDEF DEBUG_REGISTER_NAMES
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
#DEFINE HASH_SIZE
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" flags.h
" insn-flags.h
" insn-config.h
" output.h
" regs.h
" tree.h
" output.h
" gcov-io.h
" toplev.h
#DEFINE ARC_TARGET
#DEFINE ARC_SOURCE
#DEFINE ARC_COUNT
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
__E__O__F__
#IF
#DEFINE __STDC__
#ENDIF
#IF
#DEFINE VOLATILE
#ELSE
#DEFINE VOLATILE
#ENDIF
#IFNDEF __STDC__
#DEFINE const
#DEFINE volatile
#ENDIF
" config.h
#IF
#IF
#DEFINE POSIX
#ENDIF
#ENDIF
#IFDEF POSIX
#UNDEF _POSIX_SOURCE
#DEFINE _POSIX_SOURCE
#ENDIF
" system.h
" intl.h
#UNDEF abort
#IF
#IF
< dirent.h
#ELSE
< sys/dir.h
#ENDIF
#ENDIF
< setjmp.h
#IFNDEF strrchr
#IFNDEF HAVE_STRRCHR
#IFDEF HAVE_RINDEX
#DEFINE strrchr
#ENDIF
#ENDIF
#ENDIF
#DEFINE getopt
" getopt.h
#UNDEF getopt
#DEFINE my_access
#DEFINE my_stat
#IFDEF __MINGW32__
#DEFINE my_link
#ELSE
#DEFINE my_link
#ENDIF
#DEFINE my_unlink
#DEFINE my_open
#DEFINE my_chmod
#IF
< signal.h
#ELSE
#IF
#ENDIF
#IFNDEF fputs
#ENDIF
#IFNDEF fputc
#ENDIF
#IF
#ENDIF
#ENDIF
#DEFINE NONCONST
#IFNDEF STD_PROTO_DIR
#DEFINE STD_PROTO_DIR
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#DEFINE HASH_TABLE_SIZE
#IFNDEF STANDARD_INCLUDE_DIR
#DEFINE STANDARD_INCLUDE_DIR
#ENDIF
#IFNDEF LOCAL_INCLUDE_DIR
#DEFINE LOCAL_INCLUDE_DIR
#ENDIF
#IFDEF INCLUDE_DEFAULTS
#ELSE
#IFDEF CROSS_COMPILE
#ELSE
#IFDEF SYSTEM_INCLUDE_DIR
#ENDIF
#ENDIF
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#DEFINE ddip
#DEFINE fip
#IFNDEF UNPROTOIZE
#ELSE
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF HAVE_STRERROR
#ELSE
#ENDIF
#IFDEF EINTR
#ENDIF
#IFDEF EINTR
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IF
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ELSE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IF
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFDEF UNPROTOIZE
#ENDIF
#IF
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#IF
#ENDIF
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF UNPROTOIZE
#ENDIF
#IF
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IFDEF HAVE_LC_MESSAGES
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF UNPROTOIZE
#ELSE
#ENDIF
#IFNDEF UNPROTOIZE
#ENDIF
__E__O__F__
__E__O__F__
__E__O__F__
__E__O__F__
__E__O__F__
< stdio.h
__E__O__F__
< stdio.h
#DEFINE N
#DEFINE Q
#DEFINE B
__E__O__F__
" config.h
" system.h
" tree.h
" toplev.h
#IFDEF REAL_ARITHMETIC
#IF
#DEFINE DEC
#ELSE
#IF
#DEFINE IBM
#ELSE
#IF
#DEFINE C4X
#ELSE
#IF
#DEFINE IEEE
#ELSE
#DEFINE UNK
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#DEFINE REAL_WORDS_BIG_ENDIAN
#ELSE
#IF
#DEFINE DEC
#ELSE
#IF
#DEFINE IBM
#ELSE
#IF
#DEFINE IEEE
#ELSE
#DEFINE UNK
#ENDIF
#ENDIF
#ENDIF
#DEFINE REAL_WORDS_BIG_ENDIAN
#ENDIF
#IF
#DEFINE INFINITY
#DEFINE NANS
#ENDIF
#IFDEF NANS
#IFNDEF INFINITY
#DEFINE INFINITY
#ENDIF
#ENDIF
#IF
#DEFINE EMUSHORT
#DEFINE EMUSHORT_SIZE
#DEFINE EMULONG_SIZE
#ELSE
#IF
#DEFINE EMUSHORT
#DEFINE EMUSHORT_SIZE
#DEFINE EMULONG_SIZE
#ELSE
#IF
#DEFINE EMUSHORT
#DEFINE EMUSHORT_SIZE
#DEFINE EMULONG_SIZE
#ELSE
#IF
#DEFINE EMUSHORT
#DEFINE EMUSHORT_SIZE
#DEFINE EMULONG_SIZE
#ELSE
#DEFINE EMU_NON_COMPILE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IF
#DEFINE EMULONG
#ELSE
#IF
#DEFINE EMULONG
#ELSE
#IF
#DEFINE EMULONG
#ELSE
#IF
#DEFINE EMULONG
#ELSE
#DEFINE EMU_NON_COMPILE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IF
#DEFINE EMU_NON_COMPILE
#ENDIF
#IFNDEF EMU_NON_COMPILE
#IF
#DEFINE NE
#DEFINE MAXDECEXP
#DEFINE MINDECEXP
#DEFINE GET_REAL
#DEFINE PUT_REAL
#ELSE
#IF
#DEFINE NE
#DEFINE MAXDECEXP
#DEFINE MINDECEXP
#DEFINE GET_REAL
#DEFINE PUT_REAL
#ELSE
#DEFINE NE
#DEFINE MAXDECEXP
#DEFINE MINDECEXP
#IFDEF REAL_ARITHMETIC
#DEFINE GET_REAL
#DEFINE PUT_REAL
#ELSE
#DEFINE GET_REAL
#DEFINE PUT_REAL
#ENDIF
#ENDIF
#ENDIF
#DEFINE NI
#DEFINE E
#DEFINE M
#DEFINE NBITS
#DEFINE NDEC
#DEFINE EXONE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF C4X
#ENDIF
#IF
#ENDIF
#IFDEF NANS
#ENDIF
#IFNDEF REAL_INFINITY
#IFDEF NANS
#ELSE
#ENDIF
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF C4X
#ELSE
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF REAL_ARITHMETIC
#IFDEF INFINITY
#ELSE
#ENDIF
#IFDEF NANS
#ELSE
#ENDIF
#IFDEF NANS
#ENDIF
#IFNDEF C4X
#ENDIF
#IFDEF C4X
#ENDIF
#IFDEF CHECK_FLOAT_VALUE
#ENDIF
#ENDIF
#DEFINE DOMAIN
#DEFINE SING
#DEFINE OVERFLOW
#DEFINE UNDERFLOW
#DEFINE TLOSS
#DEFINE PLOSS
#DEFINE INVALID
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF INFINITY
#ELSE
#ENDIF
#IFDEF INFINITY
#IFDEF NANS
#ENDIF
#ENDIF
#IFDEF INFINITY
#IFDEF NANS
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF NANS
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF INFINITY
#ENDIF
#IFNDEF INFINITY
#ELSE
#ENDIF
#IFNDEF C4X
#ENDIF
#IFNDEF INFINITY
#ENDIF
#IFDEF INFINITY
#ELSE
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF INFINITY
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF INFINITY
#ENDIF
#IFNDEF IEEE
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF INFINITY
#ENDIF
#IFNDEF IEEE
#ENDIF
#IFDEF DEC
#ELSE
#IFDEF IBM
#ELSE
#IFDEF C4X
#ELSE
#IFDEF INFINITY
#IFDEF NANS
#ENDIF
#ENDIF
#IFDEF IEEE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF IEEE
#IFDEF ARM_EXTENDED_IEEE_FORMAT
#ELSE
#ENDIF
#ENDIF
#IFDEF INFINITY
#IFDEF NANS
#IFDEF ARM_EXTENDED_IEEE_FORMAT
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF IEEE
#ENDIF
#IFDEF INFINITY
#IFDEF NANS
#ENDIF
#ENDIF
#IFDEF IEEE
#ENDIF
#IFDEF IBM
#ELSE
#IFDEF C4X
#ELSE
#IFDEF IEEE
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF INFINITY
#IFDEF NANS
#ENDIF
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF IEEE
#ENDIF
#ENDIF
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF INFINITY
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF INFINITY
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF IEEE
#IF
#ENDIF
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF IEEE
#IFDEF ARM_EXTENDED_IEEE_FORMAT
#ELSE
#ENDIF
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF IEEE
#IFDEF INFINITY
#ENDIF
#ENDIF
#IFDEF DEC
#ELSE
#IFDEF IBM
#ELSE
#IFDEF C4X
#ELSE
#IFDEF NANS
#ENDIF
#IFDEF INFINITY
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF IEEE
#ENDIF
#IFDEF INFINITY
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF IBM
#ELSE
#IFDEF C4X
#ELSE
#IFDEF NANS
#ENDIF
#IFDEF INFINITY
#ENDIF
#IFDEF NANS
#ENDIF
#IFDEF IEEE
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF INFINITY
#IFDEF DEC
#ENDIF
#IFDEF IEEE
#ENDIF
#ELSE
#IFDEF DEC
#ENDIF
#IFDEF IEEE
#ENDIF
#IFDEF ERANGE
#ENDIF
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF IEEE
#ENDIF
#ENDIF
#ENDIF
#IFDEF NANS
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF FIXUNS_TRUNC_LIKE_FIX_TRUNC
#ELSE
#ENDIF
#DEFINE NTEN
#DEFINE MAXP
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF NANS
#ENDIF
#IFNDEF C4X
#ENDIF
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#IFDEF NANS
#ELSE
#ENDIF
#IFDEF C4X
#ELSE
#IFDEF IBM
#ELSE
#ENDIF
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF DEC
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF C4X
#ENDIF
#IF
#ENDIF
#IF
#IFDEF NANS
#ENDIF
#ENDIF
#IFDEF DEC
#IFDEF ERANGE
#ENDIF
#ENDIF
#IFDEF IBM
#IFDEF ERANGE
#ENDIF
#ENDIF
#IFDEF C4X
#IFDEF ERANGE
#ENDIF
#ENDIF
#IFDEF TFMODE_NAN
#ELSE
#IFDEF IEEE
#ENDIF
#ENDIF
#IFDEF XFMODE_NAN
#ELSE
#IFDEF IEEE
#ENDIF
#ENDIF
#IFDEF DFMODE_NAN
#ELSE
#IFDEF IEEE
#ENDIF
#ENDIF
#IFDEF SFMODE_NAN
#ELSE
#IFDEF IEEE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IFDEF INFINITY
#ENDIF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#IF
#ELSE
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" insn-config.h
" insn-attr.h
" insn-flags.h
" insn-codes.h
" recog.h
" regs.h
" hard-reg-set.h
" flags.h
" real.h
" toplev.h
" basic-block.h
#IFNDEF STACK_PUSH_CODE
#IFDEF STACK_GROWS_DOWNWARD
#DEFINE STACK_PUSH_CODE
#ELSE
#DEFINE STACK_PUSH_CODE
#ENDIF
#ENDIF
#IFNDEF STACK_POP_CODE
#IFDEF STACK_GROWS_DOWNWARD
#DEFINE STACK_POP_CODE
#ELSE
#DEFINE STACK_POP_CODE
#ENDIF
#ENDIF
#IFNDEF REGISTER_CONSTRAINTS
#ENDIF
#IFDEF HAVE_extzv
#ENDIF
#IFDEF HAVE_extv
#ENDIF
#IFDEF HAVE_cc0
#IF
#ENDIF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#IF
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFNDEF REAL_ARITHMETIC
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#IFNDEF REGISTER_CONSTRAINTS
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ELSE
#ENDIF
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#IFNDEF REAL_ARITHMETIC
#ENDIF
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" insn-config.h
" regs.h
" hard-reg-set.h
" flags.h
" insn-flags.h
" recog.h
" toplev.h
" varray.h
#IFDEF STACK_REGS
#DEFINE REG_STACK_SIZE
#DEFINE FP_MODE_REG
#IFDEF __GNUC__
#ENDIF
#IF
#ENDIF
#IFDEF FUNCTION_OUTGOING_VALUE
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" hard-reg-set.h
" flags.h
" basic-block.h
" regs.h
" insn-config.h
" recog.h
" reload.h
" real.h
" toplev.h
" output.h
#IFNDEF REGISTER_MOVE_COST
#DEFINE REGISTER_MOVE_COST
#ENDIF
#IFDEF AUTO_INC_DEC
#IF
#DEFINE FORBIDDEN_INC_DEC_CLASSES
#ENDIF
#ENDIF
#IFDEF REG_ALLOC_ORDER
#ENDIF
#DEFINE N_REG_INTS
#IFDEF FORBIDDEN_INC_DEC_CLASSES
#ENDIF
#IFDEF HAVE_SECONDARY_RELOADS
#ENDIF
#IFDEF CONDITIONAL_REGISTER_USAGE
#ENDIF
#IFDEF HARD_REG_SET
#ENDIF
#IFDEF HARD_REG_SET
#ENDIF
#IFDEF HAVE_SECONDARY_RELOADS
#ENDIF
#IFDEF HAVE_SECONDARY_RELOADS
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ELSE
#ENDIF
#IFDEF SECONDARY_OUTPUT_RELOAD_CLASS
#ELSE
#ENDIF
#ENDIF
#IFDEF HARD_FRAME_POINTER_REGNUM
#ELSE
#ENDIF
#IFDEF FORBIDDEN_INC_DEC_CLASSES
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#IFDEF FORBIDDEN_INC_DEC_CLASSES
#IFDEF SECONDARY_RELOAD_CLASS
#ELSE
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_OUTPUT_RELOAD_CLASS
#ENDIF
#ENDIF
#ENDIF
#IFDEF FORBIDDEN_INC_DEC_CLASSES
#ENDIF
#IFDEF FORBIDDEN_INC_DEC_CLASSES
#ENDIF
#IFDEF FORBIDDEN_INC_DEC_CLASSES
#ENDIF
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#IFNDEF REAL_ARITHMETIC
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IFDEF HAVE_SECONDARY_RELOADS
#ENDIF
#IFDEF HAVE_SECONDARY_RELOADS
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_OUTPUT_RELOAD_CLASS
#ENDIF
#ENDIF
#IFDEF REG_OK_FOR_BASE_P
#ENDIF
#IFDEF FORBIDDEN_INC_DEC_CLASSES
#ENDIF
#IFDEF FORBIDDEN_INC_DEC_CLASSES
#ENDIF
#ENDIF
#IFDEF HARD_REG_SET
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" insn-config.h
" recog.h
" output.h
" reload.h
" regs.h
" hard-reg-set.h
" flags.h
" expr.h
" insn-flags.h
" basic-block.h
" toplev.h
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFNDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ENDIF
__E__O__F__
#DEFINE REG_OK_STRICT
" config.h
" system.h
" rtl.h
" insn-config.h
" insn-codes.h
" recog.h
" reload.h
" regs.h
" hard-reg-set.h
" flags.h
" real.h
" output.h
" expr.h
" toplev.h
#IFNDEF REGISTER_MOVE_COST
#DEFINE REGISTER_MOVE_COST
#ENDIF
#IFNDEF REGNO_MODE_OK_FOR_BASE_P
#DEFINE REGNO_MODE_OK_FOR_BASE_P
#ENDIF
#IFNDEF REG_MODE_OK_FOR_BASE_P
#DEFINE REG_MODE_OK_FOR_BASE_P
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#DEFINE MATCHES
#DEFINE MERGABLE_RELOADS
#DEFINE MERGE_TO_OTHER
#DEFINE ADDR_TYPE
#IFDEF HAVE_SECONDARY_RELOADS
#ENDIF
#IFDEF HAVE_SECONDARY_RELOADS
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_OUTPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#IFDEF SECONDARY_MEMORY_NEEDED_MODE
#ELSE
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED_RTX
#ELSE
#ENDIF
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IFDEF LOAD_EXTEND_OP
#ENDIF
#IFDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IF
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IFDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IFDEF SECONDARY_OUTPUT_RELOAD_CLASS
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IF
#ENDIF
#IFDEF PREFERRED_OUTPUT_RELOAD_CLASS
#ENDIF
#IFDEF LIMIT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_OUTPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IF
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IFDEF OVERLAPPING_REGNO_P
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#IFDEF HAVE_cc0
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFNDEF WORD_REGISTER_OPERATIONS
#IFDEF LOAD_EXTEND_OP
#ENDIF
#ENDIF
#IFNDEF REAL_ARITHMETIC
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ELSE
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF LOAD_EXTEND_OP
#ENDIF
#IFDEF LEGITIMIZE_RELOAD_ADDRESS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IF
#ENDIF
#IFDEF OVERLAPPING_REGNO_P
#ENDIF
#IFDEF OVERLAPPING_REGNO_P
#ENDIF
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IFDEF INSN_CLOBBERS_REGNO_P
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
__E__O__F__
" config.h
" system.h
" machmode.h
" hard-reg-set.h
" rtl.h
" obstack.h
" insn-config.h
" insn-flags.h
" insn-codes.h
" flags.h
" expr.h
" regs.h
" basic-block.h
" reload.h
" recog.h
" output.h
" real.h
" toplev.h
#IF
#DEFINE PREFERRED_STACK_BOUNDARY
#ENDIF
#IFNDEF REGISTER_MOVE_COST
#DEFINE REGISTER_MOVE_COST
#ENDIF
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFDEF TREE_CODE
#ELSE
#ENDIF
#IFDEF ELIMINABLE_REGS
#ELSE
#ENDIF
#DEFINE NUM_ELIMINABLE_REGS
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IFDEF LEGITIMATE_PIC_OPERAND_P
#ENDIF
#IFNDEF REGISTER_CONSTRAINTS
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF STACK_REGS
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#ENDIF
#IFDEF PUSH_ROUNDING
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF WORD_REGISTER_OPERATIONS
#ENDIF
#IF
#ENDIF
#IFDEF ELIMINABLE_REGS
#ELSE
#ENDIF
#IFDEF ELIMINABLE_REGS
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF ELIMINABLE_REGS
#ENDIF
#IF
#ENDIF
#IFDEF ELIMINABLE_REGS
#ENDIF
#IFDEF EXIT_IGNORE_STACK
#ENDIF
#IFDEF ELIMINABLE_REGS
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF REG_ALLOC_ORDER
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF INSN_CLOBBERS_REGNO_P
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IF
#ENDIF
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IF
#ENDIF
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IFDEF SECONDARY_INPUT_RELOAD_CLASS
#ENDIF
#IF
#ENDIF
#IFDEF SECONDARY_OUTPUT_RELOAD_CLASS
#ENDIF
#IF
#ENDIF
#IFDEF SECONDARY_OUTPUT_RELOAD_CLASS
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF SECONDARY_MEMORY_NEEDED
#ENDIF
#IFDEF HAVE_reload_load_address
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IFDEF AUTO_INC_DEC
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#DEFINE RELOAD_COMBINE_MAX_USES
#DEFINE LABEL_LIVE
#IFDEF AUTO_INC_DEC
#ENDIF
__E__O__F__
" config.h
" system.h
" toplev.h
" rtl.h
" expr.h
" insn-config.h
" conditions.h
" hard-reg-set.h
" basic-block.h
" regs.h
" insn-flags.h
" recog.h
" flags.h
" output.h
" obstack.h
" insn-attr.h
" resource.h
#IFDEF DELAY_SLOTS
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF ANNUL_IFTRUE_SLOTS
#DEFINE eligible_for_annul_true
#ENDIF
#IFNDEF ANNUL_IFFALSE_SLOTS
#DEFINE eligible_for_annul_false
#ENDIF
#DEFINE unfilled_slots_base
#DEFINE unfilled_slots_next
#IFDEF HARD_REG_SET
#ELSE
#ENDIF
#IFDEF HAVE_return
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#DEFINE NUM_REORG_FUNCTIONS
#DEFINE MAX_DELAY_HISTOGRAM
#DEFINE MAX_REORG_PASSES
#IF
#ENDIF
#IFDEF ANNUL_IFFALSE_SLOTS
#ENDIF
#IFDEF ANNUL_IFTRUE_SLOTS
#ENDIF
#IFDEF ANNUL_IFFALSE_SLOTS
#ENDIF
#IFDEF ANNUL_IFTRUE_SLOTS
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF INSN_SETS_ARE_DELAYED
#ENDIF
#IFDEF INSN_REFERENCES_ARE_DELAYED
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF INSN_SETS_ARE_DELAYED
#ENDIF
#IFDEF INSN_REFERENCES_ARE_DELAYED
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF DELAY_SLOTS_FOR_EPILOGUE
#IF
#ENDIF
#IFDEF EXIT_IGNORE_STACK
#ENDIF
#IFDEF EPILOGUE_USES
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF ANNUL_IFTRUE_SLOTS
#ENDIF
#IFDEF ANNUL_IFFALSE_SLOTS
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_return
#IFDEF ANNUL_IFFALSE_SLOTS
#ENDIF
#IFDEF ANNUL_IFTRUE_SLOTS
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_return
#ENDIF
#ENDIF
__E__O__F__
" config.h
" toplev.h
" rtl.h
" hard-reg-set.h
" system.h
" basic-block.h
" regs.h
" flags.h
" output.h
" resource.h
#DEFINE TARGET_HASH_PRIME
#IF
#ENDIF
#IFDEF INSN_REFERENCES_ARE_DELAYED
#ENDIF
#IFDEF INSN_SETS_ARE_DELAYED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF PIC_OFFSET_TABLE_REGNUM
#ENDIF
#IF
#ENDIF
#IFDEF EXIT_IGNORE_STACK
#ENDIF
#IFDEF EPILOGUE_USES
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" real.h
" bitmap.h
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE DEF_RTL_EXPR
" rtl.def
#UNDEF DEF_RTL_EXPR
#DEFINE DEF_MACHMODE
" machmode.def
#IFDEF EXTRA_CC_MODES
#ENDIF
#UNDEF DEF_MACHMODE
#DEFINE DEF_MACHMODE
" machmode.def
#UNDEF DEF_MACHMODE
#DEFINE DEF_MACHMODE
" machmode.def
#UNDEF DEF_MACHMODE
#DEFINE DEF_MACHMODE
" machmode.def
#UNDEF DEF_MACHMODE
#DEFINE DEF_MACHMODE
" machmode.def
#UNDEF DEF_MACHMODE
#DEFINE DEF_MACHMODE
" machmode.def
#DEFINE DEF_RTL_EXPR
" rtl.def
#UNDEF DEF_RTL_EXPR
#DEFINE DEF_RTL_EXPR
" rtl.def
#UNDEF DEF_RTL_EXPR
#IF
#ENDIF
#IF
#ELSE
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF REAL_VALUE_TYPE
#ENDIF
#IFDEF EXTRA_CC_MODES
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" flags.h
" basic-block.h
__E__O__F__
" hconfig.h
" system.h
" cpplib.h
" scan.h
#DEFINE in_extern_C_brace
#IF
#ENDIF
__E__O__F__
" hconfig.h
" system.h
" scan.h
__E__O__F__
" config.h
" system.h
" toplev.h
" rtl.h
" basic-block.h
" regs.h
" hard-reg-set.h
" flags.h
" insn-config.h
" insn-attr.h
" recog.h
#IFNDEF INSN_SCHEDULING
#ELSE
#DEFINE INSN_LUID
#DEFINE INSN_PRIORITY
#DEFINE INSN_COST
#DEFINE INSN_UNIT
#DEFINE INSN_BLOCKAGE
#DEFINE UNIT_BITS
#DEFINE BLOCKAGE_MASK
#DEFINE ENCODE_BLOCKAGE
#DEFINE UNIT_BLOCKED
#DEFINE BLOCKAGE_RANGE
#DEFINE MIN_BLOCKAGE_COST
#DEFINE MAX_BLOCKAGE_COST
#DEFINE DONE_PRIORITY
#DEFINE MAX_PRIORITY
#DEFINE TAIL_PRIORITY
#DEFINE LAUNCH_PRIORITY
#DEFINE DONE_PRIORITY_P
#DEFINE LOW_PRIORITY_P
#DEFINE INSN_REF_COUNT
#DEFINE LINE_NOTE
#DEFINE NEXT_Q
#DEFINE NEXT_Q_AFTER
#DEFINE INSN_TICK
#DEFINE SIZE_FOR_MODE
#IFDEF HAVE_cc0
#ENDIF
#IFNDEF __GNUC__
#DEFINE __inline
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF ADJUST_COST
#ENDIF
#IFDEF ADJUST_COST
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#DEFINE SCHED_SORT
#IFDEF ADJUST_PRIORITY
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE NEED_NOTHING
#DEFINE NEED_HEAD
#DEFINE NEED_TAIL
#IF
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF USE_C_ALLOCA
#ENDIF
#ENDIF
__E__O__F__
" config.h
#IFDEF SDB_DEBUGGING_INFO
" system.h
" tree.h
" rtl.h
" regs.h
" defaults.h
" flags.h
" insn-config.h
" reload.h
" output.h
" toplev.h
#IF
< syms.h
#IFNDEF T_VOID
#DEFINE T_VOID
#ENDIF
#ELSE
" gsyms.h
#ENDIF
#DEFINE PARM_PASSED_IN_MEMORY
#IFNDEF DEBUGGER_AUTO_OFFSET
#DEFINE DEBUGGER_AUTO_OFFSET
#ENDIF
#IFNDEF DEBUGGER_ARG_OFFSET
#DEFINE DEBUGGER_ARG_OFFSET
#ENDIF
" sdbout.h
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF SHORT_TYPE_SIZE
#DEFINE SHORT_TYPE_SIZE
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF LONG_LONG_TYPE_SIZE
#DEFINE LONG_LONG_TYPE_SIZE
#ENDIF
#IFNDEF FLOAT_TYPE_SIZE
#DEFINE FLOAT_TYPE_SIZE
#ENDIF
#IFNDEF DOUBLE_TYPE_SIZE
#DEFINE DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF LONG_DOUBLE_TYPE_SIZE
#DEFINE LONG_DOUBLE_TYPE_SIZE
#ENDIF
#DEFINE CONTIN
#IFNDEF SDB_DELIM
#DEFINE SDB_DELIM
#ENDIF
#IFNDEF SDB_MAX_DIM
#DEFINE SDB_MAX_DIM
#ENDIF
#IFNDEF PUT_SDB_SCL
#DEFINE PUT_SDB_SCL
#ENDIF
#IFNDEF PUT_SDB_INT_VAL
#DEFINE PUT_SDB_INT_VAL
#ENDIF
#IFNDEF PUT_SDB_VAL
#DEFINE PUT_SDB_VAL
#ENDIF
#IFNDEF PUT_SDB_DEF
#DEFINE PUT_SDB_DEF
#ENDIF
#IFNDEF PUT_SDB_PLAIN_DEF
#DEFINE PUT_SDB_PLAIN_DEF
#ENDIF
#IFNDEF PUT_SDB_ENDEF
#DEFINE PUT_SDB_ENDEF
#ENDIF
#IFNDEF PUT_SDB_TYPE
#DEFINE PUT_SDB_TYPE
#ENDIF
#IFNDEF PUT_SDB_SIZE
#DEFINE PUT_SDB_SIZE
#ENDIF
#IFNDEF PUT_SDB_START_DIM
#DEFINE PUT_SDB_START_DIM
#ENDIF
#IFNDEF PUT_SDB_NEXT_DIM
#DEFINE PUT_SDB_NEXT_DIM
#ENDIF
#IFNDEF PUT_SDB_LAST_DIM
#DEFINE PUT_SDB_LAST_DIM
#ENDIF
#IFNDEF PUT_SDB_TAG
#DEFINE PUT_SDB_TAG
#ENDIF
#IFNDEF PUT_SDB_BLOCK_START
#DEFINE PUT_SDB_BLOCK_START
#ENDIF
#IFNDEF PUT_SDB_BLOCK_END
#DEFINE PUT_SDB_BLOCK_END
#ENDIF
#IFNDEF PUT_SDB_FUNCTION_START
#DEFINE PUT_SDB_FUNCTION_START
#ENDIF
#IFNDEF PUT_SDB_FUNCTION_END
#DEFINE PUT_SDB_FUNCTION_END
#ENDIF
#IFNDEF PUT_SDB_EPILOGUE_END
#DEFINE PUT_SDB_EPILOGUE_END
#ENDIF
#IFNDEF SDB_GENERATE_FAKE
#DEFINE SDB_GENERATE_FAKE
#ENDIF
#DEFINE KNOWN_TYPE_TAG
#DEFINE SET_KNOWN_TYPE_TAG
#DEFINE TAG_NAME
#DEFINE MAKE_LINE_SAFE
#IFDEF MIPS_DEBUGGING_INFO
#IFNDEF PUT_SDB_SRC_FILE
#DEFINE PUT_SDB_SRC_FILE
#ENDIF
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFDEF RMS_QUICK_HACK_1
#ENDIF
#IF
#ENDIF
#DEFINE PUSH_DERIVED_LEVEL
#IFDEF SDB_ALLOW_FORWARD_REFERENCES
#ENDIF
#IFDEF EXTENDED_SDB_BASIC_TYPES
#ELSE
#ENDIF
#IFDEF SDB_ALLOW_FORWARD_REFERENCES
#ENDIF
#IFNDEF SDB_ALLOW_UNKNOWN_REFERENCES
#IFDEF SDB_ALLOW_FORWARD_REFERENCES
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF LEAF_REG_REMAP
#ENDIF
#IFDEF SDB_ALLOW_FORWARD_REFERENCES
#ENDIF
#IFDEF SDB_ALLOW_FORWARD_REFERENCES
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_ALLOW_FORWARD_REFERENCES
#ENDIF
#IFNDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_ALLOW_FORWARD_REFERENCES
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#IFDEF MIPS_DEBUGGING_INFO
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" flags.h
" except.h
" function.h
" insn-flags.h
" insn-config.h
" insn-codes.h
" expr.h
" hard-reg-set.h
" obstack.h
" loop.h
" recog.h
" machmode.h
" toplev.h
" output.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#IFNDEF CASE_VECTOR_PC_RELATIVE
#DEFINE CASE_VECTOR_PC_RELATIVE
#ENDIF
#DEFINE ALLOC_NESTING
#DEFINE POPSTACK
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IF
#ENDIF
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#IFDEF PROMOTE_FUNCTION_RETURN
#ENDIF
#IFDEF HAVE_return
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF HAVE_return
#IFDEF HAVE_seq
#ENDIF
#IFDEF HAVE_sne
#ENDIF
#IFDEF HAVE_sgt
#ENDIF
#IFDEF HAVE_sge
#ENDIF
#IFDEF HAVE_slt
#ENDIF
#IFDEF HAVE_sle
#ENDIF
#ENDIF
#IFDEF HAVE_nonlocal_goto
#ENDIF
#IF
#IFDEF ELIMINABLE_REGS
#ENDIF
#ENDIF
#IFDEF HAVE_nonlocal_goto_receiver
#ENDIF
#IF
#ENDIF
#IFDEF STACK_BOUNDARY
#ELSE
#ENDIF
#IF
#ENDIF
#DEFINE BITARRAY_TEST
#DEFINE BITARRAY_SET
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF CASE_VALUES_THRESHOLD
#IFDEF HAVE_casesi
#DEFINE CASE_VALUES_THRESHOLD
#ELSE
#DEFINE CASE_VALUES_THRESHOLD
#ENDIF
#ENDIF
#IFNDEF ASM_OUTPUT_ADDR_DIFF_ELT
#ENDIF
#IFDEF HAVE_casesi
#ENDIF
#IFDEF HAVE_tablejump
#ENDIF
#IFDEF CASE_DROPS_THROUGH
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" hard-reg-set.h
" basic-block.h
" regs.h
" insn-config.h
" reload.h
" flags.h
" toplev.h
#DEFINE INSN_SUID
#DEFINE REG_WHERE_BORN
#DEFINE MARK_LIVE_AFTER
#IFDEF HARD_REG_SET
#ENDIF
#IFDEF ELIMINABLE_REGS
#ENDIF
#IFDEF ELIMINABLE_REGS
#IF
#ENDIF
#ELSE
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF CLASS_CANNOT_CHANGE_SIZE
#ENDIF
#IFDEF REG_ALLOC_ORDER
#ELSE
#ENDIF
#IFDEF OVERLAPPING_REGNO_P
#ENDIF
#IFNDEF REG_ALLOC_ORDER
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" flags.h
" except.h
" function.h
" expr.h
" toplev.h
#DEFINE CEIL
#IFNDEF MAX_FIXED_MODE_SIZE
#DEFINE MAX_FIXED_MODE_SIZE
#ENDIF
#IFDEF STRUCTURE_SIZE_BOUNDARY
#ENDIF
#IFDEF BIGGEST_FIELD_ALIGNMENT
#ENDIF
#IFDEF ADJUST_FIELD_ALIGN
#ENDIF
#IFNDEF PCC_BITFIELD_TYPE_MATTERS
#ELSE
#ENDIF
#IFDEF PCC_BITFIELD_TYPE_MATTERS
#ENDIF
#IFDEF BITFIELD_NBYTES_LIMITED
#ENDIF
#IFDEF ROUND_TYPE_ALIGN
#ELSE
#ENDIF
#IFDEF ROUND_TYPE_SIZE
#ELSE
#ENDIF
#IFDEF STRUCTURE_SIZE_BOUNDARY
#ENDIF
#IFDEF PCC_BITFIELD_TYPE_MATTERS
#ENDIF
#IFDEF ROUND_TYPE_ALIGN
#ELSE
#ENDIF
#IFDEF ROUND_TYPE_SIZE
#ELSE
#ENDIF
#IFDEF ROUND_TYPE_ALIGN
#ELSE
#ENDIF
#IFDEF ROUND_TYPE_SIZE
#ENDIF
#IFNDEF SET_WORD_SIZE
#DEFINE SET_WORD_SIZE
#ENDIF
#IFDEF ROUND_TYPE_ALIGN
#ENDIF
#IFDEF ROUND_TYPE_SIZE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" hash.h
" demangle.h
" toplev.h
" collect2.h
#DEFINE MAX_ITERATIONS
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
__E__O__F__
" config.h
#UNDEF FLOAT
#UNDEF FFS
" system.h
< signal.h
< setjmp.h
#IFDEF HAVE_SYS_RESOURCE_H
< sys/resource.h
#ENDIF
#IFDEF HAVE_SYS_TIMES_H
< sys/times.h
#ENDIF
" input.h
" tree.h
" rtl.h
" flags.h
" insn-attr.h
" insn-codes.h
" insn-config.h
" recog.h
" defaults.h
" output.h
" except.h
" toplev.h
" expr.h
" basic-block.h
" intl.h
#IFDEF DWARF_DEBUGGING_INFO
" dwarfout.h
#ENDIF
#IF
" dwarf2out.h
#ENDIF
#IF
" dbxout.h
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
" sdbout.h
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
" xcoffout.h
#ENDIF
#IFDEF VMS
#DEFINE fopen
#ENDIF
#IFNDEF DEFAULT_GDB_EXTENSIONS
#DEFINE DEFAULT_GDB_EXTENSIONS
#ENDIF
#IF
#IFNDEF PREFERRED_DEBUGGING_TYPE
#ENDIF
#ELSE
#IFDEF DBX_DEBUGGING_INFO
#DEFINE PREFERRED_DEBUGGING_TYPE
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#DEFINE PREFERRED_DEBUGGING_TYPE
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#DEFINE PREFERRED_DEBUGGING_TYPE
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#DEFINE PREFERRED_DEBUGGING_TYPE
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#DEFINE PREFERRED_DEBUGGING_TYPE
#ENDIF
#ENDIF
#IFNDEF PREFERRED_DEBUGGING_TYPE
#DEFINE PREFERRED_DEBUGGING_TYPE
#ENDIF
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#IF
#ENDIF
#IFDEF ASM_IDENTIFY_LANGUAGE
#ENDIF
#DEFINE MAX_LINE
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF MACHINE_DEPENDENT_REORG
#ENDIF
#IFDEF DEFAULT_CALLER_SAVES
#ELSE
#ENDIF
#IFNDEF DEFAULT_PCC_STRUCT_RETURN
#DEFINE DEFAULT_PCC_STRUCT_RETURN
#ENDIF
#IFDEF HAIFA
#ENDIF
#IFDEF USE_COLLECT2
#ELSE
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFNDEF USER_LABEL_PREFIX
#DEFINE USER_LABEL_PREFIX
#ENDIF
#IFDEF HAIFA
#ENDIF
#DEFINE NUM_ELEM
#IF
#ENDIF
#DEFINE DEFINE_LANG_NAME
" options.h
#IFDEF TARGET_OPTIONS
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF __BEOS__
#ELSE
#IF
#ELSE
#IFDEF _SC_CLK_TCK
#ELSE
#IFDEF USG
#IF
#DEFINE TICKS_PER_SECOND
#ELSE
#IFDEF CLK_TCK
#DEFINE TICKS_PER_SECOND
#ELSE
#DEFINE TICKS_PER_SECOND
#ENDIF
#ENDIF
#ELSE
#IFNDEF VMS
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#DEFINE TIMEVAR
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF DIR_SEPARATOR_2
#ENDIF
#IF
#ENDIF
#IFDEF OUTPUT_QUOTED_STRING
#ELSE
#ENDIF
#IFDEF DIR_SEPARATOR
#ENDIF
#IFDEF ASM_OUTPUT_MAIN_SOURCE_FILENAME
#ELSE
#IFDEF ASM_OUTPUT_SOURCE_FILENAME
#ELSE
#ENDIF
#ENDIF
#IFDEF ASM_IDENTIFY_LANGUAGE
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF MACHINE_DEPENDENT_REORG
#ENDIF
#IFDEF IO_BUFFER_SIZE
#ENDIF
#IFDEF ASM_COMMENT_START
#ENDIF
#IFNDEF ASM_IDENTIFY_GCC
#ELSE
#ENDIF
#IFDEF ASM_IDENTIFY_LANGUAGE
#ENDIF
#IFNDEF ASM_OUTPUT_SECTION_NAME
#ENDIF
#IFNDEF OBJECT_FORMAT_ELF
#ENDIF
#IF
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_UNWIND_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_UNWIND_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF ASM_FILE_END
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF MACHINE_DEPENDENT_REORG
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFNDEF ASM_FINISH_DECLARE_OBJECT
#DEFINE ASM_FINISH_DECLARE_OBJECT
#ENDIF
#IF
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF FINALIZE_PIC
#ENDIF
#IFDEF SETJMP_VIA_SAVE_AREA
#ENDIF
#IFDEF LEAF_REGISTERS
#ENDIF
#IFDEF MACHINE_DEPENDENT_REORG
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFNDEF USE_CPPLIB
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF TARGET_OPTIONS
#ENDIF
#IFDEF TARGET_OPTIONS
#ENDIF
#IFDEF DIR_SEPARATOR
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_LC_MESSAGES
#ENDIF
#IFDEF SIGPIPE
#ENDIF
#IFDEF DEFAULT_SHORT_ENUMS
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF CAN_DEBUG_WITHOUT_FP
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#IFDEF OPTIMIZATION_OPTIONS
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF MACHINE_DEPENDENT_REORG
#ENDIF
#IFDEF DELAY_SLOTS
#ENDIF
#IFDEF STACK_REGS
#ENDIF
#IFDEF MACHINE_DEPENDENT_REORG
#ENDIF
#IFDEF HAIFA
#IFDEF INSN_SCHEDULING
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#ENDIF
#IFDEF OVERRIDE_OPTIONS
#ENDIF
#IFDEF DWARF2_UNWIND_INFO
#ELSE
#ENDIF
#IFNDEF INSN_SCHEDULING
#ENDIF
#IFNDEF DELAY_SLOTS
#ENDIF
#IF
#IFNDEF __MSDOS__
#IFDEF USG
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF TARGET_OPTIONS
#ENDIF
#IFNDEF __VERSION__
#DEFINE __VERSION__
#ENDIF
#IFDEF __GNUC__
#ELSE
#ENDIF
#IFDEF TARGET_OPTIONS
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF_DEBUGGING_INFO
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
__E__O__F__
" config.h
" system.h
" flags.h
" tree.h
" except.h
" function.h
" obstack.h
" toplev.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
#DEFINE DEFTREECODE
" tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" tree.def
#UNDEF DEFTREECODE
#DEFINE MAX_HASH_TABLE
#DEFINE TYPE_HASH
#IFNDEF OBSTACK_CHUNK_SIZE
#DEFINE OBSTACK_CHUNK_SIZE
#ENDIF
#IFNDEF OBSTACK_CHUNK_ALLOC
#DEFINE OBSTACK_CHUNK_ALLOC
#ENDIF
#IFNDEF OBSTACK_CHUNK_FREE
#DEFINE OBSTACK_CHUNK_FREE
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF SET_DEFAULT_TYPE_ATTRIBUTES
#ENDIF
#DEFINE HASHBITS
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF CHECK_FLOAT_VALUE
#ENDIF
#IF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IFDEF CHECK_FLOAT_VALUE
#ENDIF
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF ENABLE_CHECKING
#ENDIF
#IF
#ELSE
#IFDEF GATHER_STATISTICS
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IF
#ENDIF
#IFDEF VALID_MACHINE_DECL_ATTRIBUTE
#ENDIF
#IFDEF VALID_MACHINE_TYPE_ATTRIBUTE
#ENDIF
#IFDEF VALID_MACHINE_DECL_ATTRIBUTE
#ENDIF
#IFDEF VALID_MACHINE_TYPE_ATTRIBUTE
#ENDIF
#IFDEF MERGE_MACHINE_TYPE_ATTRIBUTES
#ELSE
#ENDIF
#IFDEF MERGE_MACHINE_DECL_ATTRIBUTES
#ELSE
#ENDIF
#DEFINE TYPE_HASH_SIZE
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ENDIF
#IFDEF GATHER_STATISTICS
#ELSE
#ENDIF
#DEFINE FILE_FUNCTION_PREFIX_LEN
#IFNDEF NO_DOLLAR_IN_LABEL
#DEFINE FILE_FUNCTION_FORMAT
#ELSE
#IFNDEF NO_DOT_IN_LABEL
#DEFINE FILE_FUNCTION_FORMAT
#ELSE
#DEFINE FILE_FUNCTION_FORMAT
#ENDIF
#ENDIF
#IFDEF HAVE_GETTIMEOFDAY
#ENDIF
#IFDEF HAVE_GETTIMEOFDAY
#ELSE
#ENDIF
#IF
#IFNDEF ASM_IDENTIFY_GCC
#ENDIF
#ENDIF
#IFNDEF NO_DOLLAR_IN_LABEL
#ENDIF
#IFNDEF NO_DOT_IN_LABEL
#ENDIF
#IFDEF ENABLE_CHECKING
#ENDIF
__E__O__F__
#DEFINE UNPROTOIZE
" protoize.c
__E__O__F__
#DEFINE NUM_FACTORS
" config.h
" system.h
" rtl.h
" insn-config.h
" integrate.h
" regs.h
" recog.h
" flags.h
" expr.h
" loop.h
" toplev.h
#IFNDEF MAX_UNROLLED_INSNS
#DEFINE MAX_UNROLLED_INSNS
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IFDEF HAVE_cc0
#ELSE
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IFDEF HAVE_cc0
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
< setjmp.h
" rtl.h
" tree.h
" flags.h
" except.h
" function.h
" expr.h
" output.h
" hard-reg-set.h
" regs.h
" defaults.h
" real.h
" toplev.h
" dbxout.h
" sdbout.h
" obstack.h
" c-pragma.h
#IFDEF XCOFF_DEBUGGING_INFO
" xcoffout.h
#ENDIF
#IFNDEF TRAMPOLINE_ALIGNMENT
#DEFINE TRAMPOLINE_ALIGNMENT
#ENDIF
#IFNDEF ASM_STABS_OP
#DEFINE ASM_STABS_OP
#ENDIF
#IFDEF NO_DOLLAR_IN_LABEL
#IFDEF NO_DOT_IN_LABEL
#DEFINE CHKR_PREFIX
#ELSE
#DEFINE CHKR_PREFIX
#ENDIF
#ELSE
#DEFINE CHKR_PREFIX
#ENDIF
#DEFINE CHKR_PREFIX_SIZE
#DEFINE obstack_chunk_alloc
#IFDEF ASM_OUTPUT_BSS
#ENDIF
#IFDEF BSS_SECTION_ASM_OP
#IFDEF ASM_OUTPUT_ALIGNED_BSS
#ENDIF
#ENDIF
#IFDEF BSS_SECTION_ASM_OP
#ENDIF
#IFDEF EH_FRAME_SECTION_ASM_OP
#ENDIF
#IFDEF EXTRA_SECTIONS
#ENDIF
#DEFINE IN_NAMED_SECTION
#IFDEF EXTRA_SECTION_FUNCTIONS
#ENDIF
#IFDEF SHARED_SECTION_ASM_OP
#ELSE
#ENDIF
#IFDEF READONLY_DATA_SECTION
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_SECTION_NAME
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_SECTION_NAME
#IFNDEF UNIQUE_SECTION
#DEFINE UNIQUE_SECTION
#ENDIF
#IFNDEF UNIQUE_SECTION_P
#DEFINE UNIQUE_SECTION_P
#ENDIF
#ENDIF
#IFDEF BSS_SECTION_ASM_OP
#IFDEF SHARED_BSS_SECTION_ASM_OP
#ENDIF
#IFDEF ASM_OUTPUT_BSS
#IFDEF ASM_DECLARE_OBJECT_NAME
#ELSE
#ENDIF
#ENDIF
#IFDEF ASM_OUTPUT_ALIGNED_BSS
#IFDEF ASM_DECLARE_OBJECT_NAME
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF EH_FRAME_SECTION_ASM_OP
#ENDIF
#IFDEF SELECT_SECTION
#ELSE
#ENDIF
#IF
#ELSE
#IFDEF ASM_OUTPUT_SECTION_NAME
#ELSE
#ENDIF
#ENDIF
#IFDEF ENCODE_SECTION_INFO
#ENDIF
#IFDEF REDO_SECTION_INFO_P
#ENDIF
#IFDEF REGISTER_PREFIX
#ENDIF
#IFDEF ADDITIONAL_REGISTER_NAMES
#ENDIF
#IFDEF ENCODE_SECTION_INFO
#ENDIF
#IFDEF REDO_SECTION_INFO_P
#ENDIF
#IFDEF CONSTANT_ALIGNMENT
#ENDIF
#IF
#IF
#IFNDEF ASM_OUTPUT_CONSTRUCTOR
#DEFINE ASM_OUTPUT_CONSTRUCTOR
#ENDIF
#IFNDEF ASM_OUTPUT_DESTRUCTOR
#DEFINE ASM_OUTPUT_DESTRUCTOR
#ENDIF
#ENDIF
#ENDIF
#IFDEF ASM_OUTPUT_DESTRUCTOR
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_CONSTRUCTOR
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_GC_ENTRY
#ELSE
#ENDIF
#IFNDEF CONSTANT_POOL_BEFORE_FUNCTION
#DEFINE CONSTANT_POOL_BEFORE_FUNCTION
#ENDIF
#IFDEF ASM_OUTPUT_SECTION_NAME
#ENDIF
#IFDEF ASM_OUTPUT_FUNCTION_PREFIX
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF ASM_WEAKEN_LABEL
#ENDIF
#IFDEF ASM_DECLARE_FUNCTION_NAME
#ELSE
#ENDIF
#IFDEF ASM_DECLARE_FUNCTION_SIZE
#ENDIF
#IFDEF ASM_NO_SKIP_IN_TEXT
#IFDEF ASM_BYTE_OP
#ELSE
#ENDIF
#IFDEF ASM_BYTE_OP
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFNDEF MAX_OFILE_ALIGNMENT
#DEFINE MAX_OFILE_ALIGNMENT
#ENDIF
#IFDEF DATA_ALIGNMENT
#ENDIF
#IFDEF CONSTANT_ALIGNMENT
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF ASM_OUTPUT_SHARED_COMMON
#ENDIF
#IFDEF ASM_OUTPUT_ALIGNED_DECL_COMMON
#ELSE
#IFDEF ASM_OUTPUT_ALIGNED_COMMON
#ELSE
#ENDIF
#ENDIF
#IF
#IFDEF ASM_OUTPUT_SHARED_BSS
#ENDIF
#IFDEF ASM_OUTPUT_ALIGNED_BSS
#ELSE
#ENDIF
#ENDIF
#IFDEF ASM_OUTPUT_SHARED_LOCAL
#ENDIF
#IFDEF ASM_OUTPUT_ALIGNED_DECL_LOCAL
#ELSE
#IFDEF ASM_OUTPUT_ALIGNED_LOCAL
#ELSE
#ENDIF
#ENDIF
#IFDEF ASM_WEAKEN_LABEL
#ENDIF
#IF
#ENDIF
#IFDEF ASM_OUTPUT_SECTION_NAME
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFDEF ASM_DECLARE_OBJECT_NAME
#ELSE
#ENDIF
#IFDEF XCOFF_DEBUGGING_INFO
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_EXTERNAL
#ENDIF
#IFDEF ASM_OUTPUT_EXTERNAL_LIBCALL
#ENDIF
#IF
#ENDIF
#IFDEF ASM_OUTPUT_ALIGNED_DECL_LOCAL
#ELSE
#IFDEF ASM_OUTPUT_ALIGNED_LOCAL
#ELSE
#ENDIF
#ENDIF
#IFDEF TRAMPOLINE_TEMPLATE
#IFDEF TRAMPOLINE_SECTION
#ELSE
#ENDIF
#ENDIF
#IFDEF ASM_OUTPUT_CHAR
#ENDIF
#IFDEF ASM_OUTPUT_SHORT
#ENDIF
#IFDEF ASM_OUTPUT_INT
#ENDIF
#IFDEF ASM_OUTPUT_DOUBLE_INT
#ENDIF
#IFDEF ASM_OUTPUT_QUADRUPLE_INT
#ENDIF
#IFDEF ASM_OUTPUT_BYTE
#ENDIF
#IFDEF REAL_IS_NOT_DOUBLE
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_BYTE_FLOAT
#ENDIF
#IFDEF ASM_OUTPUT_SHORT_FLOAT
#ENDIF
#IFDEF ASM_OUTPUT_THREE_QUARTER_FLOAT
#ENDIF
#IFDEF ASM_OUTPUT_FLOAT
#ENDIF
#IFDEF ASM_OUTPUT_DOUBLE
#ENDIF
#IFDEF ASM_OUTPUT_LONG_DOUBLE
#ENDIF
#DEFINE HASHBITS
#DEFINE MAX_HASH_TABLE
#IFDEF ENCODE_SECTION_INFO
#ENDIF
#IFDEF CONSTANT_AFTER_FUNCTION_P
#ENDIF
#IFDEF SELECT_SECTION
#ELSE
#ENDIF
#IFDEF CONSTANT_ALIGNMENT
#ENDIF
#DEFINE MAX_RTX_HASH_TABLE
#DEFINE SYMHASH
#IFDEF ONLY_INT_FIELDS
#ELSE
#ENDIF
#IFDEF CONSTANT_ALIGNMENT
#ENDIF
#IFDEF ASM_OUTPUT_POOL_PROLOGUE
#ENDIF
#IFDEF SELECT_RTX_SECTION
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_SPECIAL_POOL_ENTRY
#ENDIF
#IFDEF ASM_OUTPUT_SPECIAL_POOL_ENTRY
#ENDIF
#IFDEF ASM_OUTPUT_POOL_EPILOGUE
#ENDIF
#IFDEF HANDLE_PRAGMA_WEAK
#ENDIF
#IFDEF HANDLE_PRAGMA_WEAK
#ENDIF
#IFDEF HANDLE_PRAGMA_WEAK
#ENDIF
#IFDEF HANDLE_PRAGMA_WEAK
#ENDIF
#IFDEF HANDLE_PRAGMA_WEAK
#ENDIF
#IFDEF ASM_OUTPUT_DEF
#IFDEF ASM_WEAKEN_LABEL
#ENDIF
#ELSE
#IFDEF ASM_OUTPUT_WEAK_ALIAS
#ELSE
#ENDIF
#ENDIF
#IFNDEF SUPPORTS_ONE_ONLY
#IFDEF MAKE_DECL_ONE_ONLY
#DEFINE SUPPORTS_ONE_ONLY
#ELSE
#DEFINE SUPPORTS_ONE_ONLY
#ENDIF
#ENDIF
#IFDEF MAKE_DECL_ONE_ONLY
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" tree.h
" bitmap.h
" varray.h
#DEFINE VARRAY_HDR_SIZE
__E__O__F__
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" flags.h
" toplev.h
" output.h
#IFDEF XCOFF_DEBUGGING_INFO
< dbxstclass.h
" xcoffout.h
" dbxout.h
#IF
" gstab.h
#ELSE
< stab.h
#IFNDEF N_CATCH
#DEFINE N_CATCH
#ENDIF
#ENDIF
#DEFINE ABS_OR_RELATIVE_LINENO
#DEFINE ASM_OUTPUT_SOURCE_LINE
#DEFINE ASM_OUTPUT_LFB
#DEFINE ASM_OUTPUT_LFE
#DEFINE ASM_OUTPUT_LBB
#DEFINE ASM_OUTPUT_LBE
#DEFINE UNKNOWN_STAB
#IFDEF N_MAIN
#ENDIF
#IFDEF N_DSLINE
#ENDIF
#IFDEF N_BSLINE
#ENDIF
#IF
#ENDIF
#IFDEF N_BINCL
#ENDIF
#IFDEF N_EINCL
#ENDIF
#IFDEF N_EXCL
#ENDIF
#IFDEF N_M2C
#ENDIF
#IFDEF N_SCOPE
#ENDIF
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
" expr.h
" obstack.h
" tree.h
" reload.h
#DEFINE min
#DEFINE INT_P
#DEFINE INT_LOWPART
__E__O__F__
#IFNDEF FINE_GRAINED_LIBRARIES
#DEFINE L_pack_df
#DEFINE L_unpack_df
#DEFINE L_pack_sf
#DEFINE L_unpack_sf
#DEFINE L_addsub_sf
#DEFINE L_addsub_df
#DEFINE L_mul_sf
#DEFINE L_mul_df
#DEFINE L_div_sf
#DEFINE L_div_df
#DEFINE L_fpcmp_parts_sf
#DEFINE L_fpcmp_parts_df
#DEFINE L_compare_sf
#DEFINE L_compare_df
#DEFINE L_eq_sf
#DEFINE L_eq_df
#DEFINE L_ne_sf
#DEFINE L_ne_df
#DEFINE L_gt_sf
#DEFINE L_gt_df
#DEFINE L_ge_sf
#DEFINE L_ge_df
#DEFINE L_lt_sf
#DEFINE L_lt_df
#DEFINE L_le_sf
#DEFINE L_le_df
#DEFINE L_si_to_sf
#DEFINE L_si_to_df
#DEFINE L_sf_to_si
#DEFINE L_df_to_si
#DEFINE L_f_to_usi
#DEFINE L_df_to_usi
#DEFINE L_negate_sf
#DEFINE L_negate_df
#DEFINE L_make_sf
#DEFINE L_make_df
#DEFINE L_sf_to_df
#DEFINE L_df_to_sf
#ENDIF
#IFDEF EXTENDED_FLOAT_STUBS
#ELSE
#IFNDEF CMPtype
#DEFINE CMPtype
#ENDIF
#DEFINE MAX_SI_INT
#DEFINE MAX_USI_INT
#IFDEF FLOAT_ONLY
#DEFINE NO_DI_MODE
#ENDIF
#IFDEF FLOAT
#DEFINE NGARDS
#DEFINE GARDROUND
#DEFINE GARDMASK
#DEFINE GARDMSB
#DEFINE EXPBITS
#DEFINE EXPBIAS
#DEFINE FRACBITS
#DEFINE EXPMAX
#DEFINE QUIET_NAN
#DEFINE FRAC_NBITS
#DEFINE FRACHIGH
#DEFINE FRACHIGH2
#DEFINE pack_d
#DEFINE unpack_d
#DEFINE __fpcmp_parts
#ELSE
#DEFINE PREFIXFPDP
#DEFINE PREFIXSFDF
#DEFINE NGARDS
#DEFINE GARDROUND
#DEFINE GARDMASK
#DEFINE GARDMSB
#DEFINE EXPBITS
#DEFINE EXPBIAS
#DEFINE FRACBITS
#DEFINE EXPMAX
#DEFINE QUIET_NAN
#DEFINE FRAC_NBITS
#DEFINE FRACHIGH
#DEFINE FRACHIGH2
#DEFINE pack_d
#DEFINE unpack_d
#DEFINE __fpcmp_parts
#ENDIF
#IFDEF US_SOFTWARE_GOFAST
#IFDEF FLOAT
#DEFINE add
#DEFINE sub
#DEFINE multiply
#DEFINE divide
#DEFINE compare
#DEFINE si_to_float
#DEFINE float_to_si
#DEFINE float_to_usi
#DEFINE negate
#DEFINE sf_to_df
#DEFINE dptofp
#ELSE
#DEFINE add
#DEFINE sub
#DEFINE multiply
#DEFINE divide
#DEFINE compare
#DEFINE si_to_float
#DEFINE float_to_si
#DEFINE float_to_usi
#DEFINE negate
#DEFINE df_to_sf
#ENDIF
#ELSE
#IFDEF FLOAT
#DEFINE add
#DEFINE sub
#DEFINE multiply
#DEFINE divide
#DEFINE compare
#DEFINE _eq_f2
#DEFINE _ne_f2
#DEFINE _gt_f2
#DEFINE _ge_f2
#DEFINE _lt_f2
#DEFINE _le_f2
#DEFINE si_to_float
#DEFINE float_to_si
#DEFINE float_to_usi
#DEFINE negate
#DEFINE sf_to_df
#ELSE
#DEFINE add
#DEFINE sub
#DEFINE multiply
#DEFINE divide
#DEFINE compare
#DEFINE _eq_f2
#DEFINE _ne_f2
#DEFINE _gt_f2
#DEFINE _ge_f2
#DEFINE _lt_f2
#DEFINE _le_f2
#DEFINE si_to_float
#DEFINE float_to_si
#DEFINE float_to_usi
#DEFINE negate
#DEFINE df_to_sf
#ENDIF
#ENDIF
#IFNDEF INLINE
#DEFINE INLINE
#ENDIF
#DEFINE LSHIFT
#DEFINE F_D_BITOFF
#DEFINE NORMAL_EXPMIN
#DEFINE IMPLICIT_1
#DEFINE IMPLICIT_2
#IFDEF SMALL_MACHINE
#ELSE
#ENDIF
#IFNDEF FLOAT
#ENDIF
#IFDEF FLOAT_BIT_ORDER_MISMATCH
#ENDIF
#IFDEF _DEBUG_BITFLOAT
#ENDIF
#IFDEF NO_NANS
#DEFINE nan
#DEFINE isnan
#DEFINE isinf
#ELSE
#ENDIF
#IF
#IFDEF FLOAT_BIT_ORDER_MISMATCH
#ELSE
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IFDEF FLOAT_BIT_ORDER_MISMATCH
#ELSE
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ELIF
#ELSE
#ENDIF
#IFDEF FLOAT
#ELSE
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF US_SOFTWARE_GOFAST
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF US_SOFTWARE_GOFAST
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF FLOAT
#IF
#ENDIF
#IFNDEF FLOAT_ONLY
#IF
#ENDIF
#ENDIF
#ENDIF
#IFNDEF FLOAT
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" config.h
< stdio.h
" flags.h
" tree.h
#DEFINE OPT_STRCMP
__E__O__F__
< stdio.h
" config.h
" tree.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" expr.h
" recog.h
#DEFINE MAX_INSNS_SKIPPED
#DEFINE ARC_INVERSE_CONDITION_CODE
#DEFINE C_MODES
#DEFINE S_MODES
#DEFINE D_MODES
#DEFINE T_MODES
#IF
#ELSE
#ENDIF
#DEFINE ILINK1_REGNUM
#DEFINE ILINK2_REGNUM
#DEFINE RETURN_ADDR_REGNUM
#DEFINE FRAME_POINTER_MASK
#DEFINE RETURN_ADDR_MASK
#DEFINE MUST_SAVE_REGISTER
#DEFINE MUST_SAVE_RETURN_ADDR
__E__O__F__
#IFDEF CRT_INIT
#ENDIF
#IFDEF CRT_FINI
#ENDIF
__E__O__F__
#DEFINE __datalbl
" config.h
< stdio.h
< string.h
" rtl.h
" tree.h
" expr.h
#DEFINE HAVE_cc0
" conditions.h
" real.h
" regs.h
#DEFINE dstreg
#DEFINE srcreg
#DEFINE cntreg
#DEFINE cntreg_1750
__E__O__F__
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
" reload.h
" tree.h
" expr.h
" obstack.h
" except.h
" function.h
" toplev.h
#IFDEF OPEN_VMS
#DEFINE NUM_ARGS
#ELSE
#DEFINE NUM_ARGS
#ENDIF
#DEFINE REG_PV
#DEFINE REG_RA
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE MAX_MOVE_WORDS
#IF
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_MI_THUNK
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF TRANSFER_FROM_TRAMPOLINE
#ENDIF
#IFDEF POINTERS_EXTEND_UNSIGNED
#ENDIF
#IFDEF ASM_OUTPUT_MI_THUNK
#ENDIF
#IFDEF ASM_OUTPUT_MI_THUNK
#ENDIF
#IFDEF TARGET_PROFILING_NEEDS_GP
#ENDIF
#IFDEF ASM_OUTPUT_MI_THUNK
#ENDIF
#IFDEF HAVE_STAMP_H
< stamp.h
#ENDIF
#IFDEF MS_STAMP
#ENDIF
#DEFINE FRP
#IFDEF OPEN_VMS
#ENDIF
#UNDEF FRP
#DEFINE FRP
" gstab.h
#IFDEF HAIFA
#ENDIF
#IFDEF HAIFA
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" reload.h
" tree.h
" expr.h
" toplev.h
" recog.h
#DEFINE FL_CO_PROC
#DEFINE FL_FAST_MULT
#DEFINE FL_MODE26
#DEFINE FL_MODE32
#DEFINE FL_ARCH4
#DEFINE FL_THUMB
#DEFINE FL_LDSCHED
#DEFINE FL_STRONG
#DEFINE streq
#IFDEF AOF_ASSEMBLER
#ELSE
#ENDIF
#IFNDEF AOF_ASSEMBLER
#ENDIF
#DEFINE REG_OR_SUBREG_REG
#DEFINE REG_OR_SUBREG_RTX
#DEFINE ARM_FRAME_RTX
#DEFINE MAX_POOL_SIZE
#IFNDEF AOF_ASSEMBLER
#ENDIF
#IFDEF AOF_ASSEMBLER
#ENDIF
#IFNDEF AOF_ASSEMBLER
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF AOF_ASSEMBLER
#ENDIF
#IF
#ENDIF
#IFDEF AOF_ASSEMBLER
#ENDIF
__E__O__F__
< stdio.h
< string.h
" config.h
" rtl.h
" hard-reg-set.h
" regs.h
" output.h
" insn-flags.h
" insn-attr.h
" flags.h
" tree.h
" expr.h
#IF
#ENDIF
#DEFINE MAX_POOL_SIZE
#DEFINE MAX_COUNT_SI
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF DBX_DEBUGGING_INFO
#ENDIF
#IFDEF __GNUC__
#ENDIF
#DEFINE ARG_1_REGISTER
#DEFINE ARG_2_REGISTER
#DEFINE ARG_3_REGISTER
#DEFINE ARG_4_REGISTER
#DEFINE WORK_REGISTER
#DEFINE FRAME_POINTER
#DEFINE IP_REGISTER
#DEFINE STACK_POINTER
#DEFINE LINK_REGISTER
#DEFINE PROGRAM_COUNTER
#IFDEF RTX_CODE
#ENDIF
#DEFINE STUB_NAME
#IF
#ENDIF
#IFDEF RTX_CODE
#ENDIF
#IFDEF AOF_ASSEMBLER
#ENDIF
__E__O__F__
" config.h
" system.h
" toplev.h
" rtl.h
" regs.h
" hard-reg-set.h
" basic-block.h
" real.h
" insn-config.h
" insn-attr.h
" insn-codes.h
" conditions.h
" insn-flags.h
" output.h
" tree.h
" expr.h
" flags.h
" loop.h
" recog.h
" c-tree.h
#DEFINE C4X_ASCII_LIMIT
#IF
#ENDIF
#IFDEF FUNCTION_BLOCK_PROFILER_EXIT
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE SET_USE_COST
#DEFINE SETLDA_USE_COST
#DEFINE READ_USE_COST
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" tree.h
" c-tree.h
" expr.h
" flags.h
" machmode.h
__E__O__F__
" config.h
< stdio.h
" tree.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" insn-attr.h
" output.h
" expr.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE MAX_FLOAT
#DEFINE MIN_FLOAT
#ELSE
#DEFINE MAX_FLOAT
#DEFINE MIN_FLOAT
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" tree.h
" expr.h
" flags.h
#DEFINE SHIFT_INDEX_1
#DEFINE SHIFT_INDEX_4
#DEFINE SHIFT_INDEX_8
#DEFINE SHIFT_INDEX_16
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF STACK_GROWS_DOWNWARD
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IFDEF WORDS_BIG_ENDIAN
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF WORDS_BIG_ENDIAN
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
#UNDEF S_PI
#UNDEF D_PI
#UNDEF S_E
#UNDEF D_E
#UNDEF S_LOGEof2
#UNDEF D_LOGEof2
#UNDEF S_LOGEof10
#UNDEF D_LOGEof10
#UNDEF S_LOG10of2
#UNDEF D_LOG10of2
#UNDEF S_LOG10ofE
#UNDEF D_LOG10ofE
#UNDEF S_LOG2ofE
#UNDEF D_LOG2ofE
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
" expr.h
" tree.h
" obstack.h
#DEFINE WORD_REG_USED
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
< stdio.h
< string.h
< ctype.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
#IFDEF sun
< sys/types.h
< ctype.h
#ENDIF
< time.h
#DEFINE MVS_FUNCTION_TABLE_LENGTH
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
< time.h
" i386/i386.c
#IFDEF TARGET_IDENTIFY_REVISION
#ENDIF
#IFNDEF CROSS_COMPILE
#IF
#ENDIF
#ENDIF
__E__O__F__
#IFNDEF lint
#ENDIF
#IF
< unistd.h
#ENDIF
#IFDEF DEBUG
< stdio.h
#ENDIF
#IF
" i386/gmon.h
#ELSE
#DEFINE HISTFRACTION
#DEFINE HISTCOUNTER
#DEFINE HASHFRACTION
#DEFINE ARCDENSITY
#DEFINE MINARCS
#DEFINE BASEADDRESS
#DEFINE ROUNDDOWN
#DEFINE ROUNDUP
#ENDIF
#IFDEF __alpha
#ENDIF
#DEFINE SCALE_1_TO_1
#DEFINE MSG
#IFNDEF hp300
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF USE_ONEXIT
#ELSE
#ENDIF
#DEFINE TOLIMIT
__E__O__F__
< setjmp.h
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" tree.h
" flags.h
" except.h
" function.h
" recog.h
" expr.h
" toplev.h
#IFDEF EXTRA_CONSTRAINT
#ENDIF
#IFNDEF CHECK_STACK_LIMIT
#DEFINE CHECK_STACK_LIMIT
#ENDIF
#DEFINE m_386
#DEFINE m_486
#DEFINE m_PENT
#DEFINE m_PPRO
#DEFINE m_K6
#DEFINE AT_BP
#IFDEF SUBTARGET_OVERRIDE_OPTIONS
#ENDIF
#IFDEF ASM_OUTPUT_MAX_SKIP_ALIGN
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_MAX_SKIP_ALIGN
#ELSE
#ENDIF
#IFDEF INSN_SCHEDULING
#ENDIF
#IF
#ENDIF
#DEFINE MAX_TMPS
#IF
#ENDIF
#IFDEF YES_UNDERSCORES
#ELSE
#ENDIF
#IFDEF PREFERRED_STACK_BOUNDARY
#ENDIF
#IFDEF INCOMING_RETURN_ADDR_RTX
#ENDIF
#IFDEF INCOMING_RETURN_ADDR_RTX
#ENDIF
#IFDEF INCOMING_RETURN_ADDR_RTX
#ENDIF
#IFDEF INCOMING_RETURN_ADDR_RTX
#ENDIF
#IFDEF SUBTARGET_PROLOGUE
#ENDIF
#IFDEF NON_SAVING_SETJMP
#ENDIF
#IFDEF FUNCTION_BLOCK_PROFILER_EXIT
#ENDIF
#DEFINE ADDR_INVALID
#IFDEF YES_UNDERSCORES
#ENDIF
#IFDEF HAVE_GAS_FILDS_FISTS
#ENDIF
#IFDEF GAS_MNEMONICS
#ELSE
#ENDIF
#DEFINE MAX_386_STACK_LOCALS
#IFDEF NOTYET
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" output.h
" tree.h
" flags.h
#IF
#IFDEF READONLY_DATA_SECTION
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" output.h
" tree.h
" flags.h
#IFDEF READONLY_DATA_SECTION
#ELSE
#ENDIF
" gsyms.h
__E__O__F__
" config.h
< stdio.h
" flags.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" recog.h
" insn-attr.h
#IFNDEF I860_REG_PREFIX
#DEFINE I860_REG_PREFIX
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF REGISTER_CONSTRAINTS
#ENDIF
#IF
#ENDIF
#IFNDEF STACK_ALIGNMENT
#DEFINE STACK_ALIGNMENT
#ENDIF
#IFNDEF I860_STRICT_ABI_PROLOGUES
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_PROLOGUE_SUFFIX
#ENDIF
#IFDEF OUTPUT_TDESC
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" tree.h
" insn-codes.h
" expr.h
" except.h
" function.h
" recog.h
< math.h
#DEFINE VARARGS_STDARG_FUNCTION
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE RTX_OK_FOR_BASE_P
#DEFINE RTX_OK_FOR_INDEX_P
#IF
#ENDIF
__E__O__F__
#IFDEF CRT_INIT
#ENDIF
#IFDEF CRT_FINI
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" expr.h
" recog.h
#DEFINE C_MODES
#DEFINE S_MODES
#DEFINE D_MODES
#DEFINE T_MODES
#IF
#ENDIF
#DEFINE FRAME_POINTER_MASK
#DEFINE RETURN_ADDR_MASK
#DEFINE MUST_SAVE_REGISTER
#DEFINE MUST_SAVE_FRAME_POINTER
#DEFINE MUST_SAVE_RETURN_ADDR
#DEFINE SHORT_INSN_SIZE
#DEFINE LONG_INSN_SIZE
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#DEFINE MAX_MOVE_BYTES
__E__O__F__
< stdlib.h
#IFDEF MCRT1
< unistd.h
< mon.h
#ENDIF
#IFDEF MACCRT1
#ENDIF
#IFDEF MCRT1
#ENDIF
#IFDEF MCRT1
#ENDIF
#IFDEF MACCRT1
#ENDIF
#IFDEF MCRT1
#ENDIF
__E__O__F__
< stdlib.h
#DEFINE FNS_PER_BLOCK
__E__O__F__
#IFNDEF __GNUC__
#ERROR This
#ENDIF
< mon.h
#IFDEF IN_GCC
" tm.h
#ENDIF
#IFDEF FUNCTION_PROFILER_SYMBOL
#ENDIF
__E__O__F__
#DEFINE EXCESS
#DEFINE SIGNBIT
#DEFINE HIDDEN
#DEFINE SIGN
#DEFINE EXP
#DEFINE MANT
#DEFINE PACK
#DEFINE EXCESSD
#DEFINE HIDDEND
#DEFINE EXPDBITS
#DEFINE EXPDMASK
#DEFINE EXPD
#DEFINE SIGND
#DEFINE MANTD
#DEFINE MANTDMASK
#DEFINE EXCESSX
#DEFINE HIDDENX
#DEFINE EXPXBITS
#DEFINE EXPXMASK
#DEFINE EXPX
#DEFINE SIGNX
#DEFINE MANTXMASK
#IFNDEF EXTFLOAT
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" recog.h
" toplev.h
" flags.h
#IFDEF SUPPORT_SUN_FPA
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFNDEF NO_ADDSUB_Q
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#IFDEF MOTOROLA
#ELSE
#ENDIF
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IF
#IFDEF MOTOROLA
#IFDEF CRDS
#ELSE
#ENDIF
#ELSE
#ENDIF
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF FUNCTION_BLOCK_PROFILER_EXIT
#ENDIF
#IFDEF FUNCTION_EXTRA_EPILOGUE
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFNDEF NO_ADDSUB_Q
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#IFDEF SGS_CMP_ORDER
#ELSE
#ENDIF
#ELSE
#IFDEF SGS_CMP_ORDER
#ELSE
#ENDIF
#ENDIF
#IFDEF SGS_CMP_ORDER
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF SGS_CMP_ORDER
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IF
#ENDIF
#DEFINE USE_MOVQ
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF SGS_NO_LI
#IF
#IFDEF SGS
#ELSE
#ENDIF
#ELSE
#IFDEF SGS_SWITCH_TABLES
#ENDIF
#ENDIF
#ENDIF
#IFNDEF NO_ADDSUB_Q
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#ENDIF
#IFDEF SGS
#ELSE
#IFDEF MOTOROLA
#ELSE
#ENDIF
#ENDIF
#IFNDEF NO_ADDSUB_Q
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#ENDIF
#IFDEF NO_ASM_FMOVECR
#ENDIF
#IFNDEF REAL_ARITHMETIC
#IF
#ENDIF
#ENDIF
#IFNDEF REAL_ARITHMETIC
#IF
#ENDIF
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#IFNDEF REAL_ARITHMETIC
#IF
#ENDIF
#ENDIF
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#ENDIF
#IF
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF SUPPORT_SUN_FPA
#ENDIF
#IFNDEF ASM_OUTPUT_CASE_FETCH
#IFDEF MOTOROLA
#IFDEF SGS
#DEFINE ASM_OUTPUT_CASE_FETCH
#ELSE
#DEFINE ASM_OUTPUT_CASE_FETCH
#ENDIF
#ELSE
#DEFINE ASM_OUTPUT_CASE_FETCH
#ENDIF
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#ELSE
#ENDIF
#IFDEF MOTOROLA
#IFDEF SGS
#ELSE
#ENDIF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" config.h
< stdio.h
< sys/types.h
< time.h
< ctype.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" tree.h
" c-tree.h
" expr.h
" flags.h
#DEFINE MOVSTR_LOOP
#DEFINE MOVSTR_QI
#DEFINE MOVSTR_HI
#DEFINE MOVSTR_SI
#DEFINE MOVSTR_DI
#DEFINE MOVSTR_ODD_HI
#DEFINE MOVSTR_ODD_SI
#DEFINE MOVSTR_ODD_DI
#DEFINE MOVSTR_QI_LIMIT_88100
#DEFINE MOVSTR_HI_LIMIT_88100
#DEFINE MOVSTR_SI_LIMIT_88100
#DEFINE MOVSTR_DI_LIMIT_88100
#DEFINE MOVSTR_QI_LIMIT_88000
#DEFINE MOVSTR_HI_LIMIT_88000
#DEFINE MOVSTR_SI_LIMIT_88000
#DEFINE MOVSTR_DI_LIMIT_88000
#DEFINE MOVSTR_QI_LIMIT_88110
#DEFINE MOVSTR_HI_LIMIT_88110
#DEFINE MOVSTR_SI_LIMIT_88110
#DEFINE MOVSTR_DI_LIMIT_88110
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF AS_BUG_IMMEDIATE_LABEL
#ELSE
#ENDIF
#IFDEF USE_GAS
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE FIRST_OCS_PRESERVE_REGISTER
#DEFINE LAST_OCS_PRESERVE_REGISTER
#DEFINE FIRST_OCS_EXTENDED_PRESERVE_REGISTER
#DEFINE LAST_OCS_EXTENDED_PRESERVE_REGISTER
#DEFINE STACK_UNIT_BOUNDARY
#DEFINE ROUND_CALL_BLOCK_SIZE
#IF
#ENDIF
#IF
#ENDIF
#IFDEF ESKIT
#ENDIF
#IF
#IFDEF AS_BUG_FLDCR
#ELSE
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
< signal.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" insn-attr.h
" insn-codes.h
" recog.h
" toplev.h
#UNDEF MAX
#UNDEF MIN
" tree.h
" expr.h
" flags.h
" reload.h
" output.h
#IF
" gstab.h
#ELSE
< stab.h
#ENDIF
#IFDEF __GNU_STAB__
#DEFINE STAB_CODE_TYPE
#ELSE
#DEFINE STAB_CODE_TYPE
#ENDIF
#IFDEF MIPS_ABI_DEFAULT
#ENDIF
#IF
#ENDIF
#IFDEF TARGET_FP_CALL_32
#ENDIF
#IFDEF TARGET_FP_CALL_32
#ENDIF
#IFDEF TARGET_FP_CALL_32
#ENDIF
#IFDEF TARGET_FP_CALL_32
#ENDIF
#IFDEF TARGET_FP_CALL_32
#ENDIF
#IFDEF TARGET_FP_CALL_32
#ENDIF
#DEFINE MAX_MOVE_REGS
#DEFINE MAX_MOVE_BYTES
#IFDEF TARGET_MEM_FUNCTIONS
#ELSE
#ENDIF
#IFNDEF MIPS_ISA_DEFAULT
#DEFINE MIPS_ISA_DEFAULT
#ENDIF
#IFDEF TARGET_DEFAULT
#ENDIF
#IFDEF MIPS_ABI_DEFAULT
#ELSE
#ENDIF
#IFDEF MIPS_CPU_STRING_DEFAULT
#ENDIF
#IF
#ENDIF
#IFDEF ASM_OUTPUT_UNDEF_FUNCTION
#ENDIF
#IFDEF ASM_OUTPUT_UNDEF_FUNCTION
#ENDIF
#IF
#IFNDEF P_tmpdir
#DEFINE P_tmpdir
#ENDIF
#ENDIF
#IFDEF P_tmpdir
#ENDIF
#IFNDEF __MSDOS__
#ENDIF
#IFNDEF ABICALLS_ASM_OP
#DEFINE ABICALLS_ASM_OP
#ENDIF
#IFDEF ASM_OUTPUT_UNDEF_FUNCTION
#ENDIF
#IFDEF __MSDOS__
#ENDIF
#IFDEF REAL_VALUE_TO_TARGET_DOUBLE
#ELSE
#ENDIF
#IFDEF REAL_VALUE_TO_TARGET_SINGLE
#ELSE
#ENDIF
#DEFINE BITSET_P
#IFNDEF FUNCTION_NAME_ALREADY_DECLARED
#ENDIF
#IFDEF SDB_DEBUGGING_INFO
#ENDIF
#IFNDEF FUNCTION_NAME_ALREADY_DECLARED
#ENDIF
#DEFINE RA_MASK
#DEFINE PIC_OFFSET_TABLE_MASK
#IFNDEF FUNCTION_NAME_ALREADY_DECLARED
#ENDIF
#IFDEF MIPS_ABI_DEFAULT
#ENDIF
#IFNDEF FUNCTION_NAME_ALREADY_DECLARED
#ENDIF
#IFNDEF FUNCTION_NAME_ALREADY_DECLARED
#ENDIF
#IFNDEF FUNCTION_NAME_ALREADY_DECLARED
#ENDIF
#IFDEF ASM_DECLARE_FUNCTION_SIZE
#ENDIF
#IFNDEF FUNCTION_NAME_ALREADY_DECLARED
#ENDIF
__E__O__F__
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
" expr.h
" tree.h
" obstack.h
__E__O__F__
__E__O__F__
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
" expr.h
" tree.h
" obstack.h
#DEFINE REG_SAVE_BYTES
__E__O__F__
< stdio.h
< string.h
< dirent.h
__E__O__F__
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" tree.h
" expr.h
" flags.h
#IFDEF OSF_OS
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE MAX_UNALIGNED_COPY
#IFDEF SEQUENT_ASM
#ELSE
#IFDEF ENCORE_ASM
#ELSE
#ENDIF
#ENDIF
#IFDEF SEQUENT_ASM
#IF
#ENDIF
#ELSE
#ENDIF
#IFDEF NO_IMMEDIATE_PREFIX_IF_SYMBOLIC
#ENDIF
#IFNDEF INDEX_RATHER_THAN_BASE
#ELSE
#ENDIF
#IFNDEF BASE_REG_NEEDED
#IF
#ENDIF
#ENDIF
#IFDEF PC_RELATIVE
#IFDEF BASE_REG_NEEDED
#ENDIF
#ENDIF
#IFDEF UTEK_ASM
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" tree.h
" reload.h
" c-tree.h
" expr.h
" obstack.h
" toplev.h
#IF
#ELSE
#ENDIF
#DEFINE MILLI_START
#IFNDEF HP_FP_ARG_DESCRIPTOR_REVERSED
#ELSE
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
#IF
#ENDIF
#IFNDEF HOST_WORDS_BIG_ENDIAN
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" tree.h
#IF
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
" expr.h
" obstack.h
" tree.h
#DEFINE min
#DEFINE max
#IF
#ENDIF
#DEFINE SYMHASHSIZE
#DEFINE HASHBITS
#DEFINE FP_HASH_SIZE
#IF
#ELSE
#ENDIF
__E__O__F__
__E__O__F__
" config.h
" system.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" insn-attr.h
" flags.h
" recog.h
" expr.h
" obstack.h
" tree.h
" except.h
" function.h
" output.h
" toplev.h
#IFNDEF TARGET_NO_PROTOTYPE
#DEFINE TARGET_NO_PROTOTYPE
#ENDIF
#DEFINE min
#DEFINE max
#IFDEF USING_SVR4_H
#ENDIF
#IFDEF TARGET_REGNAMES
#ENDIF
#IFNDEF MASK_STRICT_ALIGN
#DEFINE MASK_STRICT_ALIGN
#ENDIF
#DEFINE POWER_MASKS
#DEFINE POWERPC_MASKS
#DEFINE POWERPC_OPT_MASKS
#IFDEF TARGET_REGNAMES
#ENDIF
#IFDEF SUBTARGET_OVERRIDE_OPTIONS
#ENDIF
#IFDEF HAVE_decrement_and_branch_on_count
#ENDIF
#IFDEF USING_SVR4_H
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF TARGET_RELOCATABLE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF MEM_UNALIGNED_P
#ENDIF
#DEFINE MAX_MOVE_REG
#IF
#DEFINE SMALL_DATA_RELOC
#DEFINE SMALL_DATA_REG
#ELSE
#DEFINE SMALL_DATA_RELOC
#DEFINE SMALL_DATA_REG
#ENDIF
#DEFINE INT_P
#DEFINE INT_LOWPART
#IF
#ENDIF
#IF
#ENDIF
#IFDEF TARGET_NO_TOC
#ENDIF
#IFNDEF ABI_STACK_BOUNDARY
#DEFINE ABI_STACK_BOUNDARY
#ENDIF
#IFDEF TARGET_EABI
#ENDIF
#IFDEF NAME__MAIN
#ENDIF
#IFDEF TARGET_RELOCATABLE
#ENDIF
#IFDEF USING_SVR4_H
#ELSE
#ENDIF
#IFDEF NAME__MAIN
#ENDIF
#IFDEF NAME__MAIN
#IFDEF RS6000_CALL_GLUE2
#ELSE
#IFDEF RS6000_CALL_GLUE
#ENDIF
#ENDIF
#ENDIF
#IFDEF USING_SVR4_H
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE MEM_DEREF
#DEFINE MEM_PLUS
#IFDEF USING_SVR4_H
#ENDIF
__E__O__F__
#IF
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" tree.h
" flags.h
" insn-flags.h
" expr.h
" regs.h
" hard-reg-set.h
" output.h
" insn-attr.h
#DEFINE MSW
#DEFINE LSW
#DEFINE EXT_SHIFT_SIGNED
#DEFINE MAX_POOL_SIZE
#DEFINE CONDJUMP_MIN
#DEFINE CONDJUMP_MAX
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
#IF
" sparc/gmon.h
#ELSE
#DEFINE HISTFRACTION
#DEFINE HISTCOUNTER
#DEFINE HASHFRACTION
#DEFINE ARCDENSITY
#DEFINE MINARCS
#DEFINE ROUNDDOWN
#DEFINE ROUNDUP
#ENDIF
#DEFINE SCALE_1_TO_1
#DEFINE MSG
#IFNDEF hp300
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF USE_ONEXIT
#ELSE
#ENDIF
#DEFINE TOLIMIT
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" expr.h
" recog.h
" toplev.h
#DEFINE SKIP_CALLERS_UNIMP_P
#IFDEF LEAF_REGISTERS
#ENDIF
#IFDEF DWARF2_DEBUGGING_INFO
#ENDIF
#IFNDEF SPARC_BI_ARCH
#ENDIF
#IFDEF SPARC_BI_ARCH
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#DEFINE GEN_HIGHINT64
#DEFINE GEN_INT64
#ELSE
#DEFINE GEN_HIGHINT64
#DEFINE GEN_INT64
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE S_MODES
#DEFINE D_MODES
#DEFINE T_MODES
#DEFINE SF_MODES
#DEFINE DF_MODES
#DEFINE DF_MODES64
#DEFINE DF_ONLY_MODES
#DEFINE DF_UP_MODES
#DEFINE TF_ONLY_MODES
#DEFINE TF_MODES
#DEFINE TF_MODES64
#DEFINE CC_MODES
#DEFINE CCFP_MODES
#IFDEF FUNCTION_BLOCK_PROFILER_EXIT
#ENDIF
#DEFINE SPARC_INT_ARG_MAX
#DEFINE SPARC_FP_ARG_MAX
#DEFINE ROUND_ADVANCE
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF CHAR_TYPE_SIZE
#DEFINE CHAR_TYPE_SIZE
#ENDIF
#IFNDEF SHORT_TYPE_SIZE
#DEFINE SHORT_TYPE_SIZE
#ENDIF
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#IFNDEF LONG_TYPE_SIZE
#DEFINE LONG_TYPE_SIZE
#ENDIF
#IFNDEF LONG_LONG_TYPE_SIZE
#DEFINE LONG_LONG_TYPE_SIZE
#ENDIF
#IFNDEF FLOAT_TYPE_SIZE
#DEFINE FLOAT_TYPE_SIZE
#ENDIF
#IFNDEF DOUBLE_TYPE_SIZE
#DEFINE DOUBLE_TYPE_SIZE
#ENDIF
#IFNDEF LONG_DOUBLE_TYPE_SIZE
#DEFINE LONG_DOUBLE_TYPE_SIZE
#ENDIF
#IFDEF TRANSFER_FROM_TRAMPOLINE
#ENDIF
#IFDEF TRANSFER_FROM_TRAMPOLINE
#ENDIF
#DEFINE RETURN_ADDR_REGNUM
#DEFINE FRAME_POINTER_MASK
#DEFINE RETURN_ADDR_MASK
#DEFINE MUST_SAVE_REGISTER
#DEFINE SLOW_FP
#UNDEF SLOW_FP
#DEFINE TMASK
#DEFINE UMASK
#DEFINE ULTRA_NUM_HIST
#DEFINE ultra_pipe
#IFDEF ASM_OUTPUT_ADDR_VEC_START
#ENDIF
#IFDEF ASM_OUTPUT_CASE_LABEL
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_ADDR_VEC_END
#ENDIF
#IFDEF ASM_OUTPUT_ADDR_VEC_START
#ENDIF
#IFDEF ASM_OUTPUT_CASE_LABEL
#ELSE
#ENDIF
#IFDEF ASM_OUTPUT_ADDR_VEC_END
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
__E__O__F__
" config.h
< stdio.h
< ctype.h
" tree.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
" flags.h
" recog.h
" expr.h
" obstack.h
" toplev.h
#IFNDEF streq
#DEFINE streq
#ENDIF
#DEFINE INTERRUPT_FIXED_NUM
#DEFINE INTERRUPT_FIXED_SAVE_SIZE
#DEFINE INTERRUPT_REGPARM_NUM
#DEFINE INTERRUPT_ALL_SAVE_NUM
#DEFINE INTERRUPT_ALL_SAVE_SIZE
#IFDEF ASM_DECLARE_OBJECT_NAME
#ELSE
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" regs.h
" hard-reg-set.h
" real.h
" insn-config.h
" conditions.h
" insn-flags.h
" output.h
" insn-attr.h
#IFDEF VMS_TARGET
" tree.h
#ENDIF
#IF
#ENDIF
#IFDEF VMS_TARGET
#ENDIF
#IFDEF VMS
#IFDEF QSORT_WORKAROUND
#IFDEF USE_C_ALLOCA
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" config.h
< stdio.h
" rtl.h
" real.h
__E__O__F__
< sys/types.h
< sys/stat.h
< stdio.h
< stdlib.h
< malloc.h
< string.h
< limits.h
< ctype.h
< errno.h
< dirent.h
#DEFINE WIN32_LEAN_AND_MEAN
< windows.h
#DEFINE FILE_NAME_E
#DEFINE OS_CloseFH
#DEFINE FIND_BUFFER
#DEFINE DISABLE_HARD_ERRORS
#DEFINE ENABLE_HARD_ERRORS
#DEFINE ERROR_EMPTY_DIR
#DEFINE ATTRIBUTES
#IFNDEF ENOTDIR
#DEFINE ENOTDIR
#ENDIF
#IFNDEF S_IFMT
#DEFINE S_IFMT
#ENDIF
#IFNDEF S_ISDIR
#DEFINE S_ISDIR
#ENDIF
#IF
#ENDIF
__E__O__F__
< stdlib.h
< string.h
< sys/stat.h
< dirent.h
< stdio.h
< io.h
< fcntl.h
< process.h
__E__O__F__
" config.h
< stdio.h
< sys/types.h
< sys/stat.h
< stdlib.h
< string.h
< process.h
__E__O__F__
< stdio.h
< string.h
< dirent.h
__E__O__F__
__E__O__F__
#DEFINE index
__E__O__F__
" auto-host.h
" gansidecl.h
" system.h
< signal.h
" gnu-regex.h
" server.h
#DEFINE MINIMUM_MAXIMUM_LINES
#IFNDEF MAXPATHLEN
#DEFINE MAXPATHLEN
#ENDIF
#DEFINE NAME_TABLE_SIZE
#IFNDEF EXIT_SUCCESS
#DEFINE EXIT_SUCCESS
#ENDIF
#IFNDEF EXIT_FAILURE
#DEFINE EXIT_FAILURE
#ENDIF
#DEFINE tSCC
#DEFINE tCC
#DEFINE tSC
#DEFINE FAILURE
#DEFINE SUCCESS
#DEFINE PROBLEM
#DEFINE SUCCEEDED
#DEFINE SUCCESSFUL
#DEFINE FAILED
#DEFINE HADGLITCH
#DEFINE NUL
#DEFINE FD_MACH_ONLY
#DEFINE FD_MACH_IFNOT
#DEFINE FD_SHELL_SCRIPT
#DEFINE FD_SKIP_TEST
" fixincl.x
#IFNDEF NO_BOGOSITY_LIMITS
#DEFINE BOGUS_LIMIT
#ENDIF
#IFNDEF NO_BOGOSITY_LIMITS
#IFDEF DEBUG
#ENDIF
#ELSE
#ENDIF
#DEFINE S_IRALL
#IFDEF DEBUG
#ENDIF
#IFDEF LATER
#ENDIF
#IFNDEF NO_BOGOSITY
#ENDIF
#IFDEF DEBUG_TEST
#ENDIF
#IFDEF DEBUG_TEST
#ENDIF
#IFDEF DEBUG_TEST
#ENDIF
#IFDEF DEBUG_TEST
#ENDIF
__E__O__F__
#IF
#PRAGMA alloca
#ENDIF
#UNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFNDEF PARAMS
#IF
#DEFINE PARAMS
#ELSE
#DEFINE PARAMS
#ENDIF
#ENDIF
#IF
< stddef.h
#ELSE
< sys/types.h
#ENDIF
#IF
< wchar.h
< wctype.h
#ENDIF
#IFDEF ENABLE_NLS
< libintl.h
#ELSE
#DEFINE gettext
#ENDIF
#IFNDEF gettext_noop
#DEFINE gettext_noop
#ENDIF
#IFDEF emacs
" lisp.h
" buffer.h
" syntax.h
#ELSE
" auto-host.h
#IF
#DEFINE const
#ENDIF
#IF
#DEFINE volatile
#ENDIF
#UNDEF REL_ALLOC
#IF
< stdlib.h
#ELSE
#ENDIF
#IFDEF INHIBIT_STRING_HEADER
#IF
#IF
#UNDEF INHIBIT_STRING_HEADER
#ENDIF
#ENDIF
#ENDIF
#IFNDEF INHIBIT_STRING_HEADER
#IF
< string.h
#IFNDEF bzero
#IFNDEF _LIBC
#DEFINE bzero
#ELSE
#DEFINE bzero
#ENDIF
#ENDIF
#ELSE
< strings.h
#IFNDEF memcmp
#DEFINE memcmp
#ENDIF
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#ENDIF
#IFNDEF Sword
#DEFINE Sword
#ENDIF
#IFDEF SWITCH_ENUM_BUG
#DEFINE SWITCH_ENUM_CAST
#ELSE
#DEFINE SWITCH_ENUM_CAST
#ENDIF
#DEFINE CHAR_SET_SIZE
#IFNDEF _REGEX_RE_COMP
#DEFINE _REGEX_RE_COMP
#ENDIF
#IFDEF SYNTAX_TABLE
#ELSE
#ENDIF
#DEFINE SYNTAX
#ENDIF
" gnu-regex.h
< ctype.h
#UNDEF ISASCII
#IF
#DEFINE ISASCII
#ELSE
#DEFINE ISASCII
#ENDIF
#IFDEF isblank
#DEFINE ISBLANK
#ELSE
#DEFINE ISBLANK
#ENDIF
#IFDEF isgraph
#DEFINE ISGRAPH
#ELSE
#DEFINE ISGRAPH
#ENDIF
#UNDEF ISPRINT
#DEFINE ISPRINT
#DEFINE ISDIGIT
#DEFINE ISALNUM
#DEFINE ISALPHA
#DEFINE ISCNTRL
#DEFINE ISLOWER
#DEFINE ISPUNCT
#DEFINE ISSPACE
#DEFINE ISUPPER
#DEFINE ISXDIGIT
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#UNDEF SIGN_EXTEND_CHAR
#IF
#DEFINE SIGN_EXTEND_CHAR
#ELSE
#DEFINE SIGN_EXTEND_CHAR
#ENDIF
#IFDEF REGEX_MALLOC
#DEFINE REGEX_ALLOCATE
#DEFINE REGEX_REALLOCATE
#DEFINE REGEX_FREE
#ELSE
#IFNDEF alloca
#IFDEF __GNUC__
#DEFINE alloca
#ELSE
#IF
< alloca.h
#ENDIF
#ENDIF
#ENDIF
#DEFINE REGEX_ALLOCATE
#DEFINE REGEX_REALLOCATE
#DEFINE REGEX_FREE
#ENDIF
#IF
#DEFINE REGEX_ALLOCATE_STACK
#DEFINE REGEX_REALLOCATE_STACK
#DEFINE REGEX_FREE_STACK
#ELSE
#IFDEF REGEX_MALLOC
#DEFINE REGEX_ALLOCATE_STACK
#DEFINE REGEX_REALLOCATE_STACK
#DEFINE REGEX_FREE_STACK
#ELSE
#DEFINE REGEX_ALLOCATE_STACK
#DEFINE REGEX_REALLOCATE_STACK
#DEFINE REGEX_FREE_STACK
#ENDIF
#ENDIF
#DEFINE FIRST_STRING_P
#DEFINE TALLOC
#DEFINE RETALLOC
#DEFINE RETALLOC_IF
#DEFINE REGEX_TALLOC
#DEFINE BYTEWIDTH
#DEFINE STREQ
#UNDEF MAX
#UNDEF MIN
#DEFINE MAX
#DEFINE MIN
#DEFINE false
#DEFINE true
#IFDEF emacs
#ENDIF
#DEFINE STORE_NUMBER
#DEFINE STORE_NUMBER_AND_INCR
#DEFINE EXTRACT_NUMBER
#IFDEF DEBUG
#IFNDEF EXTRACT_MACROS
#UNDEF EXTRACT_NUMBER
#DEFINE EXTRACT_NUMBER
#ENDIF
#ENDIF
#DEFINE EXTRACT_NUMBER_AND_INCR
#IFDEF DEBUG
#IFNDEF EXTRACT_MACROS
#UNDEF EXTRACT_NUMBER_AND_INCR
#DEFINE EXTRACT_NUMBER_AND_INCR
#ENDIF
#ENDIF
#IFDEF DEBUG
< stdio.h
< assert.h
#DEFINE DEBUG_STATEMENT
#DEFINE DEBUG_PRINT1
#DEFINE DEBUG_PRINT2
#DEFINE DEBUG_PRINT3
#DEFINE DEBUG_PRINT4
#DEFINE DEBUG_PRINT_COMPILED_PATTERN
#DEFINE DEBUG_PRINT_DOUBLE_STRING
#IFDEF emacs
#ENDIF
#ELSE
#UNDEF assert
#DEFINE assert
#DEFINE DEBUG_STATEMENT
#DEFINE DEBUG_PRINT1
#DEFINE DEBUG_PRINT2
#DEFINE DEBUG_PRINT3
#DEFINE DEBUG_PRINT4
#DEFINE DEBUG_PRINT_COMPILED_PATTERN
#DEFINE DEBUG_PRINT_DOUBLE_STRING
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF _LIBC
#ENDIF
#DEFINE MATCH_MAY_ALLOCATE
#IFDEF __GNUC__
#UNDEF C_ALLOCA
#ENDIF
#IF
#UNDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFNDEF INIT_FAILURE_ALLOC
#DEFINE INIT_FAILURE_ALLOC
#ENDIF
#IFDEF INT_IS_16BIT
#IF
#ELSE
#ENDIF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#DEFINE FAIL_STACK_EMPTY
#DEFINE FAIL_STACK_PTR_EMPTY
#DEFINE FAIL_STACK_FULL
#IFDEF MATCH_MAY_ALLOCATE
#DEFINE INIT_FAIL_STACK
#DEFINE RESET_FAIL_STACK
#ELSE
#DEFINE INIT_FAIL_STACK
#DEFINE RESET_FAIL_STACK
#ENDIF
#DEFINE DOUBLE_FAIL_STACK
#DEFINE PUSH_PATTERN_OP
#DEFINE PUSH_FAILURE_POINTER
#DEFINE PUSH_FAILURE_INT
#DEFINE PUSH_FAILURE_ELT
#DEFINE POP_FAILURE_POINTER
#DEFINE POP_FAILURE_INT
#DEFINE POP_FAILURE_ELT
#IFDEF DEBUG
#DEFINE DEBUG_PUSH
#DEFINE DEBUG_POP
#ELSE
#DEFINE DEBUG_PUSH
#DEFINE DEBUG_POP
#ENDIF
#DEFINE PUSH_FAILURE_POINT
#DEFINE NUM_REG_ITEMS
#IFDEF DEBUG
#DEFINE NUM_NONREG_ITEMS
#ELSE
#DEFINE NUM_NONREG_ITEMS
#ENDIF
#DEFINE MAX_FAILURE_ITEMS
#DEFINE NUM_FAILURE_ITEMS
#DEFINE REMAINING_AVAIL_SLOTS
#DEFINE POP_FAILURE_POINT
#DEFINE MATCH_NULL_UNSET_VALUE
#DEFINE REG_MATCH_NULL_STRING_P
#DEFINE IS_ACTIVE
#DEFINE MATCHED_SOMETHING
#DEFINE EVER_MATCHED_SOMETHING
#DEFINE SET_REGS_MATCHED
#DEFINE REG_UNSET_VALUE
#DEFINE REG_UNSET
#IFNDEF PATFETCH
#DEFINE PATFETCH
#ENDIF
#DEFINE PATFETCH_RAW
#DEFINE PATUNFETCH
#IFNDEF TRANSLATE
#DEFINE TRANSLATE
#ENDIF
#DEFINE INIT_BUF_SIZE
#DEFINE GET_BUFFER_SPACE
#DEFINE BUF_PUSH
#DEFINE BUF_PUSH_2
#DEFINE BUF_PUSH_3
#DEFINE STORE_JUMP
#DEFINE STORE_JUMP2
#DEFINE INSERT_JUMP
#DEFINE INSERT_JUMP2
#IF
#DEFINE MAX_BUF_SIZE
#DEFINE REALLOC
#ELSE
#DEFINE MAX_BUF_SIZE
#DEFINE REALLOC
#ENDIF
#DEFINE EXTEND_BUFFER
#DEFINE MAX_REGNUM
#DEFINE INIT_COMPILE_STACK_SIZE
#DEFINE COMPILE_STACK_EMPTY
#DEFINE COMPILE_STACK_FULL
#DEFINE COMPILE_STACK_TOP
#DEFINE SET_LIST_BIT
#DEFINE GET_UNSIGNED_NUMBER
#IF
#IFDEF CHARCLASS_NAME_MAX
#DEFINE CHAR_CLASS_MAX_LENGTH
#ELSE
#DEFINE CHAR_CLASS_MAX_LENGTH
#ENDIF
#IFDEF _LIBC
#DEFINE IS_CHAR_CLASS
#ELSE
#DEFINE IS_CHAR_CLASS
#ENDIF
#ELSE
#DEFINE CHAR_CLASS_MAX_LENGTH
#DEFINE IS_CHAR_CLASS
#ENDIF
#IFNDEF MATCH_MAY_ALLOCATE
#ENDIF
#DEFINE FREE_STACK_RETURN
#IFDEF DEBUG
#ENDIF
#IF
#ENDIF
#IF
#IFDEF _LIBC
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF emacs
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFNDEF MATCH_MAY_ALLOCATE
#IFDEF emacs
#ELSE
#ENDIF
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFNDEF REGEX_MALLOC
#ENDIF
#IFDEF REL_ALLOC
#ENDIF
#IFDEF emacs
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF emacs
#ENDIF
#IFNDEF REGEX_MALLOC
#IFDEF C_ALLOCA
#ENDIF
#ENDIF
#IFDEF _LIBC
#ENDIF
#DEFINE POINTER_TO_OFFSET
#DEFINE MATCHING_IN_FIRST_STRING
#DEFINE PREFETCH
#DEFINE AT_STRINGS_BEG
#DEFINE AT_STRINGS_END
#DEFINE WORDCHAR_P
#IF
#DEFINE AT_WORD_BOUNDARY
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#DEFINE FREE_VAR
#DEFINE FREE_VARIABLES
#ELSE
#DEFINE FREE_VARIABLES
#ENDIF
#DEFINE NO_HIGHEST_ACTIVE_REG
#DEFINE NO_LOWEST_ACTIVE_REG
#IFNDEF emacs
#IFNDEF REGEX_MALLOC
#IFDEF C_ALLOCA
#ENDIF
#ENDIF
#IFDEF _LIBC
#ENDIF
#ENDIF
#IFNDEF REGEX_MALLOC
#IFDEF C_ALLOCA
#ENDIF
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF REL_ALLOC
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF MATCH_MAY_ALLOCATE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IFDEF _LIBC
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF emacs
#ELSE
#ENDIF
#IFDEF emacs
#ENDIF
#IFDEF _LIBC
#ENDIF
#IF
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#ENDIF
#ENDIF
#IFNDEF emacs
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#ENDIF
#ENDIF
__E__O__F__
" auto-host.h
" gansidecl.h
" system.h
" server.h
#IFNDEF MAXPATHLEN
#DEFINE MAXPATHLEN
#ENDIF
#IFNDEF STDIN_FILENO
#DEFINE STDIN_FILENO
#ENDIF
#IFNDEF STDOUT_FILENO
#DEFINE STDOUT_FILENO
#ENDIF
#IFDEF DEBUG
#DEFINE STATIC
#ELSE
#DEFINE STATIC
#ENDIF
#IFNDEF tSCC
#DEFINE tSCC
#ENDIF
#IFNDEF NUL
#DEFINE NUL
#ENDIF
#IFDEF DEBUG_PRINT
#ENDIF
#IFDEF DEBUG_PRINT
#ENDIF
__E__O__F__
" auto-host.h
" gansidecl.h
" system.h
< signal.h
" server.h
#IFNDEF MAXPATHLEN
#DEFINE MAXPATHLEN
#ENDIF
#IFNDEF STDIN_FILENO
#DEFINE STDIN_FILENO
#ENDIF
#IFNDEF STDOUT_FILENO
#DEFINE STDOUT_FILENO
#ENDIF
#IFDEF DEBUG
#DEFINE STATIC
#ELSE
#DEFINE STATIC
#ENDIF
#IFNDEF tSCC
#DEFINE tSCC
#ENDIF
#IFNDEF NUL
#DEFINE NUL
#ENDIF
#IF
#DEFINE volatile
#ENDIF
#IFDEF DEBUG
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
< stdlib.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ELSE
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
#DEFINE BINDTEXTDOMAIN
#IFNDEF strdup
#DEFINE strdup
#ENDIF
#ELSE
#DEFINE BINDTEXTDOMAIN
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< stdio.h
#IFDEF STDC_HEADERS
< stdlib.h
< string.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ENDIF
#ENDIF
#IFDEF HAVE_NL_TYPES_H
< nl_types.h
#ENDIF
" libgettext.h
#IFDEF _LIBC
#DEFINE HAVE_LOCALE_NULL
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#ENDIF
#UNDEF gettext
#IF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< sys/types.h
#IFDEF __GNUC__
#DEFINE alloca
#DEFINE HAVE_ALLOCA
#ELSE
#IF
< alloca.h
#ELSE
#IFDEF _AIX
#PRAGMA alloca
#ELSE
#IFNDEF alloca
#ENDIF
#ENDIF
#ENDIF
#ENDIF
< errno.h
#IFNDEF errno
#ENDIF
#IFNDEF __set_errno
#DEFINE __set_errno
#ENDIF
#IF
< stdlib.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ELSE
#ENDIF
#ENDIF
#IF
#IFNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#ENDIF
< string.h
#ELSE
< strings.h
#ENDIF
#IF
#IFNDEF strchr
#DEFINE strchr
#ENDIF
#ENDIF
#IF
< unistd.h
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
" hash-string.h
#IFDEF _LIBC
#DEFINE getcwd
#IFNDEF stpcpy
#DEFINE stpcpy
#ENDIF
#ELSE
#IF
#DEFINE getcwd
#ELSE
#ENDIF
#IFNDEF HAVE_STPCPY
#ENDIF
#ENDIF
#DEFINE PATH_INCR
#IF
< limits.h
#ENDIF
#IFNDEF _POSIX_PATH_MAX
#DEFINE _POSIX_PATH_MAX
#ENDIF
#IF
#DEFINE PATH_MAX
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
#DEFINE PATH_MAX
#ENDIF
#IFNDEF PATH_MAX
#DEFINE PATH_MAX
#ENDIF
#IFDEF _LIBC
#DEFINE HAVE_LOCALE_NULL
#ENDIF
#IFDEF HAVE_ALLOCA
#DEFINE ADD_BLOCK
#DEFINE FREE_BLOCKS
#ELSE
#DEFINE ADD_BLOCK
#DEFINE FREE_BLOCKS
#UNDEF alloca
#DEFINE alloca
#ENDIF
#IFDEF _LIBC
#DEFINE DCGETTEXT
#ELSE
#DEFINE DCGETTEXT
#ENDIF
#IFNDEF HAVE_ALLOCA
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF LC_COLLATE
#ENDIF
#IFDEF LC_CTYPE
#ENDIF
#IFDEF LC_MONETARY
#ENDIF
#IFDEF LC_NUMERIC
#ENDIF
#IFDEF LC_TIME
#ENDIF
#IFDEF LC_MESSAGES
#ENDIF
#IFDEF LC_RESPONSE
#ENDIF
#IFDEF LC_ALL
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
< locale.h
#ENDIF
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
#IFDEF _LIBC
#DEFINE DGETTEXT
#DEFINE DCGETTEXT
#ELSE
#DEFINE DGETTEXT
#DEFINE DCGETTEXT
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< sys/types.h
" loadinfo.h
#IFNDEF NULL
#IF
#DEFINE NULL
#ELSE
#DEFINE NULL
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< ctype.h
< errno.h
< stdio.h
< sys/types.h
#IF
< stdlib.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ELSE
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IF
#IFNDEF strchr
#DEFINE strchr
#ENDIF
#ENDIF
#IF
< unistd.h
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFDEF _LIBC
#DEFINE __need_NULL
< stddef.h
#ELSE
#IFDEF STDC_HEADERS
< stdlib.h
#ELSE
#IFDEF HAVE_STRING_H
< string.h
#ELSE
#DEFINE NULL
#ENDIF
#ENDIF
#ENDIF
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
#IFDEF _LIBC
#DEFINE GETTEXT
#DEFINE DGETTEXT
#ELSE
#DEFINE GETTEXT
#DEFINE DGETTEXT
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" libgettext.h
#UNDEF gettext
#UNDEF dgettext
#UNDEF dcgettext
#UNDEF textdomain
#UNDEF bindtextdomain
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
#IFNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#ENDIF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IF
#IFNDEF strchr
#DEFINE strchr
#ENDIF
#ENDIF
#IF
< argz.h
#ENDIF
< ctype.h
< sys/types.h
#IF
< stdlib.h
#ENDIF
" loadinfo.h
#IFNDEF NULL
#IF
#DEFINE NULL
#ELSE
#DEFINE NULL
#ENDIF
#ENDIF
#IFDEF _LIBC
#IFNDEF stpcpy
#DEFINE stpcpy
#ENDIF
#ELSE
#IFNDEF HAVE_STPCPY
#ENDIF
#ENDIF
#IF
#UNDEF __argz_count
#DEFINE __argz_count
#ENDIF
#IF
#UNDEF __argz_stringify
#DEFINE __argz_stringify
#ENDIF
#IF
#UNDEF __argz_next
#DEFINE __argz_next
#ENDIF
#IF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< fcntl.h
< sys/types.h
< sys/stat.h
#IF
< stdlib.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< sys/mman.h
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
#DEFINE open
#DEFINE close
#DEFINE read
#DEFINE mmap
#DEFINE munmap
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< ctype.h
< stdio.h
< sys/types.h
#IFDEF __GNUC__
#DEFINE alloca
#DEFINE HAVE_ALLOCA
#ELSE
#IF
< alloca.h
#ELSE
#IFDEF _AIX
#PRAGMA alloca
#ELSE
#IFNDEF alloca
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IF
< stdlib.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ELSE
#ENDIF
#ENDIF
#IF
#IFNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#ENDIF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IF
#IFNDEF strchr
#DEFINE strchr
#ENDIF
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
#DEFINE strcasecmp
#DEFINE mempcpy
#DEFINE HAVE_MEMPCPY
< bits/libc-lock.h
#ENDIF
#IFDEF HAVE_ALLOCA
#DEFINE ADD_BLOCK
#DEFINE FREE_BLOCKS
#ELSE
#DEFINE ADD_BLOCK
#DEFINE FREE_BLOCKS
#UNDEF alloca
#DEFINE alloca
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFNDEF HAVE_ALLOCA
#ENDIF
#IFDEF HAVE_MEMPCPY
#ELSE
#ENDIF
#IFDEF _LIBC
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
#IFDEF _LIBC
#DEFINE TEXTDOMAIN
#IFNDEF strdup
#DEFINE strdup
#ENDIF
#ELSE
#DEFINE TEXTDOMAIN
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
" config.h
" system.h
" gansidecl.h
" buffer.h
__E__O__F__
" config.h
" system.h
" tree.h
" java-tree.h
" toplev.h
#DEFINE DECL_BIT_INDEX
#DEFINE COPYN
#DEFINE COPY
#DEFINE SET_ALL
#DEFINE CLEAR_ALL
#DEFINE INTERSECTN
#DEFINE UNION
#DEFINE UNIONN
#DEFINE INTERSECT
#DEFINE WORD_SIZE
#IF
#DEFINE ALLOC_WORDS
#DEFINE FREE_WORDS
#ELSE
#DEFINE ALLOC_WORDS
#DEFINE FREE_WORDS
#ENDIF
#DEFINE SET_P
#DEFINE CLEAR_BIT
#DEFINE SET_BIT
#DEFINE WORDS_NEEDED
#DEFINE BEGIN_ALTERNATIVES
#DEFINE END_ALTERNATIVES
#IF
#ELSE
#ENDIF
#IFDEF ENABLE_CHECKING
#ENDIF
#IFDEF ENABLE_CHECKING
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" rtl.h
" flags.h
" java-tree.h
" jcf.h
" obstack.h
" toplev.h
" output.h
" parse.h
#IFDEF __GNUC__
#ELSE
#ENDIF
#IFDEF JAVA_USE_HANDLES
#ELSE
#ENDIF
#IFDEF JAVA_USE_HANDLES
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE ACC_TRANSLATED
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF NO_DOLLAR_IN_LABEL
#ELSE
#IFNDEF NO_DOT_IN_LABEL
#ELSE
#ENDIF
#ENDIF
#IFDEF JAVA_USE_HANDLES
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" jcf.h
" tree.h
" java-tree.h
" toplev.h
#DEFINE PUT1
#DEFINE PUT2
#DEFINE PUT4
#DEFINE PUTN
__E__O__F__
" config.h
" system.h
" tree.h
" java-tree.h
" jcf.h
" toplev.h
" except.h
#IFNDEF INT_TYPE_SIZE
#DEFINE INT_TYPE_SIZE
#ENDIF
#DEFINE NULL_BINDING_LEVEL
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE jint_type
#DEFINE jint_ptr_type
#DEFINE instn_ptr_type_node
#DEFINE lineNumbers_ptr_type_node
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" real.h
" rtl.h
" java-tree.h
" javaop.h
" java-opcodes.h
" jcf.h
" except.h
" java-except.h
" eh-common.h
" toplev.h
__E__O__F__
" config.h
" system.h
" tree.h
" real.h
" rtl.h
" flags.h
" expr.h
" java-tree.h
" javaop.h
" java-opcodes.h
" jcf.h
" java-except.h
" parse.h
" toplev.h
" except.h
#IF
#ENDIF
#IFDEF JAVA_USE_HANDLES
#ENDIF
#DEFINE JAVA_ARRAY_LENGTH_OFFSET
#IF
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IFDEF JAVA_USE_HANDLES
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
#IF
#ENDIF
#UNDEF RET
#UNDEF AND
#UNDEF PTR
#DEFINE BCODE
#DEFINE BYTE_type_node
#DEFINE SHORT_type_node
#DEFINE INT_type_node
#DEFINE LONG_type_node
#DEFINE CHAR_type_node
#DEFINE PTR_type_node
#DEFINE FLOAT_type_node
#DEFINE DOUBLE_type_node
#DEFINE VOID_type_node
#DEFINE CONST_INDEX_1
#DEFINE CONST_INDEX_2
#DEFINE VAR_INDEX_1
#DEFINE VAR_INDEX_2
#DEFINE CHECK_PC_IN_RANGE
#DEFINE JAVAOP
#DEFINE NOTE_LABEL
#DEFINE PRE_PUSHC
#DEFINE PRE_LOAD
#DEFINE PRE_STORE
#DEFINE PRE_STACK
#DEFINE PRE_UNOP
#DEFINE PRE_BINOP
#DEFINE PRE_CONVERT
#DEFINE PRE_CONVERT2
#DEFINE PRE_SPECIAL
#DEFINE PRE_SPECIAL_IINC
#DEFINE PRE_SPECIAL_ENTER
#DEFINE PRE_SPECIAL_EXIT
#DEFINE PRE_SPECIAL_THROW
#DEFINE PRE_SPECIAL_BREAK
#DEFINE PRE_SPECIAL_WIDE
#DEFINE PRE_IMPL
#DEFINE PRE_MONITOR
#DEFINE PRE_RETURN
#DEFINE PRE_ARRAY
#DEFINE PRE_ARRAY_LOAD
#DEFINE PRE_ARRAY_STORE
#DEFINE PRE_ARRAY_LENGTH
#DEFINE PRE_ARRAY_NEW
#DEFINE PRE_ARRAY_NEW_NUM
#DEFINE PRE_ARRAY_NEW_PTR
#DEFINE PRE_ARRAY_NEW_MULTI
#DEFINE PRE_TEST
#DEFINE PRE_COND
#DEFINE PRE_BRANCH
#DEFINE PRE_JSR
#DEFINE PRE_RET
#DEFINE PRE_SWITCH
#DEFINE PRE_LOOKUP_SWITCH
#DEFINE PRE_TABLE_SWITCH
#DEFINE PRE_FIELD
#DEFINE PRE_OBJECT
#DEFINE PRE_INVOKE
" javaop.def
#UNDEF JAVAOP
total_cases=0
#DEFINE JAVAOP
#DEFINE RET
#DEFINE JSR
#DEFINE PUSHC
#DEFINE LOAD_INTERNAL
#DEFINE LOAD
#DEFINE RETURN
#DEFINE REM_EXPR
#DEFINE BINOP
#DEFINE FIELD
#DEFINE TEST
#DEFINE COND
#DEFINE BRANCH
#DEFINE BRANCH_GOTO
#DEFINE BRANCH_CALL
#IF
#DEFINE BRANCH_RETURN
#ENDIF
#DEFINE NOT_IMPL
#DEFINE NOT_IMPL1
#DEFINE BRANCH_RETURN
#DEFINE STACK
#DEFINE STACK_POP
#DEFINE STACK_SWAP
#DEFINE STACK_DUP
#DEFINE STACK_DUPx1
#DEFINE STACK_DUPx2
#DEFINE SWITCH
#DEFINE LOOKUP_SWITCH
#DEFINE TABLE_SWITCH
#DEFINE INVOKE
#DEFINE OBJECT
#DEFINE ARRAY
#DEFINE ARRAY_LOAD
#DEFINE ARRAY_STORE
#DEFINE ARRAY_LENGTH
#DEFINE ARRAY_NEW
#DEFINE ARRAY_NEW_PTR
#DEFINE ARRAY_NEW_NUM
#DEFINE ARRAY_NEW_MULTI
#DEFINE UNOP
#DEFINE CONVERT2
#DEFINE CONVERT
#DEFINE STORE_INTERNAL
#DEFINE STORE
#DEFINE SPECIAL
#DEFINE SPECIAL_ENTER
#DEFINE SPECIAL_EXIT
#DEFINE MONITOR_OPERATION
#DEFINE SPECIAL_IINC
#DEFINE SPECIAL_WIDE
#DEFINE SPECIAL_THROW
#DEFINE SPECIAL_BREAK
#DEFINE IMPL
" javaop.def
#UNDEF JAVAOP
total_cases=0
__E__O__F__
" config.h
" system.h
< math.h
" jcf.h
" tree.h
" java-tree.h
" java-opcodes.h
#DEFINE ACC_VISIBILITY
#DEFINE METHOD_IS_FINAL
#DEFINE HANDLE_START_FIELD
#DEFINE HANDLE_END_FIELD
#DEFINE HANDLE_CONSTANTVALUE
#DEFINE HANDLE_METHOD
#DEFINE HANDLE_CODE_ATTRIBUTE
#DEFINE HANDLE_END_METHOD
" jcf-reader.c
#DEFINE F_NAN_MASK
#DEFINE D_NAN_MASK
type_specifier overflow: 105
#DEFINE JAVALANG
#DEFINE JAVAIO
#DEFINE JAVAUTIL
__E__O__F__
" config.h
" system.h
< assert.h
" jcf.h
#DEFINE MAX_OUTPUT_COLUMNS
__E__O__F__
" config.h
" system.h
" jcf.h
" tree.h
" java-tree.h
#DEFINE PRINT_SIGNATURE_RESULT_ONLY
#DEFINE PRINT_SIGNATURE_ARGS_ONLY
#DEFINE HANDLE_MAGIC
#DEFINE HANDLE_START_CONSTANT_POOL
#DEFINE HANDLE_SOURCEFILE
#DEFINE HANDLE_CLASS_INFO
#DEFINE IGNORE_ATTRIBUTE
#DEFINE HANDLE_CLASS_INTERFACE
#DEFINE HANDLE_START_FIELDS
#DEFINE HANDLE_START_FIELD
#DEFINE HANDLE_END_FIELD
#DEFINE HANDLE_START_METHODS
#DEFINE HANDLE_END_METHODS
#DEFINE HANDLE_METHOD
#DEFINE COMMON_HANDLE_ATTRIBUTE
#DEFINE HANDLE_CONSTANTVALUE
#DEFINE HANDLE_CODE_ATTRIBUTE
#DEFINE HANDLE_EXCEPTION_TABLE
#DEFINE HANDLE_EXCEPTIONS_ATTRIBUTE
#DEFINE HANDLE_LOCALVARIABLETABLE_ATTRIBUTE
#DEFINE HANDLE_LINENUMBERTABLE_ATTRIBUTE
#DEFINE PROCESS_OTHER_ATTRIBUTE
#DEFINE START_FINAL_ATTRIBUTES
" javaop.h
" jcf-reader.c
#IF
#ELSE
#ENDIF
#UNDEF AND
#UNDEF PTR
#DEFINE BCODE
#DEFINE JAVAOP
#DEFINE CONST_INDEX_1
#DEFINE CONST_INDEX_2
#DEFINE VAR_INDEX_1
#DEFINE VAR_INDEX_2
#DEFINE CHECK_PC_IN_RANGE
#DEFINE PUSHC
#DEFINE LOAD
#DEFINE STORE
#DEFINE STACK
#DEFINE UNOP
#DEFINE BINOP
#DEFINE CONVERT
#DEFINE CONVERT2
#DEFINE RETURN
#DEFINE UNKNOWN
#DEFINE FIELD
#DEFINE INVOKE
#DEFINE OBJECT
#DEFINE ARRAY
#DEFINE ARRAY_LOAD
#DEFINE ARRAY_STORE
#DEFINE ARRAY_LENGTH
#DEFINE ARRAY_NEW
#DEFINE ARRAY_NEW_NUM
#DEFINE ARRAY_NEW_PTR
#DEFINE ARRAY_NEW_MULTI
#DEFINE TEST
#DEFINE BRANCH
#DEFINE JSR
#UNDEF RET
#DEFINE RET
#DEFINE SWITCH
#DEFINE LOOKUP_SWITCH
#DEFINE TABLE_SWITCH
#DEFINE SPECIAL
#DEFINE SPECIAL_IINC
#DEFINE SPECIAL_WIDE
#DEFINE SPECIAL_EXIT
#DEFINE SPECIAL_ENTER
#DEFINE SPECIAL_BREAK
#DEFINE SPECIAL_THROW
#DEFINE IMPL
#DEFINE COND
" javaop.def
total_cases=0
__E__O__F__
" config.h
" system.h
" jcf.h
" tree.h
" java-tree.h
#IFNDEF O_BINARY
#DEFINE O_BINARY
#ENDIF
" zipfile.h
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE WRITE_BUF_SIZE
__E__O__F__
" config.h
" system.h
" tree.h
" obstack.h
" flags.h
" java-except.h
" input.h
" java-tree.h
" toplev.h
" parse.h
#DEFINE JPOOL_UTF
#DEFINE JPOOL_UTF_LENGTH
#DEFINE JPOOL_UTF_DATA
#DEFINE HANDLE_CONSTANT_Utf8
" jcf.h
#DEFINE HANDLE_SOURCEFILE
#DEFINE HANDLE_CLASS_INFO
#DEFINE HANDLE_CLASS_INTERFACE
#DEFINE HANDLE_START_FIELD
#DEFINE HANDLE_END_FIELDS
#DEFINE HANDLE_CONSTANTVALUE
#DEFINE HANDLE_METHOD
#DEFINE HANDLE_END_METHODS
#DEFINE HANDLE_CODE_ATTRIBUTE
#DEFINE HANDLE_LOCALVARIABLETABLE_ATTRIBUTE
#DEFINE HANDLE_LINENUMBERTABLE_ATTRIBUTE
#DEFINE HANDLE_EXCEPTIONS_ATTRIBUTE
" jcf-reader.c
#IF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#IFDEF REAL_ARITHMETIC
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF IO_BUFFER_SIZE
#ENDIF
__E__O__F__
" config.h
" system.h
" jcf.h
#IFNDEF GET_ENV_PATH_LIST
#DEFINE GET_ENV_PATH_LIST
#ENDIF
#IFNDEF PATH_SEPARATOR
#DEFINE PATH_SEPARATOR
#ENDIF
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#DEFINE FLAG_SYSTEM
#DEFINE FLAG_ZIP
__E__O__F__
" jcf.h
" zipfile.h
#IFDEF IGNORE_ATTRIBUTE
#ENDIF
#IFDEF HANDLE_SOURCEFILE
#ENDIF
#IFDEF HANDLE_CONSTANTVALUE
#ENDIF
#IFDEF HANDLE_CODE_ATTRIBUTE
#IFDEF HANDLE_EXCEPTION_TABLE
#ENDIF
#ENDIF
#IFDEF HANDLE_EXCEPTIONS_ATTRIBUTE
#ENDIF
#IFDEF HANDLE_LINENUMBERTABLE_ATTRIBUTE
#ENDIF
#IFDEF HANDLE_LOCALVARIABLETABLE_ATTRIBUTE
#ENDIF
#IFDEF PROCESS_OTHER_ATTRIBUTE
#ELSE
#ENDIF
#IFDEF HANDLE_MAGIC
#ENDIF
#IFDEF HANDLE_START_CONSTANT_POOL
#ENDIF
#IFDEF HANDLE_CONSTANT_Utf8
#ELSE
#ENDIF
#IFDEF HANDLE_CLASS_INFO
#ENDIF
#IFDEF HANDLE_CLASS_INTERFACE
#ENDIF
#IFDEF HANDLE_START_FIELDS
#ENDIF
#IFDEF HANDLE_START_FIELD
#ENDIF
#IFDEF HANDLE_END_FIELD
#ENDIF
#IFDEF HANDLE_END_FIELDS
#ENDIF
#IFDEF HANDLE_METHOD
#ENDIF
#IFDEF HANDLE_END_METHOD
#ENDIF
#IFDEF HANDLE_START_METHODS
#ENDIF
#IFDEF HANDLE_END_METHODS
#ENDIF
#IFDEF START_FINAL_ATTRIBUTES
#ENDIF
__E__O__F__
" config.h
" system.h
" jcf.h
" tree.h
" java-tree.h
" obstack.h
#UNDEF AND
" rtl.h
" flags.h
" java-opcodes.h
" parse.h
" buffer.h
" toplev.h
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#DEFINE RESERVE
#DEFINE OP1
#DEFINE OP2
#DEFINE OP4
#DEFINE NOTE_PUSH
#DEFINE NOTE_POP
#DEFINE PENDING_CLEANUP_PC
#DEFINE PENDING_EXIT_PC
#DEFINE UNDEFINED_PC
#DEFINE SWITCH_ALIGN_RELOC
#DEFINE BLOCK_START_RELOC
#IFDEF ENABLE_CHECKING
#ELSE
#DEFINE CHECK_PUT
#ENDIF
#DEFINE PUT1
#DEFINE PUT2
#DEFINE PUT4
#DEFINE PUTN
#IFDEF ENABLE_CHECKING
#ELSE
#DEFINE CHECK_OP
#ENDIF
#DEFINE DECL_LOCAL_INDEX
#DEFINE localvar_buffer
#DEFINE localvar_max
#DEFINE STACK_TARGET
#DEFINE IGNORE_TARGET
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" obstack.h
#DEFINE JC1_LITE
" parse.h
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF OBSTACK_CHUNK_SIZE
#DEFINE OBSTACK_CHUNK_SIZE
#ENDIF
#IFNDEF OBSTACK_CHUNK_ALLOC
#DEFINE OBSTACK_CHUNK_ALLOC
#ENDIF
#IFNDEF OBSTACK_CHUNK_FREE
#DEFINE OBSTACK_CHUNK_FREE
#ENDIF
__E__O__F__
" config.h
" system.h
" obstack.h
" gansidecl.h
" jcf.h
" tree.h
" java-tree.h
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF OBSTACK_CHUNK_SIZE
#DEFINE OBSTACK_CHUNK_SIZE
#ENDIF
#IFNDEF OBSTACK_CHUNK_ALLOC
#DEFINE OBSTACK_CHUNK_ALLOC
#ENDIF
#IFNDEF OBSTACK_CHUNK_FREE
#DEFINE OBSTACK_CHUNK_FREE
#ENDIF
__E__O__F__
" config.h
" system.h
" gansidecl.h
#DEFINE SPEC_FILE
#DEFINE LANGSPEC
#DEFINE PARAM_ARG
#DEFINE JAVA_FILE_ARG
#DEFINE CLASS_FILE_ARG
#DEFINE COMBINE_INPUTS
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" input.h
" java-tree.h
" jcf.h
" toplev.h
" flags.h
" xref.h
#IFNDEF OBJECT_SUFFIX
#DEFINE OBJECT_SUFFIX
#ENDIF
#DEFINE DEFTREECODE
" java-tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" java-tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" java-tree.def
#UNDEF DEFTREECODE
#DEFINE DEPEND_SET_FILE
#DEFINE DEPEND_ENABLE
#DEFINE CLARG
#UNDEF CLARG
#DEFINE CLARG
#UNDEF CLARG
#DEFINE ARG
#UNDEF ARG
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" keyword.h
#IFNDEF JC1_LITE
#ENDIF
#IFNDEF JC1_LITE
#ENDIF
#IFNDEF JC1_LITE
#ENDIF
#DEFINE BAD_UTF8_VALUE
#IFDEF JC1_LITE
#ELSE
#ENDIF
#DEFINE TOTAL_PARTS
#IFNDEF JC1_LITE
#ENDIF
#IFNDEF JC1_LITE
#ENDIF
#IFDEF JAVA_LEX_DEBUG
#ENDIF
#IFNDEF JC1_LITE
#ENDIF
#IFNDEF JC1_LITE
#ENDIF
#IFNDEF JC1_LITE
#ENDIF
#IFNDEF JC1_LITE
#ENDIF
#IFDEF JC1_LITE
#ELSE
#ENDIF
__E__O__F__
" config.h
" system.h
" jcf.h
" tree.h
" java-tree.h
" obstack.h
" toplev.h
__E__O__F__
#DEFINE YYBISON
#DEFINE PLUS_TK
#DEFINE MINUS_TK
#DEFINE MULT_TK
#DEFINE DIV_TK
#DEFINE REM_TK
#DEFINE LS_TK
#DEFINE SRS_TK
#DEFINE ZRS_TK
#DEFINE AND_TK
#DEFINE XOR_TK
#DEFINE OR_TK
#DEFINE BOOL_AND_TK
#DEFINE BOOL_OR_TK
#DEFINE EQ_TK
#DEFINE NEQ_TK
#DEFINE GT_TK
#DEFINE GTE_TK
#DEFINE LT_TK
#DEFINE LTE_TK
#DEFINE PLUS_ASSIGN_TK
#DEFINE MINUS_ASSIGN_TK
#DEFINE MULT_ASSIGN_TK
#DEFINE DIV_ASSIGN_TK
#DEFINE REM_ASSIGN_TK
#DEFINE LS_ASSIGN_TK
#DEFINE SRS_ASSIGN_TK
#DEFINE ZRS_ASSIGN_TK
#DEFINE AND_ASSIGN_TK
#DEFINE XOR_ASSIGN_TK
#DEFINE OR_ASSIGN_TK
#DEFINE PUBLIC_TK
#DEFINE PRIVATE_TK
#DEFINE PROTECTED_TK
#DEFINE STATIC_TK
#DEFINE FINAL_TK
#DEFINE SYNCHRONIZED_TK
#DEFINE VOLATILE_TK
#DEFINE TRANSIENT_TK
#DEFINE NATIVE_TK
#DEFINE PAD_TK
#DEFINE ABSTRACT_TK
#DEFINE MODIFIER_TK
#DEFINE DECR_TK
#DEFINE INCR_TK
#DEFINE DEFAULT_TK
#DEFINE IF_TK
#DEFINE THROW_TK
#DEFINE BOOLEAN_TK
#DEFINE DO_TK
#DEFINE IMPLEMENTS_TK
#DEFINE THROWS_TK
#DEFINE BREAK_TK
#DEFINE IMPORT_TK
#DEFINE ELSE_TK
#DEFINE INSTANCEOF_TK
#DEFINE RETURN_TK
#DEFINE VOID_TK
#DEFINE CATCH_TK
#DEFINE INTERFACE_TK
#DEFINE CASE_TK
#DEFINE EXTENDS_TK
#DEFINE FINALLY_TK
#DEFINE SUPER_TK
#DEFINE WHILE_TK
#DEFINE CLASS_TK
#DEFINE SWITCH_TK
#DEFINE CONST_TK
#DEFINE TRY_TK
#DEFINE FOR_TK
#DEFINE NEW_TK
#DEFINE CONTINUE_TK
#DEFINE GOTO_TK
#DEFINE PACKAGE_TK
#DEFINE THIS_TK
#DEFINE BYTE_TK
#DEFINE SHORT_TK
#DEFINE INT_TK
#DEFINE LONG_TK
#DEFINE CHAR_TK
#DEFINE INTEGRAL_TK
#DEFINE FLOAT_TK
#DEFINE DOUBLE_TK
#DEFINE FP_TK
#DEFINE ID_TK
#DEFINE REL_QM_TK
#DEFINE REL_CL_TK
#DEFINE NOT_TK
#DEFINE NEG_TK
#DEFINE ASSIGN_ANY_TK
#DEFINE ASSIGN_TK
#DEFINE OP_TK
#DEFINE CP_TK
#DEFINE OCB_TK
#DEFINE CCB_TK
#DEFINE OSB_TK
#DEFINE CSB_TK
#DEFINE SC_TK
#DEFINE C_TK
#DEFINE DOT_TK
#DEFINE STRING_LIT_TK
#DEFINE CHAR_LIT_TK
#DEFINE INT_LIT_TK
#DEFINE FP_LIT_TK
#DEFINE TRUE_TK
#DEFINE FALSE_TK
#DEFINE BOOL_LIT_TK
#DEFINE NULL_TK
#LINE line
#DEFINE JC1_LITE
" config.h
" system.h
" obstack.h
" toplev.h
#DEFINE USE_ABSORBER
#DEFINE NEW_METHOD_DECLARATOR
" lex.h
" parse.h
#LINE line
#IFNDEF YYDEBUG
#DEFINE YYDEBUG
#ENDIF
< stdio.h
#IFNDEF __cplusplus
#IFNDEF __STDC__
#DEFINE const
#ENDIF
#ENDIF
#DEFINE YYFINAL
#DEFINE YYFLAG
#DEFINE YYNTBASE
#DEFINE YYTRANSLATE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE YYLAST
#DEFINE YYPURE
#LINE line
#IFNDEF alloca
#IFDEF __GNUC__
#DEFINE alloca
#ELSE
#IF
< alloca.h
#ELSE
#IF
< malloc.h
#ELSE
#IF
< malloc.h
#PRAGMA alloca
#ELSE
#IFDEF __hpux
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#DEFINE yyerrok
#DEFINE yyclearin
#DEFINE YYEMPTY
#DEFINE YYEOF
#DEFINE YYACCEPT
#DEFINE YYABORT
#DEFINE YYERROR
#DEFINE YYFAIL
#DEFINE YYRECOVERING
#DEFINE YYBACKUP
#DEFINE YYTERROR
#DEFINE YYERRCODE
#IFNDEF YYPURE
#DEFINE YYLEX
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ELSE
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ENDIF
#ENDIF
#IFNDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF YYINITDEPTH
#DEFINE YYINITDEPTH
#ENDIF
#IF
#UNDEF YYMAXDEPTH
#ENDIF
#IFNDEF YYMAXDEPTH
#DEFINE YYMAXDEPTH
#ENDIF
#IFDEF __GNUC__
#ENDIF
#IF
#DEFINE __yy_memcpy
#ELSE
#IFNDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#LINE line
#IFDEF YYPARSE_PARAM
#IFDEF __cplusplus
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#IFDEF YYLSP_NEEDED
#DEFINE YYPOPSTACK
#ELSE
#DEFINE YYPOPSTACK
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF yyoverflow
#IFDEF YYLSP_NEEDED
#ELSE
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#ELSE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF YYPRINT
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYERROR_VERBOSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#LINE line
" lex.c
__E__O__F__
#DEFINE YYBISON
#DEFINE yyparse
#DEFINE yylex
#DEFINE yyerror
#DEFINE yylval
#DEFINE yychar
#DEFINE yydebug
#DEFINE yynerrs
#DEFINE PLUS_TK
#DEFINE MINUS_TK
#DEFINE MULT_TK
#DEFINE DIV_TK
#DEFINE REM_TK
#DEFINE LS_TK
#DEFINE SRS_TK
#DEFINE ZRS_TK
#DEFINE AND_TK
#DEFINE XOR_TK
#DEFINE OR_TK
#DEFINE BOOL_AND_TK
#DEFINE BOOL_OR_TK
#DEFINE EQ_TK
#DEFINE NEQ_TK
#DEFINE GT_TK
#DEFINE GTE_TK
#DEFINE LT_TK
#DEFINE LTE_TK
#DEFINE PLUS_ASSIGN_TK
#DEFINE MINUS_ASSIGN_TK
#DEFINE MULT_ASSIGN_TK
#DEFINE DIV_ASSIGN_TK
#DEFINE REM_ASSIGN_TK
#DEFINE LS_ASSIGN_TK
#DEFINE SRS_ASSIGN_TK
#DEFINE ZRS_ASSIGN_TK
#DEFINE AND_ASSIGN_TK
#DEFINE XOR_ASSIGN_TK
#DEFINE OR_ASSIGN_TK
#DEFINE PUBLIC_TK
#DEFINE PRIVATE_TK
#DEFINE PROTECTED_TK
#DEFINE STATIC_TK
#DEFINE FINAL_TK
#DEFINE SYNCHRONIZED_TK
#DEFINE VOLATILE_TK
#DEFINE TRANSIENT_TK
#DEFINE NATIVE_TK
#DEFINE PAD_TK
#DEFINE ABSTRACT_TK
#DEFINE MODIFIER_TK
#DEFINE DECR_TK
#DEFINE INCR_TK
#DEFINE DEFAULT_TK
#DEFINE IF_TK
#DEFINE THROW_TK
#DEFINE BOOLEAN_TK
#DEFINE DO_TK
#DEFINE IMPLEMENTS_TK
#DEFINE THROWS_TK
#DEFINE BREAK_TK
#DEFINE IMPORT_TK
#DEFINE ELSE_TK
#DEFINE INSTANCEOF_TK
#DEFINE RETURN_TK
#DEFINE VOID_TK
#DEFINE CATCH_TK
#DEFINE INTERFACE_TK
#DEFINE CASE_TK
#DEFINE EXTENDS_TK
#DEFINE FINALLY_TK
#DEFINE SUPER_TK
#DEFINE WHILE_TK
#DEFINE CLASS_TK
#DEFINE SWITCH_TK
#DEFINE CONST_TK
#DEFINE TRY_TK
#DEFINE FOR_TK
#DEFINE NEW_TK
#DEFINE CONTINUE_TK
#DEFINE GOTO_TK
#DEFINE PACKAGE_TK
#DEFINE THIS_TK
#DEFINE BYTE_TK
#DEFINE SHORT_TK
#DEFINE INT_TK
#DEFINE LONG_TK
#DEFINE CHAR_TK
#DEFINE INTEGRAL_TK
#DEFINE FLOAT_TK
#DEFINE DOUBLE_TK
#DEFINE FP_TK
#DEFINE ID_TK
#DEFINE REL_QM_TK
#DEFINE REL_CL_TK
#DEFINE NOT_TK
#DEFINE NEG_TK
#DEFINE ASSIGN_ANY_TK
#DEFINE ASSIGN_TK
#DEFINE OP_TK
#DEFINE CP_TK
#DEFINE OCB_TK
#DEFINE CCB_TK
#DEFINE OSB_TK
#DEFINE CSB_TK
#DEFINE SC_TK
#DEFINE C_TK
#DEFINE DOT_TK
#DEFINE STRING_LIT_TK
#DEFINE CHAR_LIT_TK
#DEFINE INT_LIT_TK
#DEFINE FP_LIT_TK
#DEFINE TRUE_TK
#DEFINE FALSE_TK
#DEFINE BOOL_LIT_TK
#DEFINE NULL_TK
#LINE line
" config.h
" system.h
< dirent.h
" tree.h
" rtl.h
" obstack.h
" toplev.h
" flags.h
" java-tree.h
" jcf.h
" lex.h
" parse.h
" zipfile.h
" convert.h
" buffer.h
" xref.h
" except.h
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#DEFINE BINOP_LOOKUP
#LINE line
#LINE line
" lex.c
#IFNDEF YYDEBUG
#DEFINE YYDEBUG
#ENDIF
< stdio.h
#IFNDEF __cplusplus
#IFNDEF __STDC__
#DEFINE const
#ENDIF
#ENDIF
#DEFINE YYFINAL
#DEFINE YYFLAG
#DEFINE YYNTBASE
#DEFINE YYTRANSLATE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE YYLAST
#DEFINE YYPURE
#LINE line
#IFNDEF YYSTACK_USE_ALLOCA
#IFDEF alloca
#DEFINE YYSTACK_USE_ALLOCA
#ELSE
#IFDEF __GNUC__
#DEFINE YYSTACK_USE_ALLOCA
#DEFINE alloca
#ELSE
#IF
#DEFINE YYSTACK_USE_ALLOCA
< alloca.h
#ELSE
#IF
#IF
< malloc.h
#ENDIF
#ELSE
#IF
#PRAGMA alloca
#DEFINE YYSTACK_USE_ALLOCA
#ELSE
#IF
#IFDEF __hpux
#DEFINE YYSTACK_USE_ALLOCA
#DEFINE alloca
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF YYSTACK_USE_ALLOCA
#DEFINE YYSTACK_ALLOC
#ELSE
#DEFINE YYSTACK_ALLOC
#ENDIF
#DEFINE yyerrok
#DEFINE yyclearin
#DEFINE YYEMPTY
#DEFINE YYEOF
#DEFINE YYACCEPT
#DEFINE YYABORT
#DEFINE YYERROR
#DEFINE YYFAIL
#DEFINE YYRECOVERING
#DEFINE YYBACKUP
#DEFINE YYTERROR
#DEFINE YYERRCODE
#IFNDEF YYPURE
#DEFINE YYLEX
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ELSE
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ENDIF
#ENDIF
#IFNDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF YYINITDEPTH
#DEFINE YYINITDEPTH
#ENDIF
#IF
#UNDEF YYMAXDEPTH
#ENDIF
#IFNDEF YYMAXDEPTH
#DEFINE YYMAXDEPTH
#ENDIF
#IF
#DEFINE __yy_memcpy
#ELSE
#IFNDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#LINE line
#IFDEF YYPARSE_PARAM
#IFDEF __cplusplus
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#IFDEF __GNUC__
#IFDEF YYPARSE_PARAM
#ELSE
#ENDIF
#ENDIF
#IFDEF YYLSP_NEEDED
#DEFINE YYPOPSTACK
#ELSE
#DEFINE YYPOPSTACK
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF yyoverflow
#IFDEF YYLSP_NEEDED
#ELSE
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#ELSE
#IFDEF YYLSP_NEEDED
#ENDIF
#IFNDEF YYSTACK_USE_ALLOCA
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF YYPRINT
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYERROR_VERBOSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#LINE line
#IFDEF VERBOSE_SKELETON
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#DEFINE COPY_RETURN
#UNDEF COPY_RETURN
#IF
#ELSE
#ENDIF
#IFDEF PROMOTE_PROTOTYPES
#ENDIF
#IFDEF USE_COMPONENT_REF
#ELSE
#ENDIF
#DEFINE BUILD_OPERATOR_STRING
#UNDEF BUILD_OPERATOR_STRING
#IF
#ENDIF
#IFDEF USE_COMPONENT_REF
#ENDIF
#IFDEF USE_COMPONENT_REF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" obstack.h
" flags.h
" java-tree.h
" jcf.h
" convert.h
" toplev.h
#IFDEF TARGET_SOFT_FLOAT
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" java-tree.h
" javaop.h
" java-opcodes.h
" jcf.h
" java-except.h
" toplev.h
#DEFINE INVALIDATE_PC
#DEFINE INVALID_PC
#DEFINE VERIFICATION_ERROR
#DEFINE PUSH_PENDING
#IFDEF __GNUC__
#DEFINE CHECK_PC_IN_RANGE
#ELSE
#DEFINE CHECK_PC_IN_RANGE
#ENDIF
#DEFINE BCODE
__E__O__F__
" config.h
" system.h
" tree.h
" java-tree.h
" xref.h
" jcf.h
" parse.h
" obstack.h
__E__O__F__
" config.h
" system.h
" zipfile.h
#DEFINE UNZIP
#DEFINE UNZIP_VERSION
#DEFINE VMS_UNZIP_VERSION
#DEFINE ZSUFX
#DEFINE CENTRAL_HDR_SIG
#DEFINE LOCAL_HDR_SIG
#DEFINE END_CENTRAL_SIG
#DEFINE EXTD_LOCAL_SIG
#DEFINE STORED
#DEFINE SHRUNK
#DEFINE REDUCED1
#DEFINE REDUCED2
#DEFINE REDUCED3
#DEFINE REDUCED4
#DEFINE IMPLODED
#DEFINE TOKENIZED
#DEFINE DEFLATED
#DEFINE NUM_METHODS
#DEFINE PK_OK
#DEFINE PK_COOL
#DEFINE PK_GNARLY
#DEFINE PK_WARN
#DEFINE PK_ERR
#DEFINE PK_BADERR
#DEFINE PK_MEM
#DEFINE PK_MEM2
#DEFINE PK_MEM3
#DEFINE PK_MEM4
#DEFINE PK_MEM5
#DEFINE PK_NOZIP
#DEFINE PK_PARAM
#DEFINE PK_FIND
#DEFINE PK_DISK
#DEFINE PK_EOF
#DEFINE LREC_SIZE
#DEFINE CREC_SIZE
#DEFINE ECREC_SIZE
#IFNDEF SEEK_SET
#DEFINE SEEK_SET
#DEFINE SEEK_CUR
#DEFINE SEEK_END
#ENDIF
#DEFINE L_VERSION_NEEDED_TO_EXTRACT_0
#DEFINE L_VERSION_NEEDED_TO_EXTRACT_1
#DEFINE L_GENERAL_PURPOSE_BIT_FLAG
#DEFINE L_COMPRESSION_METHOD
#DEFINE L_LAST_MOD_FILE_TIME
#DEFINE L_LAST_MOD_FILE_DATE
#DEFINE L_CRC32
#DEFINE L_COMPRESSED_SIZE
#DEFINE L_UNCOMPRESSED_SIZE
#DEFINE L_FILENAME_LENGTH
#DEFINE L_EXTRA_FIELD_LENGTH
#DEFINE C_VERSION_MADE_BY_0
#DEFINE C_VERSION_MADE_BY_1
#DEFINE C_VERSION_NEEDED_TO_EXTRACT_0
#DEFINE C_VERSION_NEEDED_TO_EXTRACT_1
#DEFINE C_GENERAL_PURPOSE_BIT_FLAG
#DEFINE C_COMPRESSION_METHOD
#DEFINE C_LAST_MOD_FILE_TIME
#DEFINE C_LAST_MOD_FILE_DATE
#DEFINE C_CRC32
#DEFINE C_COMPRESSED_SIZE
#DEFINE C_UNCOMPRESSED_SIZE
#DEFINE C_FILENAME_LENGTH
#DEFINE C_EXTRA_FIELD_LENGTH
#DEFINE C_FILE_COMMENT_LENGTH
#DEFINE C_DISK_NUMBER_START
#DEFINE C_INTERNAL_FILE_ATTRIBUTES
#DEFINE C_EXTERNAL_FILE_ATTRIBUTES
#DEFINE C_RELATIVE_OFFSET_LOCAL_HEADER
#DEFINE NUMBER_THIS_DISK
#DEFINE NUM_DISK_WITH_START_CENTRAL_DIR
#DEFINE NUM_ENTRIES_CENTRL_DIR_THS_DISK
#DEFINE TOTAL_ENTRIES_CENTRAL_DIR
#DEFINE SIZE_CENTRAL_DIRECTORY
#DEFINE OFFSET_START_CENTRAL_DIRECTORY
#DEFINE ZIPFILE_COMMENT_LENGTH
#IFNDEF MAX
#DEFINE MAX
#ENDIF
#IFNDEF MIN
#DEFINE MIN
#ENDIF
#DEFINE ALLOC
#IFDEF TEST
#ENDIF
#IFDEF __GNUC__
#DEFINE DIR_ALIGN
#ELSE
#DEFINE DIR_ALIGN
#ENDIF
#IFDEF TEST
#ENDIF
__E__O__F__
" config.h
" system.h
" tree.h
" c-tree.h
" c-lex.h
" flags.h
" objc-act.h
" input.h
" except.h
" function.h
" output.h
" toplev.h
#IF
" cpplib.h
#ENDIF
#IFNDEF OBJC_GEN_METHOD_LABEL
#DEFINE OBJC_GEN_METHOD_LABEL
#ENDIF
#IFNDEF OBJC_FORWARDING_STACK_OFFSET
#DEFINE OBJC_FORWARDING_STACK_OFFSET
#ENDIF
#IFNDEF OBJC_FORWARDING_MIN_OFFSET
#DEFINE OBJC_FORWARDING_MIN_OFFSET
#ENDIF
#DEFINE DEFTREECODE
" objc-tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" objc-tree.def
#UNDEF DEFTREECODE
#DEFINE DEFTREECODE
" objc-tree.def
#UNDEF DEFTREECODE
" obstack.h
#DEFINE obstack_chunk_alloc
#DEFINE obstack_chunk_free
" rtl.h
" c-parse.h
#DEFINE OBJC_VERSION
#DEFINE PROTOCOL_VERSION
#DEFINE OBJC_ENCODE_INLINE_DEFS
#DEFINE OBJC_ENCODE_DONT_INLINE_DEFS
#IF
#ENDIF
#IF
#ENDIF
#DEFINE TYPE_ID
#DEFINE TAG_OBJECT
#DEFINE TAG_CLASS
#DEFINE TAG_SUPER
#DEFINE TAG_SELECTOR
#DEFINE UTAG_CLASS
#DEFINE UTAG_IVAR
#DEFINE UTAG_IVAR_LIST
#DEFINE UTAG_METHOD
#DEFINE UTAG_METHOD_LIST
#DEFINE UTAG_CATEGORY
#DEFINE UTAG_MODULE
#DEFINE UTAG_STATICS
#DEFINE UTAG_SYMTAB
#DEFINE UTAG_SUPER
#DEFINE UTAG_SELECTOR
#DEFINE UTAG_PROTOCOL
#DEFINE UTAG_PROTOCOL_LIST
#DEFINE UTAG_METHOD_PROTOTYPE
#DEFINE UTAG_METHOD_PROTOTYPE_LIST
#DEFINE STRING_OBJECT_CLASS_NAME
#DEFINE PROTOCOL_OBJECT_CLASS_NAME
#DEFINE TREE_STATIC_TEMPLATE
#DEFINE TYPED_OBJECT
#DEFINE IS_ID
#DEFINE IS_PROTOCOL_QUALIFIED_ID
#DEFINE IS_SUPER
#DEFINE BUFSIZE
#IFDEF NEXT_OBJC_RUNTIME
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF OBJC_INT_SELECTORS
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF OBJC_INT_SELECTORS
#ELSE
#ENDIF
#DEFINE USERTYPE
#IFDEF OBJC_INT_SELECTORS
#ELSE
#ENDIF
#DEFINE METHOD_DEF
#DEFINE METHOD_REF
#DEFINE HASH_ALLOC_LIST_SIZE
#DEFINE ATTR_ALLOC_LIST_SIZE
#DEFINE SIZEHASHTABLE
#DEFINE HASHFUNCTION
#IFNDEF OBJC_INT_SELECTORS
#ENDIF
#IFDEF OBJC_INT_SELECTORS
#ELSE
#ENDIF
#IF
#ENDIF
#DEFINE RAW_TYPESPEC
#DEFINE LAST_CODE
#IFDEF OBJC_PROLOGUE
#ENDIF
#IFDEF DEBUG
#ENDIF
__E__O__F__
#DEFINE YYBISON
#DEFINE IDENTIFIER
#DEFINE TYPENAME
#DEFINE SCSPEC
#DEFINE TYPESPEC
#DEFINE TYPE_QUAL
#DEFINE CONSTANT
#DEFINE STRING
#DEFINE ELLIPSIS
#DEFINE SIZEOF
#DEFINE ENUM
#DEFINE STRUCT
#DEFINE UNION
#DEFINE IF
#DEFINE ELSE
#DEFINE WHILE
#DEFINE DO
#DEFINE FOR
#DEFINE SWITCH
#DEFINE CASE
#DEFINE DEFAULT
#DEFINE BREAK
#DEFINE CONTINUE
#DEFINE RETURN
#DEFINE GOTO
#DEFINE ASM_KEYWORD
#DEFINE TYPEOF
#DEFINE ALIGNOF
#DEFINE ATTRIBUTE
#DEFINE EXTENSION
#DEFINE LABEL
#DEFINE REALPART
#DEFINE IMAGPART
#DEFINE ASSIGN
#DEFINE OROR
#DEFINE ANDAND
#DEFINE EQCOMPARE
#DEFINE ARITHCOMPARE
#DEFINE LSHIFT
#DEFINE RSHIFT
#DEFINE UNARY
#DEFINE PLUSPLUS
#DEFINE MINUSMINUS
#DEFINE HYPERUNARY
#DEFINE POINTSAT
#DEFINE INTERFACE
#DEFINE IMPLEMENTATION
#DEFINE END
#DEFINE SELECTOR
#DEFINE DEFS
#DEFINE ENCODE
#DEFINE CLASSNAME
#DEFINE PUBLIC
#DEFINE PRIVATE
#DEFINE PROTECTED
#DEFINE PROTOCOL
#DEFINE OBJECTNAME
#DEFINE CLASS
#DEFINE ALIAS
#DEFINE OBJC_STRING
#LINE line
" config.h
" system.h
< setjmp.h
" tree.h
" input.h
" c-lex.h
" c-tree.h
" flags.h
" output.h
" toplev.h
#IFDEF MULTIBYTE_CHARS
< locale.h
#ENDIF
" objc-act.h
#DEFINE YYERROR1
#DEFINE YYDEBUG
#LINE line
#LINE line
#DEFINE YYPRINT
< stdio.h
#IFNDEF __cplusplus
#IFNDEF __STDC__
#DEFINE const
#ENDIF
#ENDIF
#DEFINE YYFINAL
#DEFINE YYFLAG
#DEFINE YYNTBASE
#DEFINE YYTRANSLATE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE YYLAST
#LINE line
#IFNDEF alloca
#IFDEF __GNUC__
#DEFINE alloca
#ELSE
#IF
< alloca.h
#ELSE
#IF
< malloc.h
#ELSE
#IF
< malloc.h
#PRAGMA alloca
#ELSE
#IFDEF __hpux
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#DEFINE yyerrok
#DEFINE yyclearin
#DEFINE YYEMPTY
#DEFINE YYEOF
#DEFINE YYACCEPT
#DEFINE YYABORT
#DEFINE YYERROR
#DEFINE YYFAIL
#DEFINE YYRECOVERING
#DEFINE YYBACKUP
#DEFINE YYTERROR
#DEFINE YYERRCODE
#IFNDEF YYPURE
#DEFINE YYLEX
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ELSE
#IFDEF YYLEX_PARAM
#DEFINE YYLEX
#ELSE
#DEFINE YYLEX
#ENDIF
#ENDIF
#ENDIF
#IFNDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFNDEF YYINITDEPTH
#DEFINE YYINITDEPTH
#ENDIF
#IF
#UNDEF YYMAXDEPTH
#ENDIF
#IFNDEF YYMAXDEPTH
#DEFINE YYMAXDEPTH
#ENDIF
#IFDEF __GNUC__
#ENDIF
#IF
#DEFINE __yy_memcpy
#ELSE
#IFNDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#LINE line
#IFDEF YYPARSE_PARAM
#IFDEF __cplusplus
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#ELSE
#DEFINE YYPARSE_PARAM_ARG
#DEFINE YYPARSE_PARAM_DECL
#ENDIF
#IFDEF YYLSP_NEEDED
#DEFINE YYPOPSTACK
#ELSE
#DEFINE YYPOPSTACK
#ENDIF
#IFDEF YYPURE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF yyoverflow
#IFDEF YYLSP_NEEDED
#ELSE
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#ELSE
#IFDEF YYLSP_NEEDED
#ENDIF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#IFDEF YYPRINT
#ENDIF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#IF
#ENDIF
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#LINE line
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IFDEF YYERROR_VERBOSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF YYLSP_NEEDED
#ENDIF
#LINE line
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" obstack.h
#DEFINE OBSTACK_INTERFACE_VERSION
< stdio.h
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IF
#DEFINE POINTER
#ELSE
#DEFINE POINTER
#ENDIF
#DEFINE DEFAULT_ALIGNMENT
#DEFINE DEFAULT_ROUNDING
#IFNDEF COPYING_UNIT
#DEFINE COPYING_UNIT
#ENDIF
#IF
#ELSE
#ENDIF
#IF
< stdlib.h
#ENDIF
#IFNDEF EXIT_FAILURE
#DEFINE EXIT_FAILURE
#ENDIF
#IF
#DEFINE CALL_CHUNKFUN
#DEFINE CALL_FREEFUN
#ELSE
#DEFINE CALL_CHUNKFUN
#DEFINE CALL_FREEFUN
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#UNDEF obstack_free
#IFNDEF _
#IFDEF HAVE_LIBINTL_H
< libintl.h
#IFNDEF _
#DEFINE _
#ENDIF
#ELSE
#DEFINE _
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" config.h
" system.h
" obstack.h
" rtl.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< ctype.h
< sys/types.h
< string.h
< stdio.h
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ELSE
#ENDIF
< demangle.h
#UNDEF CURRENT_DEMANGLING_STYLE
#DEFINE CURRENT_DEMANGLING_STYLE
" libiberty.h
#DEFINE min
#IF
#DEFINE CPLUS_MARKER
#ENDIF
#DEFINE PRINT_ANSI_QUALIFIERS
#DEFINE PRINT_ARG_TYPES
#DEFINE STRING_EMPTY
#DEFINE PREPEND_BLANK
#DEFINE APPEND_BLANK
#DEFINE LEN_STRING
#DEFINE SCOPE_STRING
#DEFINE ARM_VTABLE_STRING
#DEFINE ARM_VTABLE_STRLEN
#IF
#ENDIF
#IF
#ENDIF
#DEFINE TYPE_UNQUALIFIED
#DEFINE TYPE_QUAL_CONST
#DEFINE TYPE_QUAL_VOLATILE
#DEFINE TYPE_QUAL_RESTRICT
#IF
#ENDIF
#IF
#ENDIF
#IFDEF MAIN
" getopt.h
#DEFINE MBUF_SIZE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
" libiberty.h
" splay-tree.h
__E__O__F__
< time.h
" rtltypes.h
#DEFINE SECOND_VALID
#DEFINE MINUTE_VALID
#DEFINE HOUR_VALID
#DEFINE DAY_VALID
#DEFINE MONTH_VALID
#DEFINE YEAR_VALID
#DEFINE CAUSE_RANGEFAIL
__E__O__F__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< sys/types.h
< sys/stat.h
< unistd.h
< fcntl.h
< limits.h
< errno.h
< string.h
< stdlib.h
" fileio.h
#IFNDEF PATH_MAX
#IFDEF _POSIX_PATH_MAX
#DEFINE PATH_MAX
#ELSE
#IFDEF MAXPATHLEN
#DEFINE PATH_MAX
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
< stdio.h
< stdlib.h
< errno.h
< string.h
" rtltypes.h
" iomodes.h
__E__O__F__
< stdio.h
< stdlib.h
< errno.h
< string.h
" iomodes.h
#DEFINE STDIO_TEXT_LENGTH
#DEFINE STDIN_TEXT_LENGTH
#IFNDEF STDIN_FILENO
#DEFINE STDIN_FILENO
#ENDIF
#DEFINE STDOUT_TEXT_LENGTH
#IFNDEF STDOUT_FILENO
#DEFINE STDOUT_FILENO
#ENDIF
#DEFINE STDERR_TEXT_LENGTH
#IFNDEF STDERR_FILENO
#DEFINE STDERR_FILENO
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
" powerset.h
__E__O__F__
#DEFINE MIN
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" rts.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_DELAYFAIL
#DEFINE CAUSE_NOTIMPLEMENTED
__E__O__F__
< unistd.h
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< setjmp.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< setjmp.h
" rtltypes.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< limits.h
< string.h
< ctype.h
< setjmp.h
< float.h
< math.h
< stdlib.h
#IF
< stdio.h
#ENDIF
" bitstring.h
" auxtypes.h
" iomodes.h
" format.h
" fileio.h
" ioerror.h
#DEFINE CH_BYTE_MIN
#DEFINE CH_BYTE_MAX
#DEFINE CH_UBYTE_MAX
#DEFINE CH_INT_MIN
#DEFINE CH_INT_MAX
#DEFINE CH_UINT_MAX
#DEFINE CH_LONG_MIN
#DEFINE CH_LONG_MAX
#DEFINE CH_ULONG_MAX
#IFNDEF M_LN2
#DEFINE M_LN2
#ENDIF
#IFNDEF M_LN10
#DEFINE M_LN10
#ENDIF
#DEFINE DMANTDIGS
#DEFINE FMANTDIGS
#DEFINE MAXPREC
#DEFINE LET
#DEFINE BIN
#DEFINE DEC
#DEFINE OCT
#DEFINE HEX
#DEFINE USC
#DEFINE BIL
#DEFINE SPC
#DEFINE SCS
#DEFINE IOC
#DEFINE EDC
#DEFINE CVC
#DEFINE isDEC
#DEFINE isCVC
#DEFINE isEDC
#DEFINE isIOC
#DEFINE isUSC
#DEFINE isXXX
#DEFINE CONVERSIONCODES
#DEFINE EDITCODES
#DEFINE IOCODES
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE PUT
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< time.h
#DEFINE ASSIGN_VALUE
__E__O__F__
< setjmp.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE MIN
__E__O__F__
#DEFINE MIN
#IF
#ELSE
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IF
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
< stdio.h
" rtltypes.h
" rts.h
__E__O__F__
< stdio.h
" rtltypes.h
" rts.h
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" fileio.h
__E__O__F__
< setjmp.h
< stdlib.h
< errno.h
< sys/types.h
< unistd.h
" fileio.h
#IFDEF EOF
#UNDEF EOF
#ENDIF
#DEFINE EOF
__E__O__F__
" rts.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
__E__O__F__
< stdio.h
< string.h
< stdlib.h
< setjmp.h
< signal.h
" rts.h
#DEFINE MAX_NUMBER
#DEFINE MAX_COPIES
#DEFINE MAX_PER_ITEM
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
" rtltypes.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_SENDFAIL
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
__E__O__F__
" fileio.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_BUFFINCONS
#DEFINE CAUSE_SPACEFAIL
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" fileio.h
__E__O__F__
< setjmp.h
< errno.h
< string.h
< unistd.h
< sys/types.h
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< math.h
< f2c.h
#IFDEF Labort
#ENDIF
#IFDEF Lderf
#ENDIF
#IFDEF Lderfc
#ENDIF
#IFDEF Lef1asc
#ENDIF
#IFDEF Lef1cmc
#ENDIF
#IFDEF Lerf
#ENDIF
#IFDEF Lerfc
#ENDIF
#IFDEF Lexit
#ENDIF
#IFDEF Lgetarg
#ENDIF
#IFDEF Lgetenv
#ENDIF
#IFDEF Liargc
#ENDIF
#IFDEF Lsignal
#ENDIF
#IFDEF Lsystem
#ENDIF
#IFDEF Lflush
#ENDIF
#IFDEF Lftell
#ENDIF
#IFDEF Lfseek
#ENDIF
#IFDEF Laccess
#ENDIF
#IFDEF Lalarm
#ENDIF
#IFDEF Lbesj0
#ENDIF
#IFDEF Lbesj1
#ENDIF
#IFDEF Lbesjn
#ENDIF
#IFDEF Lbesy0
#ENDIF
#IFDEF Lbesy1
#ENDIF
#IFDEF Lbesyn
#ENDIF
#IFDEF Lchdir
#ENDIF
#IFDEF Lchmod
#ENDIF
#IFDEF Lctime
#ENDIF
#IFDEF Ldate_y2kbuggy
#ENDIF
#IFDEF Ldate_y2kbug
#ENDIF
#IFDEF Ldbesj0
#ENDIF
#IFDEF Ldbesj1
#ENDIF
#IFDEF Ldbesjn
#ENDIF
#IFDEF Ldbesy0
#ENDIF
#IFDEF Ldbesy1
#ENDIF
#IFDEF Ldbesyn
#ENDIF
#IFDEF Ldtime
#ENDIF
#IFDEF Letime
#ENDIF
#IFDEF Lfdate
#ENDIF
#IFDEF Lfgetc
#ENDIF
#IFDEF Lfget
#ENDIF
#IFDEF Lflush1
#ENDIF
#IFDEF Lfnum
#ENDIF
#IFDEF Lfputc
#ENDIF
#IFDEF Lfput
#ENDIF
#IFDEF Lfstat
#ENDIF
#IFDEF Lgerror
#ENDIF
#IFDEF Lgetcwd
#ENDIF
#IFDEF Lgetgid
#ENDIF
#IFDEF Lgetlog
#ENDIF
#IFDEF Lgetpid
#ENDIF
#IFDEF Lgetuid
#ENDIF
#IFDEF Lgmtime
#ENDIF
#IFDEF Lhostnm
#ENDIF
#IFDEF Lidate
#ENDIF
#IFDEF Lierrno
#ENDIF
#IFDEF Lirand
#ENDIF
#IFDEF Lisatty
#ENDIF
#IFDEF Litime
#ENDIF
#IFDEF Lkill
#ENDIF
#IFDEF Llink
#ENDIF
#IFDEF Llnblnk
#ENDIF
#IFDEF Llstat
#ENDIF
#IFDEF Lltime
#ENDIF
#IFDEF Lmclock
#ENDIF
#IFDEF Lperror
#ENDIF
#IFDEF Lrand
#ENDIF
#IFDEF Lrename
#ENDIF
#IFDEF Lsecnds
#ENDIF
#IFDEF Lsecond
#ENDIF
#IFDEF Lsleep
#ENDIF
#IFDEF Lsrand
#ENDIF
#IFDEF Lstat
#ENDIF
#IFDEF Lsymlnk
#ENDIF
#IFDEF Ltime
#ENDIF
#IFDEF Lttynam
#ENDIF
#IFDEF Lumask
#ENDIF
#IFDEF Lunlink
#ENDIF
#IFDEF Lvxtidt_y2kbuggy
#ENDIF
#IFDEF Lvxtidt_y2kbug
#ENDIF
#IFDEF Lvxttim
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#UNDEF min
#UNDEF max
< stdio.h
#IFDEF KR_headers
#ELSE
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#IFDEF __cplusplus
#ENDIF
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#DEFINE log10e
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#IFDEF IEEE_drem
#ELSE
#ENDIF
#ELSE
#IFDEF IEEE_drem
#ELSE
#UNDEF abs
< math.h
#ENDIF
#ENDIF
#IFDEF IEEE_drem
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" time.h
#IFDEF MSDOS
#UNDEF USE_CLOCK
#DEFINE USE_CLOCK
#ENDIF
#IFNDEF USE_CLOCK
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
" sys/types.h
" sys/times.h
#ENDIF
#UNDEF Hz
#IFDEF CLK_TCK
#DEFINE Hz
#ELSE
#IFDEF HZ
#DEFINE Hz
#ELSE
#DEFINE Hz
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF USE_CLOCK
#IFNDEF CLOCKS_PER_SECOND
#DEFINE CLOCKS_PER_SECOND
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#DEFINE M
#DEFINE EVEN
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" time.h
#IFDEF MSDOS
#UNDEF USE_CLOCK
#DEFINE USE_CLOCK
#ENDIF
#IFNDEF USE_CLOCK
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
" sys/types.h
" sys/times.h
#ENDIF
#UNDEF Hz
#IFDEF CLK_TCK
#DEFINE Hz
#ELSE
#IFDEF HZ
#DEFINE Hz
#ELSE
#DEFINE Hz
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF USE_CLOCK
#IFNDEF CLOCKS_PER_SECOND
#DEFINE CLOCKS_PER_SECOND
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#UNDEF min
#UNDEF max
#IFNDEF KR_headers
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#IFDEF KR_headers
#ELSE
< stdlib.h
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF LONGBITS
#DEFINE LONGBITS
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" signal1.h
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF NO__STDC
#DEFINE ONEXIT
#ELSE
#IFNDEF KR_headers
#IFNDEF NO_ONEXIT
#DEFINE ONEXIT
#ENDIF
#ELSE
#IFNDEF NO_ONEXIT
#DEFINE ONEXIT
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_ONEXIT
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF LONGBITS
#DEFINE LONGBITS
#ENDIF
#IFNDEF LONG8BITS
#DEFINE LONG8BITS
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#DEFINE log10e
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#IFDEF IEEE_drem
#ELSE
#ENDIF
#ELSE
#IFDEF IEEE_drem
#ELSE
#UNDEF abs
< math.h
#ENDIF
#ENDIF
#IFDEF IEEE_drem
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF NO_OVERWRITE
< stdio.h
#UNDEF abs
#IFDEF KR_headers
#ELSE
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#DEFINE PAUSESIG
" signal1.h
#IFDEF KR_headers
#DEFINE Void
#DEFINE Int
#ELSE
#DEFINE Void
#DEFINE Int
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" signal1.h
#IFNDEF SIGIOT
#IFDEF SIGABRT
#DEFINE SIGIOT
#ENDIF
#ENDIF
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#DEFINE Int
#ELSE
#DEFINE Int
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF SIGTRAP
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF SIGTRAP
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF pdp11
#ENDIF
__E__O__F__
< stdio.h
< signal.h
#IFNDEF SIGIOT
#IFDEF SIGABRT
#DEFINE SIGIOT
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
" signal1.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
< sys/types.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF NON_UNIX_STDIO
#IFNDEF unlink
#DEFINE unlink
#ENDIF
#ELSE
#IF
" io.h
#ELSE
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NON_UNIX_STDIO
#ENDIF
#IFDEF NON_UNIX_STDIO
#ENDIF
__E__O__F__
#IFNDEF NON_UNIX_STDIO
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
< sys/types.h
< sys/stat.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE MAXERR
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#IFDEF S_IFMT
#IFDEF S_IFBLK
#ENDIF
#ELSE
#IFDEF S_ISDIR
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#DEFINE skip
#IFDEF interdata
#DEFINE SYLMX
#ENDIF
#IFDEF pdp11
#DEFINE SYLMX
#ENDIF
#IFDEF vax
#DEFINE SYLMX
#ENDIF
#IFNDEF SYLMX
#DEFINE SYLMX
#ENDIF
#DEFINE GLITCH
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE STKSZ
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#DEFINE MAXINTLENGTH
" f2c.h
#IFNDEF Allow_TYQUAD
#UNDEF longint
#DEFINE longint
#UNDEF ulongint
#DEFINE ulongint
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF SEEK_SET
#ENDIF
#IFDEF SEEK_SET
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
< string.h
#IFDEF KR_headers
#ELSE
#IF
#UNDEF abs
#UNDEF min
#UNDEF max
" io.h
#ENDIF
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#ENDIF
__E__O__F__
< ctype.h
" f2c.h
" fio.h
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fmt.h
" lio.h
" fp.h
#IFNDEF KR_headers
#ENDIF
#DEFINE isblnk
#DEFINE issep
#DEFINE isapos
#DEFINE isexp
#DEFINE issign
#DEFINE iswhit
#DEFINE SX
#DEFINE B
#DEFINE AX
#DEFINE EX
#DEFINE SG
#DEFINE WH
#IFDEF ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#DEFINE un_getc
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
#DEFINE ERR
#DEFINE GETC
#DEFINE Ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#DEFINE BUFSIZE
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE Ptr
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFDEF TYQUAD
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#UNDEF Ptr
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF OMIT_BLANK_CC
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Old_list_output
#IFDEF USE_STRLEN
#ELSE
#ENDIF
#ELSE
#IFNDEF WANT_LEAD_0
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF OMIT_BLANK_CC
#ENDIF
#IFNDEF OMIT_BLANK_CC
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE Ptr
#IFDEF Allow_TYQUAD
#ENDIF
__E__O__F__
#DEFINE _XOPEN_SOURCE
" f2c.h
" fio.h
< string.h
#IFNDEF NON_POSIX_STDIO
#IFDEF MSDOS
" io.h
#ELSE
" unistd.h
#ENDIF
#ENDIF
#IFDEF KR_headers
#IFDEF NON_ANSI_STDIO
#ENDIF
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
#IFDEF NON_ANSI_RW_MODES
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE opnerr
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#ENDIF
#IFDEF url_Adjust
#ENDIF
#IFDEF NON_POSIX_STDIO
#ELSE
#ENDIF
#IFDEF HAVE_TEMPNAM
#ELSE
#IFDEF _POSIX_SOURCE
#ELSE
#ENDIF
#ENDIF
#IFDEF NON_POSIX_STDIO
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< ctype.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fmt.h
" fp.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#DEFINE MAX_NL_CACHE
#DEFINE MAXDIM
#IFDEF KR_headers
#IFDEF ungetc
#ELSE
#DEFINE un_getc
#ENDIF
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#IFDEF ungetc
#ELSE
#DEFINE un_getc
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE GETC
#DEFINE Ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF No_Namelist_Questions
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF No_Namelist_Questions
#ENDIF
#IFNDEF No_Namelist_Comments
#ELSE
#ENDIF
#IFDEF No_Bad_Namelist_Skip
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
#IFDEF Allow_TYQUAD
#ENDIF
__E__O__F__
" f2c.h
" fio.h
< sys/types.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Pad_UDread
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFNDEF NON_UNIX_STDIO
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
< sys/types.h
< sys/stat.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFNDEF VAX
< ctype.h
#ENDIF
#IFNDEF KR_headers
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#ENDIF
" fmt.h
" fp.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFNDEF VAX
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF GOOD_SPRINTF_EXPONENT
#ELSE
#ENDIF
#IFNDEF VAX
#IFDEF Pedantic
#ELSE
#IFDEF CRAY
#ENDIF
#ENDIF
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF USE_STRLEN
#ELSE
#ENDIF
#IFNDEF WANT_LEAD_0
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
" lio.h
" string.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
" fmt.h
#IFDEF KR_headers
#ELSE
< string.h
#ENDIF
#IFDEF No_Extra_Namelist_Newlines
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< errno.h
< limits.h
" f2c.h
#IFNDEF R_OK
#DEFINE R_OK
#ENDIF
#IFNDEF W_OK
#DEFINE W_OK
#ENDIF
#IFNDEF X_OK
#DEFINE X_OK
#ENDIF
#IFNDEF F_OK
#DEFINE F_OK
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IFNDEF RETSIGTYPE
#IFDEF KR_headers
#DEFINE RETSIGTYPE
#ELSE
#DEFINE RETSIGTYPE
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
< signal.h
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IF
" f2c.h
< math.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< string.h
#ENDIF
" f2c.h
#IFNDEF CHMOD_PATH
#DEFINE CHMOD_PATH
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IF
" f2c.h
< math.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
#IF
< sys/times.h
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IF
< windows.h
#UNDEF min
#UNDEF max
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IF
#ELIF
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
#IF
< sys/times.h
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IF
< windows.h
#UNDEF min
#UNDEF max
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IF
#ELIF
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
" f2c.h
< sys/types.h
< sys/stat.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
< stddef.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFNDEF HAVE_STRERROR
#DEFINE strerror
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< stdio.h
< errno.h
" f2c.h
#IF
#IFDEF HAVE_UNISTD_H
< unistd.h
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#ELIF
< sys/param.h
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< stdio.h
#IF
< unistd.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
< signal.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< stdlib.h
#ENDIF
< sys/types.h
< sys/stat.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
< errno.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFNDEF RAND_MAX
#DEFINE RAND_MAX
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ENDIF
< stdio.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
< sys/types.h
" f2c.h
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< stdlib.h
#ENDIF
< sys/types.h
< sys/stat.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< sys/times.h
#ENDIF
< limits.h
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IFDEF _SC_CLK_TCK
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IF
< stdlib.h
#ENDIF
#IF
< unistd.h
#ENDIF
< stdio.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
< sys/stat.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFDEF HAVE_STRING_H
< string.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#IFDEF emacs
" blockinput.h
#ENDIF
#IF
#IFNDEF alloca
#IFDEF emacs
#IFDEF static
#IFNDEF STACK_DIRECTION
#ENDIF
#ENDIF
#ENDIF
#IF
#DEFINE ADDRESS_FUNCTION
#ELSE
#DEFINE ADDRESS_FUNCTION
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#IFNDEF emacs
#DEFINE malloc
#ENDIF
#IFNDEF STACK_DIRECTION
#DEFINE STACK_DIRECTION
#ENDIF
#IF
#DEFINE STACK_DIR
#ELSE
#DEFINE STACK_DIR
#ENDIF
#IFNDEF ALIGN_SIZE
#DEFINE ALIGN_SIZE
#ENDIF
#IF
#ENDIF
#IFDEF emacs
#ENDIF
#IFDEF emacs
#ENDIF
#IF
#IFDEF DEBUG_I00AFUNC
< stdio.h
#ENDIF
#IFNDEF CRAY_STACK
#DEFINE CRAY_STACK
#IFNDEF CRAY2
#ELSE
#ENDIF
#ENDIF
#IFDEF CRAY2
#ELSE
#IFDEF DEBUG_I00AFUNC
#ENDIF
#IFDEF DEBUG_I00AFUNC
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
#IFDEF isspace
#UNDEF isspace
#ENDIF
#DEFINE isspace
#IFDEF __STDC__
< stddef.h
#ELSE
#IF
#ENDIF
#ENDIF
" alloca-conf.h
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#IFNDEF EOS
#DEFINE EOS
#ENDIF
#DEFINE INITIAL_MAXARGC
#IFDEF MAIN
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
#IF
#DEFINE USE_STDARG
#ENDIF
#IFDEF USE_STDARG
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF USE_STDARG
#ELSE
#ENDIF
#IFDEF USE_STDARG
#ELSE
#ENDIF
__E__O__F__
" config.h
#IFDEF HAVE_ON_EXIT
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
__E__O__F__
__E__O__F__
__E__O__F__
__E__O__F__
" ansidecl.h
" libiberty.h
#IFDEF ANSI_PROTOTYPES
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
< sys/types.h
#IFDEF HAVE_UNISTD_H
< unistd.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#IFDEF HAVE_SYS_FILE_H
< sys/file.h
#ENDIF
#IFNDEF R_OK
#DEFINE R_OK
#DEFINE W_OK
#DEFINE X_OK
#ENDIF
" libiberty.h
#IFNDEF IN_GCC
#IF
#DEFINE DIR_SEPARATOR
#ENDIF
#ENDIF
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#IFDEF __MSDOS__
#IFNDEF P_tmpdir
#DEFINE P_tmpdir
#ENDIF
#ENDIF
#DEFINE TEMP_FILE
#IFDEF P_tmpdir
#ENDIF
#IFDEF P_tmpdir
#ENDIF
__E__O__F__
" config.h
#IFDEF HAVE_GETRUSAGE
< sys/time.h
< sys/resource.h
#ENDIF
#IFDEF HAVE_TIMES
#IFDEF HAVE_SYS_PARAM_H
< sys/param.h
#ENDIF
< sys/times.h
#ENDIF
#IF
#DEFINE HZ
#ENDIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IFDEF HAVE_TIMES
#ELSE
#IFDEF VMS
#ELSE
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
#IFDEF ANSI_PROTOTYPES
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
< stddef.h
#ELSE
#ENDIF
#DEFINE NULLP
#IFDEF ANSI_PROTOTYPES
#ELSE
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF ANSI_PROTOTYPES
#ELSE
#ENDIF
#IFDEF ANSI_PROTOTYPES
#ELSE
#ENDIF
#IFDEF MAIN
< stdio.h
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __IEEE_BIG_ENDIAN
#ENDIF
#IFDEF __IEEE_LITTLE_ENDIAN
#IFDEF __SMALL_BITFIELDS
#ELSE
#ENDIF
#IFDEF __SMALL_BITFIELDS
#ELSE
#ENDIF
#ENDIF
#IFDEF __IEEE_BIG_ENDIAN
#ENDIF
#IFDEF __IEEE_LITTLE_ENDIAN
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< ctype.h
< sys/types.h
< string.h
< stdio.h
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ELSE
#ENDIF
< demangle.h
#UNDEF CURRENT_DEMANGLING_STYLE
#DEFINE CURRENT_DEMANGLING_STYLE
" libiberty.h
#DEFINE min
#IF
#DEFINE CPLUS_MARKER
#ENDIF
#DEFINE PRINT_ANSI_QUALIFIERS
#DEFINE PRINT_ARG_TYPES
#DEFINE STRING_EMPTY
#DEFINE PREPEND_BLANK
#DEFINE APPEND_BLANK
#DEFINE LEN_STRING
#DEFINE SCOPE_STRING
#DEFINE ARM_VTABLE_STRING
#DEFINE ARM_VTABLE_STRLEN
#IF
#ENDIF
#IF
#ENDIF
#DEFINE TYPE_UNQUALIFIED
#DEFINE TYPE_QUAL_CONST
#DEFINE TYPE_QUAL_VOLATILE
#DEFINE TYPE_QUAL_RESTRICT
#IF
#ENDIF
#IF
#ENDIF
#IFDEF MAIN
" getopt.h
#DEFINE MBUF_SIZE
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
< sys/types.h
< sys/stat.h
__E__O__F__
" floatformat.h
< math.h
#IFDEF __STDC__
< stddef.h
#ELSE
#ENDIF
#DEFINE FLOATFORMAT_CHAR_BIT
#IFDEF HARRIS_FLOAT_FORMAT
#ELSE
#ENDIF
#IFNDEF min
#DEFINE min
#ENDIF
#IFDEF IEEE_DEBUG
#IF
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
#IF
< config.h
#ELSE
" config.h
#ENDIF
#ENDIF
#IFNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#ENDIF
#IFNDEF __STDC__
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< errno.h
< fnmatch.h
< ctype.h
#IF
#IF
#ENDIF
#DEFINE FOLD
#ENDIF
__E__O__F__
" config.h
#IFDEF HAVE_SYS_PARAM_H
< sys/param.h
#ENDIF
< errno.h
#IFNDEF MAXPATHLEN
#DEFINE MAXPATHLEN
#ENDIF
__E__O__F__
#IFNDEF _NO_PROTO
#DEFINE _NO_PROTO
#ENDIF
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< stdio.h
#DEFINE GETOPT_INTERFACE_VERSION
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IFDEF __GNU_LIBRARY__
< stdlib.h
< unistd.h
#ENDIF
#IFDEF VMS
< unixlib.h
#IF
< string.h
#ENDIF
#ENDIF
#IFNDEF _
#IFDEF HAVE_LIBINTL_H
< libintl.h
#DEFINE _
#ELSE
#DEFINE _
#ENDIF
#ENDIF
" getopt.h
#IFDEF __GNU_LIBRARY__
< string.h
#DEFINE my_index
#ELSE
#IF
< string.h
#ELSE
#IF
< strings.h
#ENDIF
#ENDIF
#IFNDEF getenv
#ENDIF
#IFDEF __GNUC__
#IF
#ENDIF
#ENDIF
#ENDIF
#IFDEF _LIBC
#IFDEF text_set_element
#ENDIF
#DEFINE SWAP_FLAGS
#ELSE
#DEFINE SWAP_FLAGS
#ENDIF
#IF
#ENDIF
#IFDEF _LIBC
#ENDIF
#IF
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#DEFINE NONOPTION_P
#ELSE
#DEFINE NONOPTION_P
#ENDIF
#ENDIF
#IFDEF TEST
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" getopt.h
#IF
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< stdio.h
#DEFINE GETOPT_INTERFACE_VERSION
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IFDEF __GNU_LIBRARY__
< stdlib.h
#ENDIF
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#ENDIF
#IFDEF TEST
< stdio.h
#ENDIF
__E__O__F__
#IFNDEF VMS
" config.h
< sys/types.h
#IFDEF HAVE_SYS_PARAM_H
< sys/param.h
#ENDIF
#UNDEF GNU_OUR_PAGESIZE
#IF
< unistd.h
#IFDEF _SC_PAGESIZE
#DEFINE GNU_OUR_PAGESIZE
#ENDIF
#ENDIF
#IFNDEF GNU_OUR_PAGESIZE
#IFDEF PAGESIZE
#DEFINE GNU_OUR_PAGESIZE
#ELSE
#IFDEF EXEC_PAGESIZE
#DEFINE GNU_OUR_PAGESIZE
#ELSE
#IFDEF NBPG
#DEFINE GNU_OUR_PAGESIZE
#IFNDEF CLSIZE
#DEFINE CLSIZE
#ENDIF
#ELSE
#IFDEF NBPC
#DEFINE GNU_OUR_PAGESIZE
#ELSE
#DEFINE GNU_OUR_PAGESIZE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ELSE
#IF
< syidef.h
#ENDIF
#IFNDEF SYI
#DEFINE SYI
#ENDIF
#ENDIF
__E__O__F__
" config.h
" ansidecl.h
" libiberty.h
< time.h
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IFDEF HAVE_TIMES
#IFDEF HAVE_SYS_PARAM_H
< sys/param.h
#ENDIF
< sys/times.h
#ENDIF
#IFNDEF CLOCKS_PER_SEC
#DEFINE CLOCKS_PER_SEC
#ENDIF
#IF
#DEFINE HZ
#ENDIF
#IF
#ELSE
#IFDEF HAVE_TIMES
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" libiberty.h
__E__O__F__
__E__O__F__
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#IFDEF HAVE_STRING_H
< string.h
#ENDIF
< errno.h
< stdio.h
< fcntl.h
#IFDEF HAVE_UNISTD_H
< unistd.h
#ENDIF
#IFDEF HAVE_SYS_TIME_H
< sys/time.h
#ENDIF
" ansidecl.h
#IFDEF __GNUC__
#ELSE
#ENDIF
#IFNDEF TMP_MAX
#DEFINE TMP_MAX
#ENDIF
#IFDEF HAVE_GETTIMEOFDAY
#ENDIF
#IFDEF HAVE_GETTIMEOFDAY
#ELSE
#ENDIF
__E__O__F__
" mpw.h
< stdlib.h
#IFNDEF USE_MW_HEADERS
< sys/time.h
< sys/resource.h
#ENDIF
< Types.h
< Files.h
< Timer.h
#UNDEF fopen
#DEFINE ZEROBLKSIZE
#UNDEF fseek
#UNDEF fread
#UNDEF fwrite
#IFNDEF USE_MW_HEADERS
#ENDIF
#IFNDEF USE_MW_HEADERS
#ENDIF
#IFNDEF USE_MW_HEADERS
#ENDIF
#IFDEF MPW_SADE
#ELSE
#ENDIF
#IF
#ENDIF
#IFNDEF USE_MW_HEADERS
" utime.h
#ENDIF
#IFNDEF USE_MW_HEADERS
#DEFINE LOCKBIT
#DEFINE DIRBIT
#IFDEF FIOFNAME
#ELSE
#ENDIF
#ENDIF
#UNDEF open
#UNDEF access
#UNDEF creat
#IFDEF USE_MW_HEADERS
#ELSE
#ENDIF
#IFDEF PROGRESS_TEST
#ENDIF
#IFDEF USE_MW_HEADERS
#IFNDEF __CONSOLE__
< console.h
#ENDIF
#PRAGMA unused
#PRAGMA unused
#PRAGMA unused
#ENDIF
__E__O__F__
__E__O__F__
" ansidecl.h
" objalloc.h
< stdio.h
#IF
< stdlib.h
< unixlib.h
#ELSE
#IFDEF ANSI_PROTOTYPES
< stddef.h
#ENDIF
#ENDIF
#DEFINE CHUNK_HEADER_SIZE
#DEFINE CHUNK_SIZE
#DEFINE BIG_REQUEST
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" obstack.h
#DEFINE OBSTACK_INTERFACE_VERSION
< stdio.h
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IF
#DEFINE POINTER
#ELSE
#DEFINE POINTER
#ENDIF
#DEFINE DEFAULT_ALIGNMENT
#DEFINE DEFAULT_ROUNDING
#IFNDEF COPYING_UNIT
#DEFINE COPYING_UNIT
#ENDIF
#IF
#ELSE
#ENDIF
#IF
< stdlib.h
#ENDIF
#IFNDEF EXIT_FAILURE
#DEFINE EXIT_FAILURE
#ENDIF
#IF
#DEFINE CALL_CHUNKFUN
#DEFINE CALL_FREEFUN
#ELSE
#DEFINE CALL_CHUNKFUN
#DEFINE CALL_FREEFUN
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#UNDEF obstack_free
#IFNDEF _
#IFDEF HAVE_LIBINTL_H
< libintl.h
#IFNDEF _
#DEFINE _
#ENDIF
#ELSE
#DEFINE _
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
< errno.h
#IFDEF HAVE_UNISTD_H
< unistd.h
#ENDIF
#DEFINE ISSPACE
#IFDEF HAVE_SYS_WAIT_H
< sys/wait.h
#ENDIF
#IFDEF vfork
#DEFINE VFORK_STRING
#ELSE
#DEFINE VFORK_STRING
#ENDIF
#IFDEF HAVE_VFORK_H
< vfork.h
#ENDIF
#IFDEF VMS
#DEFINE vfork
#ENDIF
" libiberty.h
#DEFINE STDIN_FILE_NO
#DEFINE STDOUT_FILE_NO
#DEFINE READ_PORT
#DEFINE WRITE_PORT
#IFDEF __MSDOS__
< process.h
#IFDEF __GO32__
#ELSE
#ENDIF
#ENDIF
#IF
< process.h
#IFDEF __CYGWIN__
#DEFINE fix_argv
#ELSE
#ENDIF
< io.h
< fcntl.h
< signal.h
#IFNDEF _P_WAIT
#DEFINE _P_WAIT
#DEFINE _P_NOWAIT
#DEFINE _P_OVERLAY
#DEFINE _P_NOWAITO
#DEFINE _P_DETACH
#DEFINE WAIT_CHILD
#DEFINE WAIT_GRANDCHILD
#ENDIF
#IFDEF __CYGWIN__
#ELSE
#ENDIF
#ENDIF
#IFDEF OS2
#ENDIF
#IFDEF MPW
#ENDIF
#IF
#IFDEF VMS
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IF
#PRAGMA alloca
#ENDIF
#IF
< config.h
#ENDIF
" ansidecl.h
#IF
< stdlib.h
#ENDIF
#IF
< string.h
#ENDIF
#IFDEF HAVE_ALLOCA_H
< alloca.h
#ELSE
#IFNDEF alloca
#IFDEF __GNUC__
#DEFINE alloca
#ELSE
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
< errno.h
#IF
< ansidecl.h
< limits.h
< stddef.h
< stdlib.h
#ELSE
#DEFINE ULONG_MAX
#DEFINE LONG_MAX
#IFDEF __STDC__
#DEFINE PTR
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#ELSE
#DEFINE PTR
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#ENDIF
#ENDIF
#DEFINE TYPE_0
#DEFINE BREAK_0
#DEFINE DEG_0
#DEFINE SEP_0
#DEFINE TYPE_1
#DEFINE BREAK_1
#DEFINE DEG_1
#DEFINE SEP_1
#DEFINE TYPE_2
#DEFINE BREAK_2
#DEFINE DEG_2
#DEFINE SEP_2
#DEFINE TYPE_3
#DEFINE BREAK_3
#DEFINE DEG_3
#DEFINE SEP_3
#DEFINE TYPE_4
#DEFINE BREAK_4
#DEFINE DEG_4
#DEFINE SEP_4
#DEFINE MAX_TYPES
__E__O__F__
< errno.h
__E__O__F__
__E__O__F__
#IF
< config.h
#ENDIF
" ansidecl.h
< errno.h
#IF
#ENDIF
#DEFINE __set_errno
#IF
< stdlib.h
#ELSE
< sys/types.h
< stdio.h
#ENDIF
#IF
< string.h
#ENDIF
#IF
< unistd.h
#ENDIF
#DEFINE __environ
#IFNDEF HAVE_ENVIRON_DECL
#ENDIF
#DEFINE LOCK
#DEFINE UNLOCK
__E__O__F__
#DEFINE _POSIX_SOURCE
< ansidecl.h
< sys/types.h
< signal.h
#IFDEF SIG_SETMASK
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
#IF
< stdlib.h
< unixlib.h
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
" libiberty.h
" splay-tree.h
__E__O__F__
#IF
#ENDIF
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
__E__O__F__
__E__O__F__
" ansidecl.h
" libiberty.h
" config.h
#IFDEF HAVE_SYS_ERRLIST
#DEFINE sys_errlist
#ENDIF
< stdio.h
< errno.h
#IFDEF HAVE_SYS_ERRLIST
#UNDEF sys_errlist
#ENDIF
#IFDEF __STDC__
< stddef.h
#ELSE
#ENDIF
#IFNDEF MAX
#DEFINE MAX
#ENDIF
#IFNDEF HAVE_SYS_ERRLIST
#ENDIF
#IFNDEF HAVE_SYS_ERRLIST
#DEFINE ENTRY
#ELSE
#DEFINE ENTRY
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF EVMSERR
#ENDIF
#IFNDEF HAVE_SYS_ERRLIST
#ELSE
#ENDIF
#IFNDEF HAVE_SYS_ERRLIST
#ENDIF
#IFNDEF HAVE_STRERROR
#IFNDEF HAVE_SYS_ERRLIST
#ENDIF
#IFDEF EVMSERR
#ENDIF
#ENDIF
#IFDEF EVMSERR
#ENDIF
#IFDEF EVMSERR
#ENDIF
#IFDEF MAIN
< stdio.h
#ENDIF
__E__O__F__
#IF
#ENDIF
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
__E__O__F__
" ansidecl.h
" libiberty.h
" config.h
#DEFINE sys_siglist
< stdio.h
< signal.h
#IFDEF __STDC__
< stddef.h
#ELSE
#ENDIF
#UNDEF sys_siglist
#IFNDEF NULL
#IFDEF __STDC__
#DEFINE NULL
#ELSE
#DEFINE NULL
#ENDIF
#ENDIF
#IFNDEF MAX
#DEFINE MAX
#ENDIF
#IFNDEF HAVE_SYS_SIGLIST
#ENDIF
#IFNDEF HAVE_SYS_SIGLIST
#DEFINE ENTRY
#ELSE
#DEFINE ENTRY
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF HAVE_SYS_SIGLIST
#ELSE
#IFDEF NSIG
#ELSE
#IFDEF _NSIG
#ENDIF
#ENDIF
#ENDIF
#IFNDEF HAVE_SYS_SIGLIST
#ENDIF
#IFNDEF HAVE_STRSIGNAL
#IFNDEF HAVE_SYS_SIGLIST
#ENDIF
#ENDIF
#IFNDEF HAVE_PSIGNAL
#ENDIF
#IFDEF MAIN
< stdio.h
#ENDIF
__E__O__F__
#IF
#ENDIF
__E__O__F__
< ctype.h
__E__O__F__
< limits.h
< ctype.h
< errno.h
#IF
< stdlib.h
#ENDIF
" ansidecl.h
#IFNDEF ULONG_MAX
#DEFINE ULONG_MAX
#ENDIF
#IFNDEF LONG_MAX
#DEFINE LONG_MAX
#ENDIF
#IFNDEF LONG_MIN
#DEFINE LONG_MIN
#ENDIF
__E__O__F__
< limits.h
< ctype.h
< errno.h
#IF
< stdlib.h
#ENDIF
" ansidecl.h
#IFNDEF ULONG_MAX
#DEFINE ULONG_MAX
#ENDIF
__E__O__F__
< stdio.h
#IFNDEF L_tmpnam
#DEFINE L_tmpnam
#ENDIF
#IFNDEF P_tmpdir
#DEFINE P_tmpdir
#ENDIF
__E__O__F__
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
< stdio.h
< string.h
< ansidecl.h
#IFDEF TEST
#ENDIF
#IFDEF TEST
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF TEST
#IFDEF __STDC__
#ELSE
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
#ENDIF
__E__O__F__
__E__O__F__
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
< stdio.h
#UNDEF vfprintf
__E__O__F__
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
< stdio.h
< ansidecl.h
#UNDEF vprintf
__E__O__F__
< varargs.h
< stdio.h
< ansidecl.h
#UNDEF vsprintf
#IFDEF VMS
#ELSE
#ENDIF
__E__O__F__
__E__O__F__
" ansidecl.h
" libiberty.h
< stdio.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
#DEFINE XATEXIT_SIZE
__E__O__F__
" ansidecl.h
" libiberty.h
< stdio.h
__E__O__F__
" ansidecl.h
" libiberty.h
< stdio.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#DEFINE ptrdiff_t
#ENDIF
#IF
< stdlib.h
< unixlib.h
#ELSE
#ENDIF
#IFDEF HAVE_SBRK
#ENDIF
#IFDEF HAVE_SBRK
#ENDIF
#IFDEF HAVE_SBRK
#ELSE
#ENDIF
#IFDEF HAVE_SBRK
#ELSE
#ENDIF
#IFDEF HAVE_SBRK
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IFDEF HAVE_STRING_H
< string.h
#ENDIF
" ansidecl.h
" libiberty.h
__E__O__F__
< stdio.h
" libiberty.h
" config.h
#IFDEF VMS
< errno.h
#IF
#DEFINE DONT_DECLARE_STRERROR
#ENDIF
#ENDIF
#IFNDEF DONT_DECLARE_STRERROR
#ENDIF
#DEFINE ERRSTR_FMT
#IFDEF VMS
#ELSE
#ENDIF
__E__O__F__
< stdio.h
#DEFINE MAXWORD
#IFDEF DBZ_FINISH
#ENDIF
__E__O__F__
< stdio.h
" string.h
" case.h
#DEFINE OFFSET
#DEFINE MAPSIZE
#IFDEF NONSTANDARD
#IFDEF RFCVIOLATION
#IFDEF B_2_11_MISTAKE
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
< stdio.h
< sys/types.h
< string.h
< ctype.h
< errno.h
#IFNDEF __STDC__
#ENDIF
< dbz.h
#IFDEF FUNNYSEEKS
< unistd.h
#ELSE
#DEFINE SEEK_SET
#ENDIF
#IFDEF OVERFLOW
< limits.h
#ENDIF
#IFDEF INDEX_SIZE
#DEFINE DEFSIZE
#ENDIF
#DEFINE SOF
#DEFINE VACANT
#DEFINE BIAS
#DEFINE UNBIAS
#DEFINE HASTAG
#DEFINE TAG
#DEFINE NOTAG
#DEFINE CANTAG
#DEFINE MKTAG
#IFNDEF DEFSIZE
#DEFINE DEFSIZE
#ENDIF
#IFDEF OLDBNEWS
#DEFINE DEFCASE
#DEFINE NOBUFFER
#ENDIF
#IFDEF BNEWS
#DEFINE DEFCASE
#DEFINE NOBUFFER
#ENDIF
#IFNDEF DEFCASE
#DEFINE DEFCASE
#ENDIF
#IFNDEF NOTAGS
#DEFINE TAGENB
#DEFINE TAGMASK
#DEFINE TAGSHIFT
#ELSE
#DEFINE TAGENB
#DEFINE TAGMASK
#DEFINE TAGSHIFT
#ENDIF
#IFNDEF NMEMORY
#DEFINE NMEMORY
#ENDIF
#DEFINE NUSEDS
#IFDEF INCORE
#ELSE
#ENDIF
#IFNDEF NPAGBUF
#DEFINE NPAGBUF
#ENDIF
#IFNDEF NOBUFFER
#IFDEF _IOFBF
#ENDIF
#ENDIF
#IFNDEF SHISTBUF
#DEFINE SHISTBUF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#IFNDEF MAXRUN
#DEFINE MAXRUN
#ENDIF
#DEFINE FRESH
#DEFINE NOTFOUND
#DEFINE MAPIN
#DEFINE MAPOUT
#IFDEF DBZDEBUG
#DEFINE DEBUG
#ELSE
#DEFINE DEBUG
#ENDIF
#IFDEF NOBUFFER
#ELSE
#IFDEF _IOFBF
#ENDIF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#DEFINE MAXN
#IFDEF OVERFLOW
#ENDIF
#IFDEF OVERFLOW
#ENDIF
#DEFINE POLY
#DEFINE OFFSET
#DEFINE TOLOW
#DEFINE CISTREQN
#DEFINE MAPSIZE
#IFDEF DBZDEBUG
#ELSE
#ENDIF
__E__O__F__
< stdio.h
< sys/types.h
< sys/stat.h
< string.h
< dbz.h
#IFDEF FUNNYSEEKS
< unistd.h
#ELSE
#DEFINE SEEK_SET
#ENDIF
#DEFINE STREQ
#IFNDEF lint
#ENDIF
#DEFINE DEFBUF
#IFDEF HAVERFCIZE
#ELSE
#DEFINE rfc822ize
#ENDIF
#IFDEF DBZ_FINISH
#ENDIF
__E__O__F__
< stdio.h
< sys/types.h
< sys/stat.h
< string.h
#DEFINE MAXSTR
#DEFINE STREQ
#IFNDEF lint
#ENDIF
#IFDEF DBZ_FINISH
#ENDIF
__E__O__F__
__E__O__F__
" libioP.h
#IF
< stdlib.h
#ELSE
#ENDIF
__E__O__F__
" libioP.h
< sys/types.h
< sys/stat.h
#IFDEF __STDC__
< stdlib.h
< unistd.h
#ENDIF
#IFDEF _LIBC
#UNDEF isatty
#DEFINE isatty
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" libioP.h
< fcntl.h
< sys/types.h
< sys/stat.h
< string.h
< unistd.h
< errno.h
#IFNDEF errno
#ENDIF
#IFDEF _LIBC
#DEFINE open
#DEFINE close
#DEFINE fstat
#DEFINE lseek
#DEFINE read
#DEFINE write
#ENDIF
#DEFINE CLOSED_FILEBUF_FLAGS
#IF
#ENDIF
#IFDEF TODO
#ENDIF
#IFDEF ESPIPE
#ENDIF
#IF
#ENDIF
#IFDEF TODO
#ENDIF
#IFDEF TODO
#ENDIF
#IFDEF TODO
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
__E__O__F__
< libioP.h
#IFDEF _IO_USE_DTOA
#IFDEF DEBUG
< stdio.h
#DEFINE Bug
#ENDIF
#IFDEF __STDC__
< stdlib.h
< string.h
< float.h
#DEFINE CONST
#ELSE
#DEFINE CONST
#DEFINE KR_headers
#DEFINE FLT_ROUNDS
#DEFINE FLT_RADIX
#DEFINE DBL_MANT_DIG
#DEFINE DBL_DIG
#DEFINE DBL_MAX_10_EXP
#DEFINE DBL_MAX_EXP
#ENDIF
< errno.h
#IFNDEF __MATH_H__
< math.h
#ENDIF
#IFDEF Unsigned_Shifts
#DEFINE Sign_Extend
#ELSE
#DEFINE Sign_Extend
#ENDIF
#IF
#DEFINE IEEE_8087
#ENDIF
#IF
#DEFINE IEEE_8087
#ENDIF
#IF
#DEFINE IEEE_MC68k
#ENDIF
#IF
#IFNDEF _DOUBLE_IS_32BITS
#IF
#DEFINE IBM
#ELSE
#IF
#DEFINE VAX
#ELSE
#IF
#DEFINE IEEE_Unknown
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF IEEE_8087
#DEFINE HIWORD
#DEFINE LOWORD
#DEFINE TEST_ENDIANNESS
#ELSE
#IF
#DEFINE HIWORD
#DEFINE LOWORD
#DEFINE TEST_ENDIANNESS
#ELSE
#DEFINE TEST_ENDIANNESS
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE word0
#DEFINE word1
#DEFINE setword0
#DEFINE setword1
#DEFINE setwords
#DEFINE addword0
#ELSE
#DEFINE word0
#IFNDEF _DOUBLE_IS_32BITS
#DEFINE word1
#ELSE
#DEFINE word1
#ENDIF
#DEFINE setword0
#IFNDEF _DOUBLE_IS_32BITS
#DEFINE setword1
#DEFINE setwords
#ELSE
#DEFINE setword1
#DEFINE setwords
#ENDIF
#DEFINE addword0
#ENDIF
#IF
#DEFINE Storeinc
#ELSE
#IF
#DEFINE Storeinc
#ELSE
#DEFINE Storeinc
#ENDIF
#ENDIF
#IF
#DEFINE Exp_shift
#DEFINE Exp_shift1
#DEFINE Exp_msk1
#DEFINE Exp_msk11
#DEFINE Exp_mask
#DEFINE P
#DEFINE Bias
#DEFINE IEEE_Arith
#DEFINE Emin
#DEFINE Exp_1
#DEFINE Exp_11
#DEFINE Ebits
#DEFINE Frac_mask
#DEFINE Frac_mask1
#DEFINE Ten_pmax
#DEFINE Bletch
#DEFINE Bndry_mask
#DEFINE Bndry_mask1
#DEFINE LSB
#DEFINE Sign_bit
#DEFINE Log2P
#DEFINE Tiny0
#DEFINE Tiny1
#DEFINE Quick_max
#DEFINE Int_max
#DEFINE Infinite
#ELSE
#UNDEF Sudden_Underflow
#DEFINE Sudden_Underflow
#IFDEF IBM
#DEFINE Exp_shift
#DEFINE Exp_shift1
#DEFINE Exp_msk1
#DEFINE Exp_msk11
#DEFINE Exp_mask
#DEFINE P
#DEFINE Bias
#DEFINE Exp_1
#DEFINE Exp_11
#DEFINE Ebits
#DEFINE Frac_mask
#DEFINE Frac_mask1
#DEFINE Bletch
#DEFINE Ten_pmax
#DEFINE Bndry_mask
#DEFINE Bndry_mask1
#DEFINE LSB
#DEFINE Sign_bit
#DEFINE Log2P
#DEFINE Tiny0
#DEFINE Tiny1
#DEFINE Quick_max
#DEFINE Int_max
#ELSE
#DEFINE Exp_shift
#DEFINE Exp_shift1
#DEFINE Exp_msk1
#DEFINE Exp_msk11
#DEFINE Exp_mask
#DEFINE P
#DEFINE Bias
#DEFINE Exp_1
#DEFINE Exp_11
#DEFINE Ebits
#DEFINE Frac_mask
#DEFINE Frac_mask1
#DEFINE Ten_pmax
#DEFINE Bletch
#DEFINE Bndry_mask
#DEFINE Bndry_mask1
#DEFINE LSB
#DEFINE Sign_bit
#DEFINE Log2P
#DEFINE Tiny0
#DEFINE Tiny1
#DEFINE Quick_max
#DEFINE Int_max
#ENDIF
#ENDIF
#IFNDEF IEEE_Arith
#DEFINE ROUND_BIASED
#ENDIF
#IFDEF RND_PRODQUOT
#DEFINE rounded_product
#DEFINE rounded_quotient
#ELSE
#DEFINE rounded_product
#DEFINE rounded_quotient
#ENDIF
#DEFINE Big0
#DEFINE Big1
#DEFINE Kmax
#DEFINE BIGINT_MINIMUM_K
#DEFINE BIGINT_HEADER_SIZE
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF IBM
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFDEF VAX
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF VAX
#ELSE
#ENDIF
#IFNDEF IBM
#IFNDEF Sudden_Underflow
#ENDIF
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF IBM
#ELSE
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF IBM
#ELSE
#ENDIF
#IFDEF VAX
#ENDIF
#IFDEF IEEE_Arith
#DEFINE n_bigtens
#ELSE
#IFDEF IBM
#DEFINE n_bigtens
#ELSE
#DEFINE n_bigtens
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF RND_PRODQUOT
#ENDIF
#IFDEF VAX
#ELSE
#ENDIF
#IFDEF VAX
#ELSE
#ENDIF
#IFNDEF Inaccurate_Divide
#ENDIF
#IF
#UNDEF HUGE_VAL
#ENDIF
#IFNDEF HUGE_VAL
#DEFINE HUGE_VAL
#ENDIF
#IFDEF Sudden_Underflow
#IFDEF IBM
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF Sudden_Underflow
#IFDEF IBM
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF IBM
#ELSE
#ENDIF
#IFNDEF ROUND_BIASED
#ENDIF
#IFNDEF ROUND_BIASED
#IFNDEF Sudden_Underflow
#ENDIF
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF Check_FLT_ROUNDS
#ELSE
#ENDIF
#IFDEF Sudden_Underflow
#IFDEF IBM
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IF
#IFDEF IEEE_Arith
#ELSE
#ENDIF
#IFDEF IEEE_Arith
#ENDIF
#ENDIF
#IFDEF IBM
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF IBM
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFNDEF No_leftright
#ENDIF
#IFNDEF No_leftright
#ENDIF
#IFDEF Check_FLT_ROUNDS
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF IBM
#ELSE
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFNDEF ROUND_BIASED
#ENDIF
#IFNDEF ROUND_BIASED
#ENDIF
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdlib.h
#ENDIF
< string.h
#IF
#ENDIF
#IF
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE BAD_DELTA
#IFDEF TODO
#ENDIF
#IF
#ENDIF
#IFDEF TODO
#IF
#DEFINE IO_CLEANUP
#ENDIF
#IFDEF IO_CLEANUP
#ELSE
#ENDIF
#ENDIF
#IFDEF weak_alias
#ELIF
#ENDIF
#IFDEF text_set_element
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdlib.h
#ENDIF
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
#IFDEF __STDC__
< stdlib.h
#ENDIF
" libioP.h
< fcntl.h
#IFNDEF _IO_fcntl
#DEFINE _IO_fcntl
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF F_GETFL
#IFNDEF O_ACCMODE
#DEFINE O_ACCMODE
#ENDIF
#IFDEF F_SETFL
#ENDIF
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IF
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
< stdio.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
< stdio.h
__E__O__F__
" libioP.h
< errno.h
#IFDEF EIO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
< stdio.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdlib.h
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IF
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
" libioP.h
< string.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
< libioP.h
< errno.h
#IFDEF EIO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
< errno.h
#IFDEF EIO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_getc
#UNDEF getc
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
#IFDEF __STDC__
< stdlib.h
#ENDIF
" libioP.h
< string.h
< errno.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
< string.h
#IF
#ENDIF
__E__O__F__
" libioP.h
< limits.h
#IFDEF weak_alias
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
" libioP.h
__E__O__F__
" libioP.h
#DEFINE PADSIZE
__E__O__F__
" libioP.h
< errno.h
< string.h
#IFNDEF errno
#ENDIF
#IFNDEF _IO_strerror
#ENDIF
__E__O__F__
" libioP.h
#IF
< signal.h
< unistd.h
#IFDEF __STDC__
< stdlib.h
#ENDIF
#IFDEF _LIBC
< unistd.h
#ENDIF
< sys/types.h
< sys/wait.h
#IFNDEF _IO_fork
#DEFINE _IO_fork
#ENDIF
#ENDIF
#IFNDEF _IO_pipe
#DEFINE _IO_pipe
#ENDIF
#IFNDEF _IO_dup2
#DEFINE _IO_dup2
#ENDIF
#IFNDEF _IO_waitpid
#DEFINE _IO_waitpid
#ENDIF
#IFNDEF _IO_execl
#DEFINE _IO_execl
#ENDIF
#IFNDEF _IO__exit
#DEFINE _IO__exit
#ENDIF
#IFNDEF _IO_close
#DEFINE _IO_close
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IF
#ENDIF
#IFDEF strong_alias
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" libioP.h
< sys/types.h
< sys/stat.h
< unistd.h
#IFDEF TODO
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_putc
#UNDEF putc
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
< string.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
< libioP.h
__E__O__F__
< libioP.h
__E__O__F__
" libioP.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#DEFINE _IOFBF
#DEFINE _IOLBF
#DEFINE _IONBF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
" libioP.h
__E__O__F__
" libioP.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
#IF
#ENDIF
< sys/types.h
" libioP.h
< string.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFNDEF _IO_USE_DTOA
#ENDIF
#IFNDEF NO_FLOATING_POINT
#DEFINE FLOATING_POINT
#ENDIF
#IFDEF FLOATING_POINT
" floatio.h
#DEFINE BUF
#DEFINE DEFPREC
#ELSE
#DEFINE BUF
#ENDIF
#DEFINE to_digit
#DEFINE is_digit
#DEFINE to_char
#DEFINE LONGINT
#DEFINE LONGDBL
#DEFINE SHORTINT
#DEFINE ALT
#DEFINE LADJUST
#DEFINE ZEROPAD
#DEFINE HEXPREFIX
#IFDEF FLOATING_POINT
#IFNDEF _IO_USE_DTOA
#ENDIF
#ENDIF
#DEFINE PRINT
#DEFINE PAD_SP
#DEFINE PAD_0
#DEFINE SARG
#DEFINE UARG
#IF
#ENDIF
#IFDEF FLOATING_POINT
#ENDIF
#IFDEF FLOATING_POINT
#IFDEF _IO_USE_DTOA
#ELSE
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
#IF
#ENDIF
< libioP.h
< ctype.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFNDEF NO_FLOATING_POINT
#DEFINE FLOATING_POINT
#ENDIF
#IFDEF FLOATING_POINT
" floatio.h
#DEFINE BUF
#ELSE
#DEFINE BUF
#ENDIF
#DEFINE LONG
#DEFINE LONGDBL
#DEFINE SHORT
#DEFINE SUPPRESS
#DEFINE POINTER
#DEFINE NOSKIP
#DEFINE WIDTH
#DEFINE SIGNOK
#DEFINE NDIGITS
#DEFINE DPTOK
#DEFINE EXPOK
#DEFINE PFXOK
#DEFINE NZDIGITS
#DEFINE CT_CHAR
#DEFINE CT_CCL
#DEFINE CT_STRING
#DEFINE CT_INT
#DEFINE CT_FLOAT
#DEFINE u_char
#DEFINE u_long
#IFDEF __cplusplus
#ENDIF
#IFNDEF _IO_USE_DTOA
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF FLOATING_POINT
#ENDIF
#IFDEF FLOATING_POINT
#IFDEF _IO_USE_DTOA
#ELSE
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" libioP.h
" strfile.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
" strfile.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
#IFDEF _IO_USE_DTOA
#DEFINE PUT
#DEFINE PUTN
#DEFINE PADN
#DEFINE EBUF_SIZE
#DEFINE EBUF_END
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_peekc
__E__O__F__
" libioP.h
#IFDEF _IO_MTSAFE_IO
#DEFINE DEF_STDFILE
#ELSE
#DEFINE DEF_STDFILE
#ENDIF
__E__O__F__
" strfile.h
" libioP.h
< string.h
#IF
#DEFINE ALLOCATED
#DEFINE CONSTANT
#DEFINE ALSIZE
#DEFINE PALLOC
#DEFINE PFREE
#ENDIF
#IFDEF TODO
#ENDIF
#IF
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
__E__O__F__
" libioP.h
" stdio.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF feof_unlocked
__E__O__F__
" libioP.h
" stdio.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF ferror_unlocked
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#IFDEF _IO_MTSAFE_IO
#IFDEF weak_alias
#ENDIF
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#UNDEF fputc_unlocked
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_getc
#UNDEF getc
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF getc_unlocked
__E__O__F__
" libioP.h
" stdio.h
#UNDEF getchar
__E__O__F__
" libioP.h
" stdio.h
#UNDEF getchar_unlocked
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
#IFDEF __STDC__
< stdlib.h
#ENDIF
" libioP.h
< string.h
< errno.h
< obstack.h
< stdarg.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
< errno.h
#IF
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_putc
#UNDEF putc
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF putc_unlocked
__E__O__F__
" libioP.h
" stdio.h
#UNDEF putchar
__E__O__F__
" libioP.h
" stdio.h
#UNDEF putchar_unlocked
__E__O__F__
" libioP.h
" stdio.h
#UNDEF putw
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#UNDEF setlinebuf
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
< malloc.h
" libioP.h
" stdio.h
" strfile.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#UNDEF vscanf
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" strfile.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
#IFNDEF STDIO_H
#DEFINE STDIO_H
#ENDIF
#DEFINE SCAN
__E__O__F__
" tconfig.h
" runtime.h
" typedstream.h
" encoding.h
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#DEFINE ROUND
#DEFINE PTR2LONG
#DEFINE LONG2PTR
__E__O__F__
" runtime.h
" sarray.h
#DEFINE CLASS_HASH_SIZE
#DEFINE CLASSOF
__E__O__F__
" tconfig.h
" objc-api.h
" encoding.h
#DEFINE MAX
#DEFINE MIN
#DEFINE ROUND
#DEFINE TREE_CODE
#DEFINE TREE_TYPE
#DEFINE RECORD_TYPE
#DEFINE UNION_TYPE
#DEFINE QUAL_UNION_TYPE
#DEFINE ARRAY_TYPE
#DEFINE TYPE_FIELDS
#DEFINE DECL_MODE
#DEFINE DFmode
#DEFINE get_inner_array_type
#IFDEF STRUCTURE_SIZE_BOUNDARY
#ENDIF
#IF
#ENDIF
#IFDEF BIGGEST_FIELD_ALIGNMENT
#ENDIF
#IFDEF ADJUST_FIELD_ALIGN
#ENDIF
#IFNDEF PCC_BITFIELD_TYPE_MATTERS
#ELSE
#IF
#ENDIF
#ENDIF
#IFDEF ROUND_TYPE_ALIGN
#ELSE
#ENDIF
#IFDEF ROUND_TYPE_SIZE
#ELSE
#ENDIF
__E__O__F__
" tconfig.h
" objc.h
" encoding.h
< assert.h
< string.h
#IF
< gc.h
#IF
#DEFINE LOGWL
#DEFINE modWORDSZ
#ENDIF
#IF
#DEFINE LOGWL
#DEFINE modWORDSZ
#ENDIF
#DEFINE divWORDSZ
< gc_typed.h
#DEFINE ROUND
#DEFINE SET_BIT_FOR_OFFSET
#DEFINE DEBUG
#IFDEF DEBUG
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" assert.h
" hash.h
" runtime.h
#DEFINE FULLNESS
#DEFINE EXPANSION
#IFDEF DEBUG
#ENDIF
__E__O__F__
" runtime.h
#DEFINE OBJC_VERSION
#DEFINE PROTOCOL_VERSION
#IFDEF DEBUG
#ENDIF
#IFDEF DEBUG
#ENDIF
#IF
#ENDIF
__E__O__F__
< windows.h
__E__O__F__
#DEFINE __USE_FIXED_PROTOTYPES__
< stdlib.h
" runtime.h
#IF
< gc.h
#ELSE
#ENDIF
__E__O__F__
" runtime.h
__E__O__F__
" tconfig.h
" objc.h
" runtime.h
#IF
< gc.h
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" sarray.h
" runtime.h
< stdio.h
" assert.h
#IFDEF OBJC_SPARSE2
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF __alpha__
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF PRECOMPUTE_SELECTORS
#IFDEF OBJC_SPARSE3
#ENDIF
#ELSE
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
__E__O__F__
" runtime.h
" sarray.h
" encoding.h
#DEFINE SELECTOR_HASH_SIZE
__E__O__F__
" tconfig.h
" runtime.h
" sarray.h
" encoding.h
" runtime-info.h
#DEFINE gen_rtx
#DEFINE gen_rtx_MEM
#DEFINE rtx
#IF
#DEFINE INVISIBLE_STRUCT_RETURN
#ELSE
#DEFINE INVISIBLE_STRUCT_RETURN
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF OBJC_MAX_STRUCT_BY_VALUE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE2
#ELSE
#ENDIF
__E__O__F__
< pthread.h
< thr.h
" runtime.h
__E__O__F__
< pthread.h
< objc/thr.h
" runtime.h
__E__O__F__
< stdlib.h
< sys/types.h
< sys/sysmp.h
< sys/prctl.h
< ulocks.h
< objc/thr.h
" runtime.h
__E__O__F__
< mach/mach.h
< mach/cthreads.h
< objc/thr.h
" runtime.h
__E__O__F__
< objc/thr.h
" runtime.h
#DEFINE INCL_DOSSEMAPHORES
#DEFINE INCL_DOSPROCESS
#DEFINE SEL
#DEFINE BOOL
#DEFINE id
< os2.h
#UNDEF id
#UNDEF SEL
#UNDEF BOOL
< stdlib.h
__E__O__F__
< objc/thr.h
" runtime.h
< pthread.h
__E__O__F__
< pcthread.h
< objc/thr.h
" runtime.h
__E__O__F__
< objc/thr.h
" runtime.h
__E__O__F__
< objc/thr.h
" runtime.h
< thread.h
< synch.h
< errno.h
__E__O__F__
< objc/thr.h
" runtime.h
__E__O__F__
< objc/thr.h
" runtime.h
#IFNDEF __OBJC__
#DEFINE __OBJC__
#ENDIF
< windows.h
__E__O__F__
< stdlib.h
" runtime.h
__E__O__F__
< stdio.h
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ENDIF
#IF
< string.h
#ENDIF
< sys/errno.h
" general.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
" info-utils.h
" filesys.h
" tilde.h
__E__O__F__
" info.h
" display.h
__E__O__F__
" doc.h
" funs.h
__E__O__F__
" info.h
" dribble.h
#IF
#IF
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" info.h
#IF
#IF
#DEFINE fd_set_cast
#ELSE
#DEFINE fd_set_cast
#ENDIF
#ENDIF
#IF
#ENDIF
#DEFINE alphabetic
#IFDEF SPLIT_BEFORE_ACTIVE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
< sys/time.h
#DEFINE HAVE_STRUCT_TIMEVAL
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
#IF
#IF
#DEFINE fd_set_cast
#ELSE
#DEFINE fd_set_cast
#ENDIF
#ENDIF
#IF
#ENDIF
#DEFINE alphabetic
#IF
#ELSE
#ENDIF
#IF
< sys/time.h
#DEFINE HAVE_STRUCT_TIMEVAL
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
" tilde.h
" filesys.h
#IF
#ELSE
#ENDIF
#DEFINE BASIC_PIPE_BUFFER
#DEFINE FILESYS_PIPE_BUFFER_SIZE
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
#DEFINE FOOTNOTE_HEADER_FORMAT
#IF
#ENDIF
__E__O__F__
" info.h
__E__O__F__
" info.h
" indices.h
#DEFINE APROPOS_NONE
__E__O__F__
" info.h
" info-utils.h
#IF
" man.h
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" info.h
" indices.h
" dribble.h
" getopt.h
#IF
" man.h
#ENDIF
#DEFINE APROPOS_OPTION
#DEFINE DRIBBLE_OPTION
#DEFINE RESTORE_OPTION
#DEFINE IDXSRCH_OPTION
#IFDEF HAVE_SETLOCALE
#ENDIF
#IFDEF INFODIR
#ENDIF
#IFDEF INFODIR
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" info.h
" infomap.h
" funs.h
" terminal.h
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
__E__O__F__
" info.h
#IF
#ENDIF
#DEFINE DECLARATION_STRING
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" info.h
< sys/ioctl.h
" signals.h
#IF
< sys/time.h
#ENDIF
#IF
< sys/wait.h
#ENDIF
" tilde.h
" man.h
#IF
#DEFINE pid_t
#ENDIF
#IF
#IF
#DEFINE fd_set_cast
#ELSE
#DEFINE fd_set_cast
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" info.h
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
" nodes.h
" search.h
" filesys.h
" info-utils.h
#IF
" man.h
#ENDIF
#DEFINE DEFAULT_INFO_FUDGE
#DEFINE INFO_NO_TAGS
#DEFINE INFO_GET_TAGS
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
" search.h
" nodes.h
#IF
#ENDIF
__E__O__F__
" info.h
< sys/ioctl.h
#IF
< sys/time.h
#DEFINE HAVE_STRUCT_TIMEVAL
#ENDIF
#IF
" man.h
#ENDIF
#DEFINE DEBUG_FORGET_WINDOW_AND_NODES
#IF
#ENDIF
#IF
#ENDIF
#DEFINE alphabetic
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#DEFINE GOTO_COMPLETES
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#DEFINE VERBOSE_NODE_DUMPING
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE DEFAULT_INFO_PRINT_COMMAND
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE MAX_INFO_INPUT_BUFFERING
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#IFDEF EINTR
#ELSE
#ENDIF
__E__O__F__
" info.h
" signals.h
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" info.h
" terminal.h
" termdep.h
< sys/types.h
< signal.h
#IFDEF HAVE_NCURSES_TERMCAP_H
< ncurses/termcap.h
#ELSE
#IFDEF HAVE_TERMCAP_H
< termcap.h
#ELSE
#UNDEF PC
#ENDIF
#ENDIF
#DEFINE send_to_terminal
#IFDEF SIGWINCH
#ENDIF
#IFDEF SIGWINCH
#ENDIF
#IFDEF SIGWINCH
#ENDIF
#IFDEF SIGWINCH
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#IF
#IFDEF ONLCR
#ENDIF
#IFDEF OCRNL
#ENDIF
#IFDEF VLNEXT
#ENDIF
#ENDIF
#IF
#ELSE
#IF
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#IF
#ELSE
#IF
#ELSE
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#IFDEF _AIX
#PRAGMA alloca
#ENDIF
" info.h
#IFDEF __GNUC__
#UNDEF alloca
#DEFINE alloca
#ELSE
#IFDEF HAVE_ALLOCA_H
< alloca.h
#ELSE
#IFNDEF _AIX
#ENDIF
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#UNDEF NULL
< stdio.h
#ENDIF
__E__O__F__
" info.h
" variables.h
__E__O__F__
" info.h
" nodes.h
" window.h
" display.h
" info-utils.h
" infomap.h
#DEFINE ECHO_AREA_HEIGHT
#DEFINE echo_area_required
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE grow_me_shrinking_next
#DEFINE grow_me_shrinking_prev
#DEFINE shrink_me_growing_next
#DEFINE shrink_me_growing_prev
__E__O__F__
#IF
< stdio.h
< sys/types.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
< stdlib.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ELSE
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
#DEFINE BINDTEXTDOMAIN
#DEFINE strdup
#ELSE
#DEFINE BINDTEXTDOMAIN
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< stdio.h
#IFDEF STDC_HEADERS
< stdlib.h
< string.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ENDIF
#ENDIF
#IFDEF HAVE_NL_TYPES_H
< nl_types.h
#ENDIF
" libgettext.h
#IFDEF _LIBC
#DEFINE HAVE_LOCALE_NULL
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#ENDIF
#UNDEF gettext
#IF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< sys/types.h
#IFDEF __GNUC__
#DEFINE alloca
#DEFINE HAVE_ALLOCA
#ELSE
#IF
< alloca.h
#ELSE
#IFDEF _AIX
#PRAGMA alloca
#ELSE
#IFNDEF alloca
#ENDIF
#ENDIF
#ENDIF
#ENDIF
< errno.h
#IFNDEF errno
#ENDIF
#IFNDEF __set_errno
#DEFINE __set_errno
#ENDIF
#IF
< stdlib.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ELSE
#ENDIF
#ENDIF
#IF
#IFNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#ENDIF
< string.h
#ELSE
< strings.h
#ENDIF
#IF
#IFNDEF strchr
#DEFINE strchr
#ENDIF
#ENDIF
#IF
< unistd.h
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
" hash-string.h
#IFDEF _LIBC
#DEFINE getcwd
#DEFINE stpcpy
#ELSE
#IF
#DEFINE getcwd
#ELSE
#ENDIF
#IFNDEF HAVE_STPCPY
#ENDIF
#ENDIF
#DEFINE PATH_INCR
#IF
< limits.h
#ENDIF
#IFNDEF _POSIX_PATH_MAX
#DEFINE _POSIX_PATH_MAX
#ENDIF
#IF
#DEFINE PATH_MAX
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
#DEFINE PATH_MAX
#ENDIF
#IFNDEF PATH_MAX
#DEFINE PATH_MAX
#ENDIF
#IFDEF _LIBC
#DEFINE HAVE_LOCALE_NULL
#ENDIF
#IFDEF HAVE_ALLOCA
#DEFINE ADD_BLOCK
#DEFINE FREE_BLOCKS
#ELSE
#DEFINE ADD_BLOCK
#DEFINE FREE_BLOCKS
#UNDEF alloca
#DEFINE alloca
#ENDIF
#IFDEF _LIBC
#DEFINE DCGETTEXT
#ELSE
#DEFINE DCGETTEXT
#ENDIF
#IFNDEF HAVE_ALLOCA
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF LC_COLLATE
#ENDIF
#IFDEF LC_CTYPE
#ENDIF
#IFDEF LC_MONETARY
#ENDIF
#IFDEF LC_NUMERIC
#ENDIF
#IFDEF LC_TIME
#ENDIF
#IFDEF LC_MESSAGES
#ENDIF
#IFDEF LC_RESPONSE
#ENDIF
#IFDEF LC_ALL
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
< locale.h
#ENDIF
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
#IFDEF _LIBC
#DEFINE DGETTEXT
#DEFINE DCGETTEXT
#ELSE
#DEFINE DGETTEXT
#DEFINE DCGETTEXT
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
< string.h
< sys/types.h
" loadinfo.h
#IFNDEF NULL
#IF
#DEFINE NULL
#ELSE
#DEFINE NULL
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< ctype.h
< errno.h
< stdio.h
< sys/types.h
#IF
< stdlib.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ELSE
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IF
#IFNDEF strchr
#DEFINE strchr
#ENDIF
#ENDIF
#IF
< unistd.h
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFDEF _LIBC
#DEFINE __need_NULL
< stddef.h
#ELSE
#IFDEF STDC_HEADERS
< stdlib.h
#ELSE
#IFDEF HAVE_STRING_H
< string.h
#ELSE
#DEFINE NULL
#ENDIF
#ENDIF
#ENDIF
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
#IFDEF _LIBC
#DEFINE GETTEXT
#DEFINE DGETTEXT
#ELSE
#DEFINE GETTEXT
#DEFINE DGETTEXT
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" libgettext.h
#UNDEF gettext
#UNDEF dgettext
#UNDEF dcgettext
#UNDEF textdomain
#UNDEF bindtextdomain
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
#IFNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#ENDIF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IF
#IFNDEF strchr
#DEFINE strchr
#ENDIF
#ENDIF
#IF
< argz.h
#ENDIF
< ctype.h
< sys/types.h
#IF
< stdlib.h
#ENDIF
" loadinfo.h
#IFNDEF NULL
#IF
#DEFINE NULL
#ELSE
#DEFINE NULL
#ENDIF
#ENDIF
#IFDEF _LIBC
#DEFINE stpcpy
#ELSE
#IFNDEF HAVE_STPCPY
#ENDIF
#ENDIF
#IF
#UNDEF __argz_count
#DEFINE __argz_count
#ENDIF
#IF
#UNDEF __argz_stringify
#DEFINE __argz_stringify
#ENDIF
#IF
#UNDEF __argz_next
#DEFINE __argz_next
#ENDIF
#IF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< fcntl.h
< sys/types.h
< sys/stat.h
#IF
< stdlib.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< sys/mman.h
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
#DEFINE fstat
#DEFINE open
#DEFINE close
#DEFINE read
#DEFINE mmap
#DEFINE munmap
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
< ctype.h
< stdio.h
< sys/types.h
#IFDEF __GNUC__
#DEFINE alloca
#DEFINE HAVE_ALLOCA
#ELSE
#IF
< alloca.h
#ELSE
#IFDEF _AIX
#PRAGMA alloca
#ELSE
#IFNDEF alloca
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IF
< stdlib.h
#ELSE
#IFDEF HAVE_MALLOC_H
< malloc.h
#ELSE
#ENDIF
#ENDIF
#IF
#IFNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#ENDIF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IF
#IFNDEF strchr
#DEFINE strchr
#ENDIF
#ENDIF
" gettext.h
" gettextP.h
#IFDEF _LIBC
#DEFINE strcasecmp
#ENDIF
#IFDEF HAVE_ALLOCA
#DEFINE ADD_BLOCK
#DEFINE FREE_BLOCKS
#ELSE
#DEFINE ADD_BLOCK
#DEFINE FREE_BLOCKS
#UNDEF alloca
#DEFINE alloca
#ENDIF
#IFNDEF HAVE_ALLOCA
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#IFNDEF memcpy
#DEFINE memcpy
#ENDIF
#ENDIF
#IFDEF _LIBC
< libintl.h
#ELSE
" libgettext.h
#ENDIF
#IFDEF _LIBC
#DEFINE TEXTDOMAIN
#DEFINE strdup
#ELSE
#DEFINE TEXTDOMAIN
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFDEF HAVE_STRING_H
< string.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#IFDEF emacs
" blockinput.h
#ENDIF
#IF
#IFNDEF alloca
#IFDEF emacs
#IFDEF static
#IFNDEF STACK_DIRECTION
#ENDIF
#ENDIF
#ENDIF
#IF
#DEFINE ADDRESS_FUNCTION
#ELSE
#DEFINE ADDRESS_FUNCTION
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#IFNDEF emacs
#DEFINE malloc
#ENDIF
#IFNDEF STACK_DIRECTION
#DEFINE STACK_DIRECTION
#ENDIF
#IF
#DEFINE STACK_DIR
#ELSE
#DEFINE STACK_DIR
#ENDIF
#IFNDEF ALIGN_SIZE
#DEFINE ALIGN_SIZE
#ENDIF
#IF
#ENDIF
#IFDEF emacs
#ENDIF
#IFDEF emacs
#ENDIF
#IF
#IFDEF DEBUG_I00AFUNC
< stdio.h
#ENDIF
#IFNDEF CRAY_STACK
#DEFINE CRAY_STACK
#IFNDEF CRAY2
#ELSE
#ENDIF
#ENDIF
#IFDEF CRAY2
#ELSE
#IFDEF DEBUG_I00AFUNC
#ENDIF
#IFDEF DEBUG_I00AFUNC
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#IFNDEF _NO_PROTO
#DEFINE _NO_PROTO
#ENDIF
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< stdio.h
#DEFINE GETOPT_INTERFACE_VERSION
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IFDEF __GNU_LIBRARY__
< stdlib.h
< unistd.h
#ENDIF
#IFDEF VMS
< unixlib.h
#IF
< string.h
#ENDIF
#ENDIF
#IFNDEF _
#IFDEF HAVE_LIBINTL_H
< libintl.h
#DEFINE _
#ELSE
#DEFINE _
#ENDIF
#ENDIF
" getopt.h
#IFDEF __GNU_LIBRARY__
< string.h
#DEFINE my_index
#ELSE
#IFDEF __GNUC__
#IF
#ENDIF
#ENDIF
#ENDIF
#IFDEF _LIBC
#IFDEF text_set_element
#ENDIF
#DEFINE SWAP_FLAGS
#ELSE
#DEFINE SWAP_FLAGS
#ENDIF
#IF
#ENDIF
#IFDEF _LIBC
#ENDIF
#IF
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#DEFINE NONOPTION_P
#ELSE
#DEFINE NONOPTION_P
#ENDIF
#ENDIF
#IFDEF TEST
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" getopt.h
#IF
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< stdio.h
#DEFINE GETOPT_INTERFACE_VERSION
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IFDEF __GNU_LIBRARY__
< stdlib.h
#ENDIF
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#ENDIF
#IFDEF TEST
< stdio.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFDEF STDC_HEADERS
< string.h
< stdlib.h
#ELSE
#ENDIF
__E__O__F__
#IF
< stdio.h
#ENDIF
__E__O__F__
#IF
< stdio.h
< sys/types.h
#ENDIF
__E__O__F__
#IF
< config.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFDEF HAVE_STRING_H
< string.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#IFDEF emacs
" blockinput.h
#ENDIF
#IF
#IFNDEF alloca
#IFDEF emacs
#IFDEF static
#IFNDEF STACK_DIRECTION
#ENDIF
#ENDIF
#ENDIF
#IF
#DEFINE ADDRESS_FUNCTION
#ELSE
#DEFINE ADDRESS_FUNCTION
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#IFNDEF emacs
#DEFINE malloc
#ENDIF
#IFNDEF STACK_DIRECTION
#DEFINE STACK_DIRECTION
#ENDIF
#IF
#DEFINE STACK_DIR
#ELSE
#DEFINE STACK_DIR
#ENDIF
#IFNDEF ALIGN_SIZE
#DEFINE ALIGN_SIZE
#ENDIF
#IF
#ENDIF
#IFDEF emacs
#ENDIF
#IFDEF emacs
#ENDIF
#IF
#IFDEF DEBUG_I00AFUNC
< stdio.h
#ENDIF
#IFNDEF CRAY_STACK
#DEFINE CRAY_STACK
#IFNDEF CRAY2
#ELSE
#ENDIF
#ENDIF
#IFDEF CRAY2
#ELSE
#IFDEF DEBUG_I00AFUNC
#ENDIF
#IFDEF DEBUG_I00AFUNC
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#IF
#IFDEF VMS
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IFNDEF _NO_PROTO
#DEFINE _NO_PROTO
#ENDIF
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< stdio.h
#IF
#IFDEF __GNU_LIBRARY__
< stdlib.h
#ENDIF
#IF
< libintl.h
#ELSE
#DEFINE gettext
#ENDIF
" getopt.h
#IFDEF __GNU_LIBRARY__
< string.h
#DEFINE my_index
#ELSE
#IFDEF __GNUC__
#IF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF TEST
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" getopt.h
#IF
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< stdio.h
#IF
#IFDEF __GNU_LIBRARY__
< stdlib.h
#ELSE
#ENDIF
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#ENDIF
#IFDEF TEST
< stdio.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFDEF STDC_HEADERS
< string.h
< stdlib.h
#ELSE
#ENDIF
__E__O__F__
#IFDEF _AIX
#PRAGMA alloca
#ENDIF
" system.h
" getopt.h
#IFDEF TM_IN_SYS_TIME
< sys/time.h
#ELSE
< time.h
#ENDIF
#IFDEF __GNUC__
#UNDEF alloca
#DEFINE alloca
#ELSE
#IFDEF HAVE_ALLOCA_H
< alloca.h
#ELSE
#IFNDEF _AIX
#ENDIF
#ENDIF
#ENDIF
#IF
#IF
< stdarg.h
#DEFINE VA_START
#ELSE
< varargs.h
#DEFINE VA_START
#ENDIF
#DEFINE VA_FPRINTF
#DEFINE VA_SPRINTF
#ELSE
#DEFINE VA_START
#DEFINE va_alist
#DEFINE va_dcl
#DEFINE va_end
#ENDIF
#DEFINE DEFAULT_INDENTATION_INCREMENT
#DEFINE PARAGRAPH_START_INDENT
#DEFINE DEFAULT_PARAGRAPH_SPACING
#DEFINE HAVE_MACROS
#DEFINE COMPILING_MAKEINFO
" makeinfo.h
#IF
#ENDIF
#DEFINE looking_at
#DEFINE INITIAL_PARAGRAPH_SPACE
#DEFINE PREV_ERROR
#DEFINE NEXT_ERROR
#DEFINE UP_ERROR
#DEFINE NO_WARN
#DEFINE IS_TOP
#DEFINE SET
#DEFINE CLEAR
#DEFINE IFSET
#DEFINE IFCLEAR
#IF
#DEFINE ME_RECURSE
#DEFINE ME_QUOTE_ARG
#ENDIF
#DEFINE START
#DEFINE END
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#DEFINE NO_BRACE_ARGS
#DEFINE BRACE_ARGS
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF VA_FPRINTF
#ENDIF
#IFDEF VA_FPRINTF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF VA_FPRINTF
#ENDIF
#IFDEF VA_FPRINTF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF VA_FPRINTF
#ENDIF
#IFDEF VA_FPRINTF
#ELSE
#ENDIF
#IFDEF HAVE_SETLOCALE
#IFDEF HAVE_LC_MESSAGES
#ENDIF
#ENDIF
#IF
#IFDEF VMS
#ELSE
#ENDIF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF WIN32
#ENDIF
#DEFINE READ_BUFFER_GROWTH
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF VA_FPRINTF
#ENDIF
#IFDEF VA_SPRINTF
#ELSE
#ENDIF
#DEFINE post_sentence
#IF
#ENDIF
#DEFINE max_stack_depth
#DEFINE ENUM_DIGITS
#DEFINE ENUM_ALPHA
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE menu_starter
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF VA_FPRINTF
#ENDIF
#IFDEF VA_SPRINTF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#DEFINE DEFUN_SELF_DELIMITING
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE INDEX_COMMAND_SUFFIX
#IF
#ENDIF
#IF
#ENDIF
#DEFINE SeparateNode
#DEFINE EndNode
#IF
#ENDIF
#IFDEF WIN32
#ENDIF
__E__O__F__
" system.h
" makeinfo.h
#DEFINE MAXCOLS
#DEFINE CHAR_ADDR
#DEFINE CHAR_AT
#UNDEF CHAR_AT
#UNDEF CHAR_ADDR
#IF
#ENDIF
__E__O__F__
#IF
< config.h
#ENDIF
" libgettext.h
__E__O__F__
< stdio.h
< ctype.h
< errno.h
__E__O__F__
" system.h
< getopt.h
#IFDEF HAVE_LIBZ
< zlib.h
#ENDIF
#IFDEF HAVE_SETLOCALE
#ENDIF
#IFDEF HAVE_LIBZ
#ENDIF
#IFDEF HAVE_LIBZ
#ENDIF
#IFDEF HAVE_LIBZ
#ENDIF
#IFDEF HAVE_LIBZ
#ENDIF
__E__O__F__
" system.h
< getopt.h
#IF
" ../src/config.h
#UNDEF read
#UNDEF close
#UNDEF write
#UNDEF open
#ENDIF
#IF
#UNDEF memset
#DEFINE memset
#ENDIF
#IF
< file.h
#DEFINE TI_NO_ERROR
#DEFINE TI_FATAL_ERROR
#DEFINE unlink
#ELSE
#DEFINE TI_NO_ERROR
#DEFINE TI_FATAL_ERROR
#ENDIF
#IF
#DEFINE SEEK_SET
#DEFINE SEEK_CUR
#DEFINE SEEK_END
#ENDIF
#DEFINE MAX_IN_CORE_SORT
#IFDEF HAVE_SETLOCALE
#ENDIF
#IFDEF VMS
#ELSE
#ENDIF
#DEFINE BUFSIZE
#DEFINE MAX_DIRECT_MERGE
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" libioP.h
#IF
< stdlib.h
#ELSE
#ENDIF
__E__O__F__
< stdio.h
#DEFINE MAXWORD
#IFDEF DBZ_FINISH
#ENDIF
__E__O__F__
< stdio.h
" string.h
" case.h
#DEFINE OFFSET
#DEFINE MAPSIZE
#IFDEF NONSTANDARD
#IFDEF RFCVIOLATION
#IFDEF B_2_11_MISTAKE
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
< stdio.h
< sys/types.h
< string.h
< ctype.h
< errno.h
#IFNDEF __STDC__
#ENDIF
< dbz.h
#IFDEF FUNNYSEEKS
< unistd.h
#ELSE
#DEFINE SEEK_SET
#ENDIF
#IFDEF OVERFLOW
< limits.h
#ENDIF
#IFDEF INDEX_SIZE
#DEFINE DEFSIZE
#ENDIF
#DEFINE SOF
#DEFINE VACANT
#DEFINE BIAS
#DEFINE UNBIAS
#DEFINE HASTAG
#DEFINE TAG
#DEFINE NOTAG
#DEFINE CANTAG
#DEFINE MKTAG
#IFNDEF DEFSIZE
#DEFINE DEFSIZE
#ENDIF
#IFDEF OLDBNEWS
#DEFINE DEFCASE
#DEFINE NOBUFFER
#ENDIF
#IFDEF BNEWS
#DEFINE DEFCASE
#DEFINE NOBUFFER
#ENDIF
#IFNDEF DEFCASE
#DEFINE DEFCASE
#ENDIF
#IFNDEF NOTAGS
#DEFINE TAGENB
#DEFINE TAGMASK
#DEFINE TAGSHIFT
#ELSE
#DEFINE TAGENB
#DEFINE TAGMASK
#DEFINE TAGSHIFT
#ENDIF
#IFNDEF NMEMORY
#DEFINE NMEMORY
#ENDIF
#DEFINE NUSEDS
#IFDEF INCORE
#ELSE
#ENDIF
#IFNDEF NPAGBUF
#DEFINE NPAGBUF
#ENDIF
#IFNDEF NOBUFFER
#IFDEF _IOFBF
#ENDIF
#ENDIF
#IFNDEF SHISTBUF
#DEFINE SHISTBUF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#IFNDEF MAXRUN
#DEFINE MAXRUN
#ENDIF
#DEFINE FRESH
#DEFINE NOTFOUND
#DEFINE MAPIN
#DEFINE MAPOUT
#IFDEF DBZDEBUG
#DEFINE DEBUG
#ELSE
#DEFINE DEBUG
#ENDIF
#IFDEF NOBUFFER
#ELSE
#IFDEF _IOFBF
#ENDIF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#DEFINE MAXN
#IFDEF OVERFLOW
#ENDIF
#IFDEF OVERFLOW
#ENDIF
#DEFINE POLY
#DEFINE OFFSET
#DEFINE TOLOW
#DEFINE CISTREQN
#DEFINE MAPSIZE
#IFDEF DBZDEBUG
#ELSE
#ENDIF
__E__O__F__
< stdio.h
< sys/types.h
< sys/stat.h
< string.h
< dbz.h
#IFDEF FUNNYSEEKS
< unistd.h
#ELSE
#DEFINE SEEK_SET
#ENDIF
#DEFINE STREQ
#IFNDEF lint
#ENDIF
#DEFINE DEFBUF
#IFDEF HAVERFCIZE
#ELSE
#DEFINE rfc822ize
#ENDIF
#IFDEF DBZ_FINISH
#ENDIF
__E__O__F__
< stdio.h
< sys/types.h
< sys/stat.h
< string.h
#DEFINE MAXSTR
#DEFINE STREQ
#IFNDEF lint
#ENDIF
#IFDEF DBZ_FINISH
#ENDIF
__E__O__F__
__E__O__F__
< stdio.h
< sys/types.h
< string.h
< ctype.h
< errno.h
#IFNDEF __STDC__
#ENDIF
< dbz.h
#IFDEF FUNNYSEEKS
< unistd.h
#ELSE
#DEFINE SEEK_SET
#ENDIF
#IFDEF OVERFLOW
< limits.h
#ENDIF
#IFDEF INDEX_SIZE
#DEFINE DEFSIZE
#ENDIF
#DEFINE SOF
#DEFINE VACANT
#DEFINE BIAS
#DEFINE UNBIAS
#DEFINE HASTAG
#DEFINE TAG
#DEFINE NOTAG
#DEFINE CANTAG
#DEFINE MKTAG
#IFNDEF DEFSIZE
#DEFINE DEFSIZE
#ENDIF
#IFDEF OLDBNEWS
#DEFINE DEFCASE
#DEFINE NOBUFFER
#ENDIF
#IFDEF BNEWS
#DEFINE DEFCASE
#DEFINE NOBUFFER
#ENDIF
#IFNDEF DEFCASE
#DEFINE DEFCASE
#ENDIF
#IFNDEF NOTAGS
#DEFINE TAGENB
#DEFINE TAGMASK
#DEFINE TAGSHIFT
#ELSE
#DEFINE TAGENB
#DEFINE TAGMASK
#DEFINE TAGSHIFT
#ENDIF
#IFNDEF NMEMORY
#DEFINE NMEMORY
#ENDIF
#DEFINE NUSEDS
#IFDEF INCORE
#ELSE
#ENDIF
#IFNDEF NPAGBUF
#DEFINE NPAGBUF
#ENDIF
#IFNDEF NOBUFFER
#IFDEF _IOFBF
#ENDIF
#ENDIF
#IFNDEF SHISTBUF
#DEFINE SHISTBUF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#IFNDEF MAXRUN
#DEFINE MAXRUN
#ENDIF
#DEFINE FRESH
#DEFINE NOTFOUND
#DEFINE MAPIN
#DEFINE MAPOUT
#IFDEF DBZDEBUG
#DEFINE DEBUG
#ELSE
#DEFINE DEBUG
#ENDIF
#IFDEF NOBUFFER
#ELSE
#IFDEF _IOFBF
#ENDIF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#IFDEF _IOFBF
#ENDIF
#DEFINE MAXN
#IFDEF OVERFLOW
#ENDIF
#IFDEF OVERFLOW
#ENDIF
#DEFINE POLY
#DEFINE OFFSET
#DEFINE TOLOW
#DEFINE CISTREQN
#DEFINE MAPSIZE
#IFDEF DBZDEBUG
#ELSE
#ENDIF
__E__O__F__
< stdio.h
< sys/types.h
< sys/stat.h
< string.h
< dbz.h
#IFDEF FUNNYSEEKS
< unistd.h
#ELSE
#DEFINE SEEK_SET
#ENDIF
#DEFINE STREQ
#IFNDEF lint
#ENDIF
#DEFINE DEFBUF
#IFDEF HAVERFCIZE
#ELSE
#DEFINE rfc822ize
#ENDIF
#IFDEF DBZ_FINISH
#ENDIF
__E__O__F__
" libioP.h
< sys/types.h
< sys/stat.h
#IFDEF __STDC__
< stdlib.h
< unistd.h
#ENDIF
#IFDEF _LIBC
#UNDEF isatty
#DEFINE isatty
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" libioP.h
< fcntl.h
< sys/types.h
< sys/stat.h
< string.h
< unistd.h
< errno.h
#IFNDEF errno
#ENDIF
#IFDEF _LIBC
#DEFINE open
#DEFINE close
#DEFINE fstat
#DEFINE lseek
#DEFINE read
#DEFINE write
#ENDIF
#DEFINE CLOSED_FILEBUF_FLAGS
#IF
#ENDIF
#IFDEF TODO
#ENDIF
#IFDEF ESPIPE
#ENDIF
#IF
#ENDIF
#IFDEF TODO
#ENDIF
#IFDEF TODO
#ENDIF
#IFDEF TODO
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
__E__O__F__
< libioP.h
#IFDEF _IO_USE_DTOA
#IFDEF DEBUG
< stdio.h
#DEFINE Bug
#ENDIF
#IFDEF __STDC__
< stdlib.h
< string.h
< float.h
#DEFINE CONST
#ELSE
#DEFINE CONST
#DEFINE KR_headers
#DEFINE FLT_ROUNDS
#DEFINE FLT_RADIX
#DEFINE DBL_MANT_DIG
#DEFINE DBL_DIG
#DEFINE DBL_MAX_10_EXP
#DEFINE DBL_MAX_EXP
#ENDIF
< errno.h
#IFNDEF __MATH_H__
< math.h
#ENDIF
#IFDEF Unsigned_Shifts
#DEFINE Sign_Extend
#ELSE
#DEFINE Sign_Extend
#ENDIF
#IF
#DEFINE IEEE_8087
#ENDIF
#IF
#DEFINE IEEE_8087
#ENDIF
#IF
#DEFINE IEEE_MC68k
#ENDIF
#IF
#IFNDEF _DOUBLE_IS_32BITS
#IF
#DEFINE IBM
#ELSE
#IF
#DEFINE VAX
#ELSE
#IF
#DEFINE IEEE_Unknown
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF IEEE_8087
#DEFINE HIWORD
#DEFINE LOWORD
#DEFINE TEST_ENDIANNESS
#ELSE
#IF
#DEFINE HIWORD
#DEFINE LOWORD
#DEFINE TEST_ENDIANNESS
#ELSE
#DEFINE TEST_ENDIANNESS
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#DEFINE word0
#DEFINE word1
#DEFINE setword0
#DEFINE setword1
#DEFINE setwords
#DEFINE addword0
#ELSE
#DEFINE word0
#IFNDEF _DOUBLE_IS_32BITS
#DEFINE word1
#ELSE
#DEFINE word1
#ENDIF
#DEFINE setword0
#IFNDEF _DOUBLE_IS_32BITS
#DEFINE setword1
#DEFINE setwords
#ELSE
#DEFINE setword1
#DEFINE setwords
#ENDIF
#DEFINE addword0
#ENDIF
#IF
#DEFINE Storeinc
#ELSE
#IF
#DEFINE Storeinc
#ELSE
#DEFINE Storeinc
#ENDIF
#ENDIF
#IF
#DEFINE Exp_shift
#DEFINE Exp_shift1
#DEFINE Exp_msk1
#DEFINE Exp_msk11
#DEFINE Exp_mask
#DEFINE P
#DEFINE Bias
#DEFINE IEEE_Arith
#DEFINE Emin
#DEFINE Exp_1
#DEFINE Exp_11
#DEFINE Ebits
#DEFINE Frac_mask
#DEFINE Frac_mask1
#DEFINE Ten_pmax
#DEFINE Bletch
#DEFINE Bndry_mask
#DEFINE Bndry_mask1
#DEFINE LSB
#DEFINE Sign_bit
#DEFINE Log2P
#DEFINE Tiny0
#DEFINE Tiny1
#DEFINE Quick_max
#DEFINE Int_max
#DEFINE Infinite
#ELSE
#UNDEF Sudden_Underflow
#DEFINE Sudden_Underflow
#IFDEF IBM
#DEFINE Exp_shift
#DEFINE Exp_shift1
#DEFINE Exp_msk1
#DEFINE Exp_msk11
#DEFINE Exp_mask
#DEFINE P
#DEFINE Bias
#DEFINE Exp_1
#DEFINE Exp_11
#DEFINE Ebits
#DEFINE Frac_mask
#DEFINE Frac_mask1
#DEFINE Bletch
#DEFINE Ten_pmax
#DEFINE Bndry_mask
#DEFINE Bndry_mask1
#DEFINE LSB
#DEFINE Sign_bit
#DEFINE Log2P
#DEFINE Tiny0
#DEFINE Tiny1
#DEFINE Quick_max
#DEFINE Int_max
#ELSE
#DEFINE Exp_shift
#DEFINE Exp_shift1
#DEFINE Exp_msk1
#DEFINE Exp_msk11
#DEFINE Exp_mask
#DEFINE P
#DEFINE Bias
#DEFINE Exp_1
#DEFINE Exp_11
#DEFINE Ebits
#DEFINE Frac_mask
#DEFINE Frac_mask1
#DEFINE Ten_pmax
#DEFINE Bletch
#DEFINE Bndry_mask
#DEFINE Bndry_mask1
#DEFINE LSB
#DEFINE Sign_bit
#DEFINE Log2P
#DEFINE Tiny0
#DEFINE Tiny1
#DEFINE Quick_max
#DEFINE Int_max
#ENDIF
#ENDIF
#IFNDEF IEEE_Arith
#DEFINE ROUND_BIASED
#ENDIF
#IFDEF RND_PRODQUOT
#DEFINE rounded_product
#DEFINE rounded_quotient
#ELSE
#DEFINE rounded_product
#DEFINE rounded_quotient
#ENDIF
#DEFINE Big0
#DEFINE Big1
#DEFINE Kmax
#DEFINE BIGINT_MINIMUM_K
#DEFINE BIGINT_HEADER_SIZE
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF IBM
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFDEF VAX
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF VAX
#ELSE
#ENDIF
#IFNDEF IBM
#IFNDEF Sudden_Underflow
#ENDIF
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFNDEF _DOUBLE_IS_32BITS
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF IBM
#ELSE
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF IBM
#ELSE
#ENDIF
#IFDEF VAX
#ENDIF
#IFDEF IEEE_Arith
#DEFINE n_bigtens
#ELSE
#IFDEF IBM
#DEFINE n_bigtens
#ELSE
#DEFINE n_bigtens
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF RND_PRODQUOT
#ENDIF
#IFDEF VAX
#ELSE
#ENDIF
#IFDEF VAX
#ELSE
#ENDIF
#IFNDEF Inaccurate_Divide
#ENDIF
#IF
#UNDEF HUGE_VAL
#ENDIF
#IFNDEF HUGE_VAL
#DEFINE HUGE_VAL
#ENDIF
#IFDEF Sudden_Underflow
#IFDEF IBM
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF Sudden_Underflow
#IFDEF IBM
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF IBM
#ELSE
#ENDIF
#IFNDEF ROUND_BIASED
#ENDIF
#IFNDEF ROUND_BIASED
#IFNDEF Sudden_Underflow
#ENDIF
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF Check_FLT_ROUNDS
#ELSE
#ENDIF
#IFDEF Sudden_Underflow
#IFDEF IBM
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF DEBUG
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IF
#IFDEF IEEE_Arith
#ELSE
#ENDIF
#IFDEF IEEE_Arith
#ENDIF
#ENDIF
#IFDEF IBM
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF IBM
#ENDIF
#IFDEF IBM
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFNDEF No_leftright
#ENDIF
#IFNDEF No_leftright
#ENDIF
#IFDEF Check_FLT_ROUNDS
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFDEF IBM
#ELSE
#ENDIF
#IFNDEF Sudden_Underflow
#ENDIF
#IFNDEF ROUND_BIASED
#ENDIF
#IFNDEF ROUND_BIASED
#ENDIF
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdlib.h
#ENDIF
< string.h
#IF
#ENDIF
#IF
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE BAD_DELTA
#IFDEF TODO
#ENDIF
#IF
#ENDIF
#IFDEF TODO
#IF
#DEFINE IO_CLEANUP
#ENDIF
#IFDEF IO_CLEANUP
#ELSE
#ENDIF
#ENDIF
#IFDEF weak_alias
#ELIF
#ENDIF
#IFDEF text_set_element
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdlib.h
#ENDIF
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
#IFDEF __STDC__
< stdlib.h
#ENDIF
" libioP.h
< fcntl.h
#IFNDEF _IO_fcntl
#DEFINE _IO_fcntl
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF F_GETFL
#IFNDEF O_ACCMODE
#DEFINE O_ACCMODE
#ENDIF
#IFDEF F_SETFL
#ENDIF
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IF
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
< stdio.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
< stdio.h
__E__O__F__
" libioP.h
< errno.h
#IFDEF EIO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
< stdio.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdlib.h
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IF
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
" libioP.h
< string.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
< libioP.h
< errno.h
#IFDEF EIO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
< errno.h
#IFDEF EIO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_getc
#UNDEF getc
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
#IFDEF __STDC__
< stdlib.h
#ENDIF
" libioP.h
< string.h
< errno.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
< string.h
#IF
#ENDIF
__E__O__F__
" libioP.h
< limits.h
#IFDEF weak_alias
#ENDIF
#IFDEF _LIBC
#ENDIF
__E__O__F__
" libioP.h
__E__O__F__
" libioP.h
#DEFINE PADSIZE
__E__O__F__
" libioP.h
< errno.h
< string.h
#IFNDEF errno
#ENDIF
#IFNDEF _IO_strerror
#ENDIF
__E__O__F__
" libioP.h
#IF
< signal.h
< unistd.h
#IFDEF __STDC__
< stdlib.h
#ENDIF
#IFDEF _LIBC
< unistd.h
#ENDIF
< sys/types.h
< sys/wait.h
#IFNDEF _IO_fork
#DEFINE _IO_fork
#ENDIF
#ENDIF
#IFNDEF _IO_pipe
#DEFINE _IO_pipe
#ENDIF
#IFNDEF _IO_dup2
#DEFINE _IO_dup2
#ENDIF
#IFNDEF _IO_waitpid
#DEFINE _IO_waitpid
#ENDIF
#IFNDEF _IO_execl
#DEFINE _IO_execl
#ENDIF
#IFNDEF _IO__exit
#DEFINE _IO__exit
#ENDIF
#IFNDEF _IO_close
#DEFINE _IO_close
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IF
#ENDIF
#IFDEF strong_alias
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" libioP.h
< sys/types.h
< sys/stat.h
< unistd.h
#IFDEF TODO
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_putc
#UNDEF putc
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
< string.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
< libioP.h
__E__O__F__
< libioP.h
__E__O__F__
" libioP.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#DEFINE _IOFBF
#DEFINE _IOLBF
#DEFINE _IONBF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
" libioP.h
__E__O__F__
" libioP.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
#IF
#ENDIF
< sys/types.h
" libioP.h
< string.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFNDEF _IO_USE_DTOA
#ENDIF
#IFNDEF NO_FLOATING_POINT
#DEFINE FLOATING_POINT
#ENDIF
#IFDEF FLOATING_POINT
" floatio.h
#DEFINE BUF
#DEFINE DEFPREC
#ELSE
#DEFINE BUF
#ENDIF
#DEFINE to_digit
#DEFINE is_digit
#DEFINE to_char
#DEFINE LONGINT
#DEFINE LONGDBL
#DEFINE SHORTINT
#DEFINE ALT
#DEFINE LADJUST
#DEFINE ZEROPAD
#DEFINE HEXPREFIX
#IFDEF FLOATING_POINT
#IFNDEF _IO_USE_DTOA
#ENDIF
#ENDIF
#DEFINE PRINT
#DEFINE PAD_SP
#DEFINE PAD_0
#DEFINE SARG
#DEFINE UARG
#IF
#ENDIF
#IFDEF FLOATING_POINT
#ENDIF
#IFDEF FLOATING_POINT
#IFDEF _IO_USE_DTOA
#ELSE
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
#IF
#ENDIF
< libioP.h
< ctype.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFNDEF NO_FLOATING_POINT
#DEFINE FLOATING_POINT
#ENDIF
#IFDEF FLOATING_POINT
" floatio.h
#DEFINE BUF
#ELSE
#DEFINE BUF
#ENDIF
#DEFINE LONG
#DEFINE LONGDBL
#DEFINE SHORT
#DEFINE SUPPRESS
#DEFINE POINTER
#DEFINE NOSKIP
#DEFINE WIDTH
#DEFINE SIGNOK
#DEFINE NDIGITS
#DEFINE DPTOK
#DEFINE EXPOK
#DEFINE PFXOK
#DEFINE NZDIGITS
#DEFINE CT_CHAR
#DEFINE CT_CCL
#DEFINE CT_STRING
#DEFINE CT_INT
#DEFINE CT_FLOAT
#DEFINE u_char
#DEFINE u_long
#IFDEF __cplusplus
#ENDIF
#IFNDEF _IO_USE_DTOA
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF FLOATING_POINT
#ENDIF
#IFDEF FLOATING_POINT
#IFDEF _IO_USE_DTOA
#ELSE
#ENDIF
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" libioP.h
" strfile.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
" strfile.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ELIF
#ENDIF
__E__O__F__
" libioP.h
#IFDEF _IO_USE_DTOA
#DEFINE PUT
#DEFINE PUTN
#DEFINE PADN
#DEFINE EBUF_SIZE
#DEFINE EBUF_END
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_peekc
__E__O__F__
" libioP.h
#IFDEF _IO_MTSAFE_IO
#DEFINE DEF_STDFILE
#ELSE
#DEFINE DEF_STDFILE
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
__E__O__F__
" libioP.h
" stdio.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF feof_unlocked
__E__O__F__
" libioP.h
" stdio.h
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF ferror_unlocked
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#IFDEF _IO_MTSAFE_IO
#IFDEF weak_alias
#ENDIF
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#UNDEF fputc_unlocked
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_getc
#UNDEF getc
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF getchar
__E__O__F__
" libioP.h
" stdio.h
#UNDEF getchar_unlocked
__E__O__F__
" libioP.h
" stdio.h
#UNDEF getc_unlocked
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
#IFDEF __STDC__
< stdlib.h
#ENDIF
" libioP.h
< string.h
< errno.h
< obstack.h
< stdarg.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
< errno.h
#IF
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF _IO_putc
#UNDEF putc
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" stdio.h
#UNDEF putchar
__E__O__F__
" libioP.h
" stdio.h
#UNDEF putchar_unlocked
__E__O__F__
" libioP.h
" stdio.h
#UNDEF putc_unlocked
__E__O__F__
" libioP.h
" stdio.h
#UNDEF putw
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#UNDEF setlinebuf
__E__O__F__
" libioP.h
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
__E__O__F__
< malloc.h
" libioP.h
" stdio.h
" strfile.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
__E__O__F__
" libioP.h
" stdio.h
#UNDEF vscanf
#IFDEF weak_alias
#ENDIF
__E__O__F__
" libioP.h
" strfile.h
#IFDEF _IO_MTSAFE_IO
#ENDIF
#IFDEF weak_alias
#ENDIF
__E__O__F__
" strfile.h
" libioP.h
< string.h
#IF
#DEFINE ALLOCATED
#DEFINE CONSTANT
#DEFINE ALSIZE
#DEFINE PALLOC
#DEFINE PFREE
#ENDIF
#IFDEF TODO
#ENDIF
#IF
#ENDIF
__E__O__F__
#IFNDEF STDIO_H
#DEFINE STDIO_H
#ENDIF
#DEFINE SCAN
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IFDEF HAVE_STRING_H
< string.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#IFDEF emacs
" blockinput.h
#ENDIF
#IF
#IFNDEF alloca
#IFDEF emacs
#IFDEF static
#IFNDEF STACK_DIRECTION
#ENDIF
#ENDIF
#ENDIF
#IF
#DEFINE ADDRESS_FUNCTION
#ELSE
#DEFINE ADDRESS_FUNCTION
#ENDIF
#IF
#ELSE
#ENDIF
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#IFNDEF emacs
#DEFINE malloc
#ENDIF
#IFNDEF STACK_DIRECTION
#DEFINE STACK_DIRECTION
#ENDIF
#IF
#DEFINE STACK_DIR
#ELSE
#DEFINE STACK_DIR
#ENDIF
#IFNDEF ALIGN_SIZE
#DEFINE ALIGN_SIZE
#ENDIF
#IF
#ENDIF
#IFDEF emacs
#ENDIF
#IFDEF emacs
#ENDIF
#IF
#IFDEF DEBUG_I00AFUNC
< stdio.h
#ENDIF
#IFNDEF CRAY_STACK
#DEFINE CRAY_STACK
#IFNDEF CRAY2
#ELSE
#ENDIF
#ENDIF
#IFDEF CRAY2
#ELSE
#IFDEF DEBUG_I00AFUNC
#ENDIF
#IFDEF DEBUG_I00AFUNC
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
#IFDEF isspace
#UNDEF isspace
#ENDIF
#DEFINE isspace
#IFDEF __STDC__
< stddef.h
#ELSE
#IF
#ENDIF
#ENDIF
" alloca-conf.h
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#IFNDEF EOS
#DEFINE EOS
#ENDIF
#DEFINE INITIAL_MAXARGC
#IFDEF MAIN
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
#IF
#DEFINE USE_STDARG
#ENDIF
#IFDEF USE_STDARG
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF USE_STDARG
#ELSE
#ENDIF
#IFDEF USE_STDARG
#ELSE
#ENDIF
__E__O__F__
" config.h
#IFDEF HAVE_ON_EXIT
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
__E__O__F__
__E__O__F__
__E__O__F__
__E__O__F__
" ansidecl.h
" libiberty.h
#IFDEF ANSI_PROTOTYPES
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
< sys/types.h
#IFDEF HAVE_UNISTD_H
< unistd.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#IFDEF HAVE_SYS_FILE_H
< sys/file.h
#ENDIF
#IFNDEF R_OK
#DEFINE R_OK
#DEFINE W_OK
#DEFINE X_OK
#ENDIF
" libiberty.h
#IFNDEF IN_GCC
#IF
#DEFINE DIR_SEPARATOR
#ENDIF
#ENDIF
#IFNDEF DIR_SEPARATOR
#DEFINE DIR_SEPARATOR
#ENDIF
#IFDEF __MSDOS__
#IFNDEF P_tmpdir
#DEFINE P_tmpdir
#ENDIF
#ENDIF
#DEFINE TEMP_FILE
#IFDEF P_tmpdir
#ENDIF
#IFDEF P_tmpdir
#ENDIF
__E__O__F__
" config.h
#IFDEF HAVE_GETRUSAGE
< sys/time.h
< sys/resource.h
#ENDIF
#IFDEF HAVE_TIMES
#IFDEF HAVE_SYS_PARAM_H
< sys/param.h
#ENDIF
< sys/times.h
#ENDIF
#IF
#DEFINE HZ
#ENDIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IFDEF HAVE_TIMES
#ELSE
#IFDEF VMS
#ELSE
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
#IFDEF ANSI_PROTOTYPES
< stdarg.h
#ELSE
< varargs.h
#ENDIF
#IFDEF __STDC__
< stddef.h
#ELSE
#ENDIF
#DEFINE NULLP
#IFDEF ANSI_PROTOTYPES
#ELSE
#ENDIF
#IFNDEF ANSI_PROTOTYPES
#ENDIF
#IFDEF ANSI_PROTOTYPES
#ELSE
#ENDIF
#IFDEF ANSI_PROTOTYPES
#ELSE
#ENDIF
#IFDEF MAIN
< stdio.h
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __IEEE_BIG_ENDIAN
#ENDIF
#IFDEF __IEEE_LITTLE_ENDIAN
#IFDEF __SMALL_BITFIELDS
#ELSE
#ENDIF
#IFDEF __SMALL_BITFIELDS
#ELSE
#ENDIF
#ENDIF
#IFDEF __IEEE_BIG_ENDIAN
#ENDIF
#IFDEF __IEEE_LITTLE_ENDIAN
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< ctype.h
< sys/types.h
< string.h
< stdio.h
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ELSE
#ENDIF
< demangle.h
#UNDEF CURRENT_DEMANGLING_STYLE
#DEFINE CURRENT_DEMANGLING_STYLE
" libiberty.h
#DEFINE min
#IF
#DEFINE CPLUS_MARKER
#ENDIF
#DEFINE PRINT_ANSI_QUALIFIERS
#DEFINE PRINT_ARG_TYPES
#DEFINE STRING_EMPTY
#DEFINE PREPEND_BLANK
#DEFINE APPEND_BLANK
#DEFINE LEN_STRING
#DEFINE SCOPE_STRING
#DEFINE ARM_VTABLE_STRING
#DEFINE ARM_VTABLE_STRLEN
#IF
#ENDIF
#IF
#ENDIF
#DEFINE TYPE_UNQUALIFIED
#DEFINE TYPE_QUAL_CONST
#DEFINE TYPE_QUAL_VOLATILE
#DEFINE TYPE_QUAL_RESTRICT
#IF
#ENDIF
#IF
#ENDIF
#IFDEF MAIN
" getopt.h
#DEFINE MBUF_SIZE
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
< sys/types.h
< sys/stat.h
__E__O__F__
" floatformat.h
< math.h
#IFDEF __STDC__
< stddef.h
#ELSE
#ENDIF
#DEFINE FLOATFORMAT_CHAR_BIT
#IFDEF HARRIS_FLOAT_FORMAT
#ELSE
#ENDIF
#IFNDEF min
#DEFINE min
#ENDIF
#IFDEF IEEE_DEBUG
#IF
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
#IF
< config.h
#ELSE
" config.h
#ENDIF
#ENDIF
#IFNDEF _GNU_SOURCE
#DEFINE _GNU_SOURCE
#ENDIF
#IFNDEF __STDC__
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< errno.h
< fnmatch.h
< ctype.h
#IF
#IF
#ENDIF
#DEFINE FOLD
#ENDIF
__E__O__F__
" config.h
#IFDEF HAVE_SYS_PARAM_H
< sys/param.h
#ENDIF
< errno.h
#IFNDEF MAXPATHLEN
#DEFINE MAXPATHLEN
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" getopt.h
#IF
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< stdio.h
#DEFINE GETOPT_INTERFACE_VERSION
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IFDEF __GNU_LIBRARY__
< stdlib.h
#ENDIF
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#ENDIF
#IFDEF TEST
< stdio.h
#ENDIF
__E__O__F__
#IFNDEF _NO_PROTO
#DEFINE _NO_PROTO
#ENDIF
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
#IF
#IFNDEF const
#DEFINE const
#ENDIF
#ENDIF
< stdio.h
#DEFINE GETOPT_INTERFACE_VERSION
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IFDEF __GNU_LIBRARY__
< stdlib.h
< unistd.h
#ENDIF
#IFDEF VMS
< unixlib.h
#IF
< string.h
#ENDIF
#ENDIF
#IFNDEF _
#IFDEF HAVE_LIBINTL_H
< libintl.h
#DEFINE _
#ELSE
#DEFINE _
#ENDIF
#ENDIF
" getopt.h
#IFDEF __GNU_LIBRARY__
< string.h
#DEFINE my_index
#ELSE
#IF
< string.h
#ELSE
#IF
< strings.h
#ENDIF
#ENDIF
#IFNDEF getenv
#ENDIF
#IFDEF __GNUC__
#IF
#ENDIF
#ENDIF
#ENDIF
#IFDEF _LIBC
#IFDEF text_set_element
#ENDIF
#DEFINE SWAP_FLAGS
#ELSE
#DEFINE SWAP_FLAGS
#ENDIF
#IF
#ENDIF
#IFDEF _LIBC
#ENDIF
#IF
#ENDIF
#IFDEF _LIBC
#ENDIF
#IFDEF _LIBC
#DEFINE NONOPTION_P
#ELSE
#DEFINE NONOPTION_P
#ENDIF
#ENDIF
#IFDEF TEST
#ENDIF
__E__O__F__
#IFNDEF VMS
" config.h
< sys/types.h
#IFDEF HAVE_SYS_PARAM_H
< sys/param.h
#ENDIF
#UNDEF GNU_OUR_PAGESIZE
#IF
< unistd.h
#IFDEF _SC_PAGESIZE
#DEFINE GNU_OUR_PAGESIZE
#ENDIF
#ENDIF
#IFNDEF GNU_OUR_PAGESIZE
#IFDEF PAGESIZE
#DEFINE GNU_OUR_PAGESIZE
#ELSE
#IFDEF EXEC_PAGESIZE
#DEFINE GNU_OUR_PAGESIZE
#ELSE
#IFDEF NBPG
#DEFINE GNU_OUR_PAGESIZE
#IFNDEF CLSIZE
#DEFINE CLSIZE
#ENDIF
#ELSE
#IFDEF NBPC
#DEFINE GNU_OUR_PAGESIZE
#ELSE
#DEFINE GNU_OUR_PAGESIZE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ELSE
#IF
< syidef.h
#ENDIF
#IFNDEF SYI
#DEFINE SYI
#ENDIF
#ENDIF
__E__O__F__
" config.h
" ansidecl.h
" libiberty.h
< time.h
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IFDEF HAVE_TIMES
#IFDEF HAVE_SYS_PARAM_H
< sys/param.h
#ENDIF
< sys/times.h
#ENDIF
#IFNDEF CLOCKS_PER_SEC
#DEFINE CLOCKS_PER_SEC
#ENDIF
#IF
#DEFINE HZ
#ENDIF
#IF
#ELSE
#IFDEF HAVE_TIMES
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" libiberty.h
__E__O__F__
__E__O__F__
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#IFDEF HAVE_STRING_H
< string.h
#ENDIF
< errno.h
< stdio.h
< fcntl.h
#IFDEF HAVE_UNISTD_H
< unistd.h
#ENDIF
#IFDEF HAVE_SYS_TIME_H
< sys/time.h
#ENDIF
" ansidecl.h
#IFDEF __GNUC__
#ELSE
#ENDIF
#IFNDEF TMP_MAX
#DEFINE TMP_MAX
#ENDIF
#IFDEF HAVE_GETTIMEOFDAY
#ENDIF
#IFDEF HAVE_GETTIMEOFDAY
#ELSE
#ENDIF
__E__O__F__
" mpw.h
< stdlib.h
#IFNDEF USE_MW_HEADERS
< sys/time.h
< sys/resource.h
#ENDIF
< Types.h
< Files.h
< Timer.h
#UNDEF fopen
#DEFINE ZEROBLKSIZE
#UNDEF fseek
#UNDEF fread
#UNDEF fwrite
#IFNDEF USE_MW_HEADERS
#ENDIF
#IFNDEF USE_MW_HEADERS
#ENDIF
#IFNDEF USE_MW_HEADERS
#ENDIF
#IFDEF MPW_SADE
#ELSE
#ENDIF
#IF
#ENDIF
#IFNDEF USE_MW_HEADERS
" utime.h
#ENDIF
#IFNDEF USE_MW_HEADERS
#DEFINE LOCKBIT
#DEFINE DIRBIT
#IFDEF FIOFNAME
#ELSE
#ENDIF
#ENDIF
#UNDEF open
#UNDEF access
#UNDEF creat
#IFDEF USE_MW_HEADERS
#ELSE
#ENDIF
#IFDEF PROGRESS_TEST
#ENDIF
#IFDEF USE_MW_HEADERS
#IFNDEF __CONSOLE__
< console.h
#ENDIF
#PRAGMA unused
#PRAGMA unused
#PRAGMA unused
#ENDIF
__E__O__F__
__E__O__F__
" ansidecl.h
" objalloc.h
< stdio.h
#IF
< stdlib.h
< unixlib.h
#ELSE
#IFDEF ANSI_PROTOTYPES
< stddef.h
#ENDIF
#ENDIF
#DEFINE CHUNK_HEADER_SIZE
#DEFINE CHUNK_SIZE
#DEFINE BIG_REQUEST
__E__O__F__
#IFDEF HAVE_CONFIG_H
< config.h
#ENDIF
" obstack.h
#DEFINE OBSTACK_INTERFACE_VERSION
< stdio.h
#IF
< gnu-versions.h
#IF
#DEFINE ELIDE_CODE
#ENDIF
#ENDIF
#IFNDEF ELIDE_CODE
#IF
#DEFINE POINTER
#ELSE
#DEFINE POINTER
#ENDIF
#DEFINE DEFAULT_ALIGNMENT
#DEFINE DEFAULT_ROUNDING
#IFNDEF COPYING_UNIT
#DEFINE COPYING_UNIT
#ENDIF
#IF
#ELSE
#ENDIF
#IF
< stdlib.h
#ENDIF
#IFNDEF EXIT_FAILURE
#DEFINE EXIT_FAILURE
#ENDIF
#IF
#DEFINE CALL_CHUNKFUN
#DEFINE CALL_FREEFUN
#ELSE
#DEFINE CALL_CHUNKFUN
#DEFINE CALL_FREEFUN
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ENDIF
#UNDEF obstack_free
#IFNDEF _
#IFDEF HAVE_LIBINTL_H
< libintl.h
#IFNDEF _
#DEFINE _
#ENDIF
#ELSE
#DEFINE _
#ENDIF
#ENDIF
#IF
#IF
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
< errno.h
#IFDEF HAVE_UNISTD_H
< unistd.h
#ENDIF
#DEFINE ISSPACE
#IFDEF HAVE_SYS_WAIT_H
< sys/wait.h
#ENDIF
#IFDEF vfork
#DEFINE VFORK_STRING
#ELSE
#DEFINE VFORK_STRING
#ENDIF
#IFDEF HAVE_VFORK_H
< vfork.h
#ENDIF
#IFDEF VMS
#DEFINE vfork
#ENDIF
" libiberty.h
#DEFINE STDIN_FILE_NO
#DEFINE STDOUT_FILE_NO
#DEFINE READ_PORT
#DEFINE WRITE_PORT
#IFDEF __MSDOS__
< process.h
#IFDEF __GO32__
#ELSE
#ENDIF
#ENDIF
#IF
< process.h
#IFDEF __CYGWIN__
#DEFINE fix_argv
#ELSE
#ENDIF
< io.h
< fcntl.h
< signal.h
#IFNDEF _P_WAIT
#DEFINE _P_WAIT
#DEFINE _P_NOWAIT
#DEFINE _P_OVERLAY
#DEFINE _P_NOWAITO
#DEFINE _P_DETACH
#DEFINE WAIT_CHILD
#DEFINE WAIT_GRANDCHILD
#ENDIF
#IFDEF __CYGWIN__
#ELSE
#ENDIF
#ENDIF
#IFDEF OS2
#ENDIF
#IFDEF MPW
#ENDIF
#IF
#IFDEF VMS
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IF
#PRAGMA alloca
#ENDIF
#IF
< config.h
#ENDIF
" ansidecl.h
#IF
< stdlib.h
#ENDIF
#IF
< string.h
#ENDIF
#IFDEF HAVE_ALLOCA_H
< alloca.h
#ELSE
#IFNDEF alloca
#IFDEF __GNUC__
#DEFINE alloca
#ELSE
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
< errno.h
#IF
< ansidecl.h
< limits.h
< stddef.h
< stdlib.h
#ELSE
#DEFINE ULONG_MAX
#DEFINE LONG_MAX
#IFDEF __STDC__
#DEFINE PTR
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#ELSE
#DEFINE PTR
#IFNDEF NULL
#DEFINE NULL
#ENDIF
#ENDIF
#ENDIF
#DEFINE TYPE_0
#DEFINE BREAK_0
#DEFINE DEG_0
#DEFINE SEP_0
#DEFINE TYPE_1
#DEFINE BREAK_1
#DEFINE DEG_1
#DEFINE SEP_1
#DEFINE TYPE_2
#DEFINE BREAK_2
#DEFINE DEG_2
#DEFINE SEP_2
#DEFINE TYPE_3
#DEFINE BREAK_3
#DEFINE DEG_3
#DEFINE SEP_3
#DEFINE TYPE_4
#DEFINE BREAK_4
#DEFINE DEG_4
#DEFINE SEP_4
#DEFINE MAX_TYPES
__E__O__F__
< errno.h
__E__O__F__
__E__O__F__
#IF
< config.h
#ENDIF
" ansidecl.h
< errno.h
#IF
#ENDIF
#DEFINE __set_errno
#IF
< stdlib.h
#ELSE
< sys/types.h
< stdio.h
#ENDIF
#IF
< string.h
#ENDIF
#IF
< unistd.h
#ENDIF
#DEFINE __environ
#IFNDEF HAVE_ENVIRON_DECL
#ENDIF
#DEFINE LOCK
#DEFINE UNLOCK
__E__O__F__
#DEFINE _POSIX_SOURCE
< ansidecl.h
< sys/types.h
< signal.h
#IFDEF SIG_SETMASK
#ENDIF
__E__O__F__
" ansidecl.h
" libiberty.h
#IF
< stdlib.h
< unixlib.h
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
" libiberty.h
" splay-tree.h
__E__O__F__
#IF
#ENDIF
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
__E__O__F__
__E__O__F__
" ansidecl.h
" libiberty.h
" config.h
#IFDEF HAVE_SYS_ERRLIST
#DEFINE sys_errlist
#ENDIF
< stdio.h
< errno.h
#IFDEF HAVE_SYS_ERRLIST
#UNDEF sys_errlist
#ENDIF
#IFDEF __STDC__
< stddef.h
#ELSE
#ENDIF
#IFNDEF MAX
#DEFINE MAX
#ENDIF
#IFNDEF HAVE_SYS_ERRLIST
#ENDIF
#IFNDEF HAVE_SYS_ERRLIST
#DEFINE ENTRY
#ELSE
#DEFINE ENTRY
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFDEF EVMSERR
#ENDIF
#IFNDEF HAVE_SYS_ERRLIST
#ELSE
#ENDIF
#IFNDEF HAVE_SYS_ERRLIST
#ENDIF
#IFNDEF HAVE_STRERROR
#IFNDEF HAVE_SYS_ERRLIST
#ENDIF
#IFDEF EVMSERR
#ENDIF
#ENDIF
#IFDEF EVMSERR
#ENDIF
#IFDEF EVMSERR
#ENDIF
#IFDEF MAIN
< stdio.h
#ENDIF
__E__O__F__
#IF
#ENDIF
< ansidecl.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
__E__O__F__
< ansidecl.h
__E__O__F__
" ansidecl.h
" libiberty.h
" config.h
#DEFINE sys_siglist
< stdio.h
< signal.h
#IFDEF __STDC__
< stddef.h
#ELSE
#ENDIF
#UNDEF sys_siglist
#IFNDEF NULL
#IFDEF __STDC__
#DEFINE NULL
#ELSE
#DEFINE NULL
#ENDIF
#ENDIF
#IFNDEF MAX
#DEFINE MAX
#ENDIF
#IFNDEF HAVE_SYS_SIGLIST
#ENDIF
#IFNDEF HAVE_SYS_SIGLIST
#DEFINE ENTRY
#ELSE
#DEFINE ENTRY
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IFNDEF HAVE_SYS_SIGLIST
#ELSE
#IFDEF NSIG
#ELSE
#IFDEF _NSIG
#ENDIF
#ENDIF
#ENDIF
#IFNDEF HAVE_SYS_SIGLIST
#ENDIF
#IFNDEF HAVE_STRSIGNAL
#IFNDEF HAVE_SYS_SIGLIST
#ENDIF
#ENDIF
#IFNDEF HAVE_PSIGNAL
#ENDIF
#IFDEF MAIN
< stdio.h
#ENDIF
__E__O__F__
#IF
#ENDIF
__E__O__F__
< ctype.h
__E__O__F__
< limits.h
< ctype.h
< errno.h
#IF
< stdlib.h
#ENDIF
" ansidecl.h
#IFNDEF ULONG_MAX
#DEFINE ULONG_MAX
#ENDIF
#IFNDEF LONG_MAX
#DEFINE LONG_MAX
#ENDIF
#IFNDEF LONG_MIN
#DEFINE LONG_MIN
#ENDIF
__E__O__F__
< limits.h
< ctype.h
< errno.h
#IF
< stdlib.h
#ENDIF
" ansidecl.h
#IFNDEF ULONG_MAX
#DEFINE ULONG_MAX
#ENDIF
__E__O__F__
< stdio.h
#IFNDEF L_tmpnam
#DEFINE L_tmpnam
#ENDIF
#IFNDEF P_tmpdir
#DEFINE P_tmpdir
#ENDIF
__E__O__F__
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
< stdio.h
< string.h
< ansidecl.h
#IFDEF TEST
#ENDIF
#IFDEF TEST
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF TEST
#IFDEF __STDC__
#ELSE
#ENDIF
#IFDEF __STDC__
#ELSE
#ENDIF
#ENDIF
__E__O__F__
__E__O__F__
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
< stdio.h
#UNDEF vfprintf
__E__O__F__
#IFDEF __STDC__
< stdarg.h
#ELSE
< varargs.h
#ENDIF
< stdio.h
< ansidecl.h
#UNDEF vprintf
__E__O__F__
< varargs.h
< stdio.h
< ansidecl.h
#UNDEF vsprintf
#IFDEF VMS
#ELSE
#ENDIF
__E__O__F__
__E__O__F__
" ansidecl.h
" libiberty.h
< stdio.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#ENDIF
#DEFINE XATEXIT_SIZE
__E__O__F__
" ansidecl.h
" libiberty.h
< stdio.h
__E__O__F__
" ansidecl.h
" libiberty.h
< stdio.h
#IFDEF __STDC__
< stddef.h
#ELSE
#DEFINE size_t
#DEFINE ptrdiff_t
#ENDIF
#IF
< stdlib.h
< unixlib.h
#ELSE
#ENDIF
#IFDEF HAVE_SBRK
#ENDIF
#IFDEF HAVE_SBRK
#ENDIF
#IFDEF HAVE_SBRK
#ELSE
#ENDIF
#IFDEF HAVE_SBRK
#ELSE
#ENDIF
#IFDEF HAVE_SBRK
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IFDEF HAVE_STRING_H
< string.h
#ENDIF
" ansidecl.h
" libiberty.h
__E__O__F__
< stdio.h
" libiberty.h
" config.h
#IFDEF VMS
< errno.h
#IF
#DEFINE DONT_DECLARE_STRERROR
#ENDIF
#ENDIF
#IFNDEF DONT_DECLARE_STRERROR
#ENDIF
#DEFINE ERRSTR_FMT
#IFDEF VMS
#ELSE
#ENDIF
__E__O__F__
< math.h
< f2c.h
#IFDEF Labort
#ENDIF
#IFDEF Lderf
#ENDIF
#IFDEF Lderfc
#ENDIF
#IFDEF Lef1asc
#ENDIF
#IFDEF Lef1cmc
#ENDIF
#IFDEF Lerf
#ENDIF
#IFDEF Lerfc
#ENDIF
#IFDEF Lexit
#ENDIF
#IFDEF Lgetarg
#ENDIF
#IFDEF Lgetenv
#ENDIF
#IFDEF Liargc
#ENDIF
#IFDEF Lsignal
#ENDIF
#IFDEF Lsystem
#ENDIF
#IFDEF Lflush
#ENDIF
#IFDEF Lftell
#ENDIF
#IFDEF Lfseek
#ENDIF
#IFDEF Laccess
#ENDIF
#IFDEF Lalarm
#ENDIF
#IFDEF Lbesj0
#ENDIF
#IFDEF Lbesj1
#ENDIF
#IFDEF Lbesjn
#ENDIF
#IFDEF Lbesy0
#ENDIF
#IFDEF Lbesy1
#ENDIF
#IFDEF Lbesyn
#ENDIF
#IFDEF Lchdir
#ENDIF
#IFDEF Lchmod
#ENDIF
#IFDEF Lctime
#ENDIF
#IFDEF Ldate_y2kbuggy
#ENDIF
#IFDEF Ldate_y2kbug
#ENDIF
#IFDEF Ldbesj0
#ENDIF
#IFDEF Ldbesj1
#ENDIF
#IFDEF Ldbesjn
#ENDIF
#IFDEF Ldbesy0
#ENDIF
#IFDEF Ldbesy1
#ENDIF
#IFDEF Ldbesyn
#ENDIF
#IFDEF Ldtime
#ENDIF
#IFDEF Letime
#ENDIF
#IFDEF Lfdate
#ENDIF
#IFDEF Lfgetc
#ENDIF
#IFDEF Lfget
#ENDIF
#IFDEF Lflush1
#ENDIF
#IFDEF Lfnum
#ENDIF
#IFDEF Lfputc
#ENDIF
#IFDEF Lfput
#ENDIF
#IFDEF Lfstat
#ENDIF
#IFDEF Lgerror
#ENDIF
#IFDEF Lgetcwd
#ENDIF
#IFDEF Lgetgid
#ENDIF
#IFDEF Lgetlog
#ENDIF
#IFDEF Lgetpid
#ENDIF
#IFDEF Lgetuid
#ENDIF
#IFDEF Lgmtime
#ENDIF
#IFDEF Lhostnm
#ENDIF
#IFDEF Lidate
#ENDIF
#IFDEF Lierrno
#ENDIF
#IFDEF Lirand
#ENDIF
#IFDEF Lisatty
#ENDIF
#IFDEF Litime
#ENDIF
#IFDEF Lkill
#ENDIF
#IFDEF Llink
#ENDIF
#IFDEF Llnblnk
#ENDIF
#IFDEF Llstat
#ENDIF
#IFDEF Lltime
#ENDIF
#IFDEF Lmclock
#ENDIF
#IFDEF Lperror
#ENDIF
#IFDEF Lrand
#ENDIF
#IFDEF Lrename
#ENDIF
#IFDEF Lsecnds
#ENDIF
#IFDEF Lsecond
#ENDIF
#IFDEF Lsleep
#ENDIF
#IFDEF Lsrand
#ENDIF
#IFDEF Lstat
#ENDIF
#IFDEF Lsymlnk
#ENDIF
#IFDEF Ltime
#ENDIF
#IFDEF Lttynam
#ENDIF
#IFDEF Lumask
#ENDIF
#IFDEF Lunlink
#ENDIF
#IFDEF Lvxtidt_y2kbuggy
#ENDIF
#IFDEF Lvxtidt_y2kbug
#ENDIF
#IFDEF Lvxttim
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#DEFINE log10e
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#IFDEF IEEE_drem
#ELSE
#ENDIF
#ELSE
#IFDEF IEEE_drem
#ELSE
#UNDEF abs
< math.h
#ENDIF
#ENDIF
#IFDEF IEEE_drem
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" time.h
#IFDEF MSDOS
#UNDEF USE_CLOCK
#DEFINE USE_CLOCK
#ENDIF
#IFNDEF USE_CLOCK
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
" sys/types.h
" sys/times.h
#ENDIF
#UNDEF Hz
#IFDEF CLK_TCK
#DEFINE Hz
#ELSE
#IFDEF HZ
#DEFINE Hz
#ELSE
#DEFINE Hz
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF USE_CLOCK
#IFNDEF CLOCKS_PER_SECOND
#DEFINE CLOCKS_PER_SECOND
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#DEFINE M
#DEFINE EVEN
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" time.h
#IFDEF MSDOS
#UNDEF USE_CLOCK
#DEFINE USE_CLOCK
#ENDIF
#IFNDEF USE_CLOCK
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
" sys/types.h
" sys/times.h
#ENDIF
#UNDEF Hz
#IFDEF CLK_TCK
#DEFINE Hz
#ELSE
#IFDEF HZ
#DEFINE Hz
#ELSE
#DEFINE Hz
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF USE_CLOCK
#IFNDEF CLOCKS_PER_SECOND
#DEFINE CLOCKS_PER_SECOND
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#UNDEF min
#UNDEF max
#IFNDEF KR_headers
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#UNDEF min
#UNDEF max
< stdio.h
#IFDEF KR_headers
#ELSE
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#IFDEF __cplusplus
#ENDIF
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#IFDEF KR_headers
#ELSE
< stdlib.h
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF LONGBITS
#DEFINE LONGBITS
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" signal1.h
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF NO__STDC
#DEFINE ONEXIT
#ELSE
#IFNDEF KR_headers
#IFNDEF NO_ONEXIT
#DEFINE ONEXIT
#ENDIF
#ELSE
#IFNDEF NO_ONEXIT
#DEFINE ONEXIT
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_ONEXIT
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF LONGBITS
#DEFINE LONGBITS
#ENDIF
#IFNDEF LONG8BITS
#DEFINE LONG8BITS
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#DEFINE log10e
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#IFDEF IEEE_drem
#ELSE
#ENDIF
#ELSE
#IFDEF IEEE_drem
#ELSE
#UNDEF abs
< math.h
#ENDIF
#ENDIF
#IFDEF IEEE_drem
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF NO_OVERWRITE
< stdio.h
#UNDEF abs
#IFDEF KR_headers
#ELSE
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
__E__O__F__
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" signal1.h
#IFNDEF SIGIOT
#IFDEF SIGABRT
#DEFINE SIGIOT
#ENDIF
#ENDIF
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#DEFINE Int
#ELSE
#DEFINE Int
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF SIGTRAP
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF SIGTRAP
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF pdp11
#ENDIF
__E__O__F__
< stdio.h
< signal.h
#IFNDEF SIGIOT
#IFDEF SIGABRT
#DEFINE SIGIOT
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#DEFINE PAUSESIG
" signal1.h
#IFDEF KR_headers
#DEFINE Void
#DEFINE Int
#ELSE
#DEFINE Void
#DEFINE Int
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
" signal1.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
< sys/types.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF NON_UNIX_STDIO
#IFNDEF unlink
#DEFINE unlink
#ENDIF
#ELSE
#IF
" io.h
#ELSE
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NON_UNIX_STDIO
#ENDIF
#IFDEF NON_UNIX_STDIO
#ENDIF
__E__O__F__
#IFNDEF NON_UNIX_STDIO
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
< sys/types.h
< sys/stat.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE MAXERR
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#IFDEF S_IFMT
#IFDEF S_IFBLK
#ENDIF
#ELSE
#IFDEF S_ISDIR
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#DEFINE skip
#IFDEF interdata
#DEFINE SYLMX
#ENDIF
#IFDEF pdp11
#DEFINE SYLMX
#ENDIF
#IFDEF vax
#DEFINE SYLMX
#ENDIF
#IFNDEF SYLMX
#DEFINE SYLMX
#ENDIF
#DEFINE GLITCH
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE STKSZ
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#DEFINE MAXINTLENGTH
" f2c.h
#IFNDEF Allow_TYQUAD
#UNDEF longint
#DEFINE longint
#UNDEF ulongint
#DEFINE ulongint
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF SEEK_SET
#ENDIF
#IFDEF SEEK_SET
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
< string.h
#IFDEF KR_headers
#ELSE
#IF
#UNDEF abs
#UNDEF min
#UNDEF max
" io.h
#ENDIF
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#ENDIF
__E__O__F__
< ctype.h
" f2c.h
" fio.h
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fmt.h
" lio.h
" fp.h
#IFNDEF KR_headers
#ENDIF
#DEFINE isblnk
#DEFINE issep
#DEFINE isapos
#DEFINE isexp
#DEFINE issign
#DEFINE iswhit
#DEFINE SX
#DEFINE B
#DEFINE AX
#DEFINE EX
#DEFINE SG
#DEFINE WH
#IFDEF ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#DEFINE un_getc
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
#DEFINE ERR
#DEFINE GETC
#DEFINE Ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#DEFINE BUFSIZE
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE Ptr
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFDEF TYQUAD
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#UNDEF Ptr
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF OMIT_BLANK_CC
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Old_list_output
#IFDEF USE_STRLEN
#ELSE
#ENDIF
#ELSE
#IFNDEF WANT_LEAD_0
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF OMIT_BLANK_CC
#ENDIF
#IFNDEF OMIT_BLANK_CC
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE Ptr
#IFDEF Allow_TYQUAD
#ENDIF
__E__O__F__
#DEFINE _XOPEN_SOURCE
" f2c.h
" fio.h
< string.h
#IFNDEF NON_POSIX_STDIO
#IFDEF MSDOS
" io.h
#ELSE
" unistd.h
#ENDIF
#ENDIF
#IFDEF KR_headers
#IFDEF NON_ANSI_STDIO
#ENDIF
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
#IFDEF NON_ANSI_RW_MODES
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE opnerr
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#ENDIF
#IFDEF url_Adjust
#ENDIF
#IFDEF NON_POSIX_STDIO
#ELSE
#ENDIF
#IFDEF HAVE_TEMPNAM
#ELSE
#IFDEF _POSIX_SOURCE
#ELSE
#ENDIF
#ENDIF
#IFDEF NON_POSIX_STDIO
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< ctype.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fmt.h
" fp.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#DEFINE MAX_NL_CACHE
#DEFINE MAXDIM
#IFDEF KR_headers
#IFDEF ungetc
#ELSE
#DEFINE un_getc
#ENDIF
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#IFDEF ungetc
#ELSE
#DEFINE un_getc
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE GETC
#DEFINE Ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF No_Namelist_Questions
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF No_Namelist_Questions
#ENDIF
#IFNDEF No_Namelist_Comments
#ELSE
#ENDIF
#IFDEF No_Bad_Namelist_Skip
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
#IFDEF Allow_TYQUAD
#ENDIF
__E__O__F__
" f2c.h
" fio.h
< sys/types.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Pad_UDread
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFNDEF NON_UNIX_STDIO
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
< sys/types.h
< sys/stat.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
" f2c.h
" fio.h
#IFNDEF VAX
< ctype.h
#ENDIF
#IFNDEF KR_headers
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#ENDIF
" fmt.h
" fp.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFNDEF VAX
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF GOOD_SPRINTF_EXPONENT
#ELSE
#ENDIF
#IFNDEF VAX
#IFDEF Pedantic
#ELSE
#IFDEF CRAY
#ENDIF
#ENDIF
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF USE_STRLEN
#ELSE
#ENDIF
#IFNDEF WANT_LEAD_0
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
" lio.h
" string.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
" fmt.h
#IFDEF KR_headers
#ELSE
< string.h
#ENDIF
#IFDEF No_Extra_Namelist_Newlines
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< errno.h
< limits.h
" f2c.h
#IFNDEF R_OK
#DEFINE R_OK
#ENDIF
#IFNDEF W_OK
#DEFINE W_OK
#ENDIF
#IFNDEF X_OK
#DEFINE X_OK
#ENDIF
#IFNDEF F_OK
#DEFINE F_OK
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IFNDEF RETSIGTYPE
#IFDEF KR_headers
#DEFINE RETSIGTYPE
#ELSE
#DEFINE RETSIGTYPE
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
< signal.h
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IF
" f2c.h
< math.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< string.h
#ENDIF
" f2c.h
#IFNDEF CHMOD_PATH
#DEFINE CHMOD_PATH
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IF
" f2c.h
< math.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
#IF
< sys/times.h
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IF
< windows.h
#UNDEF min
#UNDEF max
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IF
#ELIF
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
#IF
< sys/times.h
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IF
< windows.h
#UNDEF min
#UNDEF max
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IF
#ELIF
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
" f2c.h
< sys/types.h
< sys/stat.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
< stddef.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFNDEF HAVE_STRERROR
#DEFINE strerror
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< stdio.h
< errno.h
" f2c.h
#IF
#IFDEF HAVE_UNISTD_H
< unistd.h
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#ELIF
< sys/param.h
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< stdio.h
#IF
< unistd.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
< signal.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< stdlib.h
#ENDIF
< sys/types.h
< sys/stat.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
< errno.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFNDEF RAND_MAX
#DEFINE RAND_MAX
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ENDIF
< stdio.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
< sys/types.h
" f2c.h
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< stdlib.h
#ENDIF
< sys/types.h
< sys/stat.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< sys/times.h
#ENDIF
< limits.h
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IFDEF _SC_CLK_TCK
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IF
< stdlib.h
#ENDIF
#IF
< unistd.h
#ENDIF
< stdio.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
< sys/stat.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< math.h
< f2c.h
#IFDEF Labort
#ENDIF
#IFDEF Lderf
#ENDIF
#IFDEF Lderfc
#ENDIF
#IFDEF Lef1asc
#ENDIF
#IFDEF Lef1cmc
#ENDIF
#IFDEF Lerf
#ENDIF
#IFDEF Lerfc
#ENDIF
#IFDEF Lexit
#ENDIF
#IFDEF Lgetarg
#ENDIF
#IFDEF Lgetenv
#ENDIF
#IFDEF Liargc
#ENDIF
#IFDEF Lsignal
#ENDIF
#IFDEF Lsystem
#ENDIF
#IFDEF Lflush
#ENDIF
#IFDEF Lftell
#ENDIF
#IFDEF Lfseek
#ENDIF
#IFDEF Laccess
#ENDIF
#IFDEF Lalarm
#ENDIF
#IFDEF Lbesj0
#ENDIF
#IFDEF Lbesj1
#ENDIF
#IFDEF Lbesjn
#ENDIF
#IFDEF Lbesy0
#ENDIF
#IFDEF Lbesy1
#ENDIF
#IFDEF Lbesyn
#ENDIF
#IFDEF Lchdir
#ENDIF
#IFDEF Lchmod
#ENDIF
#IFDEF Lctime
#ENDIF
#IFDEF Ldate_y2kbuggy
#ENDIF
#IFDEF Ldate_y2kbug
#ENDIF
#IFDEF Ldbesj0
#ENDIF
#IFDEF Ldbesj1
#ENDIF
#IFDEF Ldbesjn
#ENDIF
#IFDEF Ldbesy0
#ENDIF
#IFDEF Ldbesy1
#ENDIF
#IFDEF Ldbesyn
#ENDIF
#IFDEF Ldtime
#ENDIF
#IFDEF Letime
#ENDIF
#IFDEF Lfdate
#ENDIF
#IFDEF Lfgetc
#ENDIF
#IFDEF Lfget
#ENDIF
#IFDEF Lflush1
#ENDIF
#IFDEF Lfnum
#ENDIF
#IFDEF Lfputc
#ENDIF
#IFDEF Lfput
#ENDIF
#IFDEF Lfstat
#ENDIF
#IFDEF Lgerror
#ENDIF
#IFDEF Lgetcwd
#ENDIF
#IFDEF Lgetgid
#ENDIF
#IFDEF Lgetlog
#ENDIF
#IFDEF Lgetpid
#ENDIF
#IFDEF Lgetuid
#ENDIF
#IFDEF Lgmtime
#ENDIF
#IFDEF Lhostnm
#ENDIF
#IFDEF Lidate
#ENDIF
#IFDEF Lierrno
#ENDIF
#IFDEF Lirand
#ENDIF
#IFDEF Lisatty
#ENDIF
#IFDEF Litime
#ENDIF
#IFDEF Lkill
#ENDIF
#IFDEF Llink
#ENDIF
#IFDEF Llnblnk
#ENDIF
#IFDEF Llstat
#ENDIF
#IFDEF Lltime
#ENDIF
#IFDEF Lmclock
#ENDIF
#IFDEF Lperror
#ENDIF
#IFDEF Lrand
#ENDIF
#IFDEF Lrename
#ENDIF
#IFDEF Lsecnds
#ENDIF
#IFDEF Lsecond
#ENDIF
#IFDEF Lsleep
#ENDIF
#IFDEF Lsrand
#ENDIF
#IFDEF Lstat
#ENDIF
#IFDEF Lsymlnk
#ENDIF
#IFDEF Ltime
#ENDIF
#IFDEF Lttynam
#ENDIF
#IFDEF Lumask
#ENDIF
#IFDEF Lunlink
#ENDIF
#IFDEF Lvxtidt_y2kbuggy
#ENDIF
#IFDEF Lvxtidt_y2kbug
#ENDIF
#IFDEF Lvxttim
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#UNDEF min
#UNDEF max
< stdio.h
#IFDEF KR_headers
#ELSE
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#IFDEF __cplusplus
#ENDIF
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#DEFINE log10e
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#IFDEF IEEE_drem
#ELSE
#ENDIF
#ELSE
#IFDEF IEEE_drem
#ELSE
#UNDEF abs
< math.h
#ENDIF
#ENDIF
#IFDEF IEEE_drem
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" time.h
#IFDEF MSDOS
#UNDEF USE_CLOCK
#DEFINE USE_CLOCK
#ENDIF
#IFNDEF USE_CLOCK
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
" sys/types.h
" sys/times.h
#ENDIF
#UNDEF Hz
#IFDEF CLK_TCK
#DEFINE Hz
#ELSE
#IFDEF HZ
#DEFINE Hz
#ELSE
#DEFINE Hz
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF USE_CLOCK
#IFNDEF CLOCKS_PER_SECOND
#DEFINE CLOCKS_PER_SECOND
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#DEFINE M
#DEFINE EVEN
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" time.h
#IFDEF MSDOS
#UNDEF USE_CLOCK
#DEFINE USE_CLOCK
#ENDIF
#IFNDEF USE_CLOCK
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
" sys/types.h
" sys/times.h
#ENDIF
#UNDEF Hz
#IFDEF CLK_TCK
#DEFINE Hz
#ELSE
#IFDEF HZ
#DEFINE Hz
#ELSE
#DEFINE Hz
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF USE_CLOCK
#IFNDEF CLOCKS_PER_SECOND
#DEFINE CLOCKS_PER_SECOND
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#UNDEF min
#UNDEF max
#IFNDEF KR_headers
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#IFDEF KR_headers
#ELSE
< stdlib.h
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF LONGBITS
#DEFINE LONGBITS
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" signal1.h
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF NO__STDC
#DEFINE ONEXIT
#ELSE
#IFNDEF KR_headers
#IFNDEF NO_ONEXIT
#DEFINE ONEXIT
#ENDIF
#ELSE
#IFNDEF NO_ONEXIT
#DEFINE ONEXIT
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_ONEXIT
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF LONGBITS
#DEFINE LONGBITS
#ENDIF
#IFNDEF LONG8BITS
#DEFINE LONG8BITS
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#DEFINE log10e
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#IFDEF IEEE_drem
#ELSE
#ENDIF
#ELSE
#IFDEF IEEE_drem
#ELSE
#UNDEF abs
< math.h
#ENDIF
#ENDIF
#IFDEF IEEE_drem
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF NO_OVERWRITE
< stdio.h
#UNDEF abs
#IFDEF KR_headers
#ELSE
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#DEFINE PAUSESIG
" signal1.h
#IFDEF KR_headers
#DEFINE Void
#DEFINE Int
#ELSE
#DEFINE Void
#DEFINE Int
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" signal1.h
#IFNDEF SIGIOT
#IFDEF SIGABRT
#DEFINE SIGIOT
#ENDIF
#ENDIF
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#DEFINE Int
#ELSE
#DEFINE Int
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF SIGTRAP
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF SIGTRAP
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF pdp11
#ENDIF
__E__O__F__
< stdio.h
< signal.h
#IFNDEF SIGIOT
#IFDEF SIGABRT
#DEFINE SIGIOT
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
" signal1.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
< sys/types.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF NON_UNIX_STDIO
#IFNDEF unlink
#DEFINE unlink
#ENDIF
#ELSE
#IF
" io.h
#ELSE
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NON_UNIX_STDIO
#ENDIF
#IFDEF NON_UNIX_STDIO
#ENDIF
__E__O__F__
#IFNDEF NON_UNIX_STDIO
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
< sys/types.h
< sys/stat.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE MAXERR
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#IFDEF S_IFMT
#IFDEF S_IFBLK
#ENDIF
#ELSE
#IFDEF S_ISDIR
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#DEFINE skip
#IFDEF interdata
#DEFINE SYLMX
#ENDIF
#IFDEF pdp11
#DEFINE SYLMX
#ENDIF
#IFDEF vax
#DEFINE SYLMX
#ENDIF
#IFNDEF SYLMX
#DEFINE SYLMX
#ENDIF
#DEFINE GLITCH
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE STKSZ
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#DEFINE MAXINTLENGTH
" f2c.h
#IFNDEF Allow_TYQUAD
#UNDEF longint
#DEFINE longint
#UNDEF ulongint
#DEFINE ulongint
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF SEEK_SET
#ENDIF
#IFDEF SEEK_SET
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
< string.h
#IFDEF KR_headers
#ELSE
#IF
#UNDEF abs
#UNDEF min
#UNDEF max
" io.h
#ENDIF
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#ENDIF
__E__O__F__
< ctype.h
" f2c.h
" fio.h
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fmt.h
" lio.h
" fp.h
#IFNDEF KR_headers
#ENDIF
#DEFINE isblnk
#DEFINE issep
#DEFINE isapos
#DEFINE isexp
#DEFINE issign
#DEFINE iswhit
#DEFINE SX
#DEFINE B
#DEFINE AX
#DEFINE EX
#DEFINE SG
#DEFINE WH
#IFDEF ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#DEFINE un_getc
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
#DEFINE ERR
#DEFINE GETC
#DEFINE Ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#DEFINE BUFSIZE
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE Ptr
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFDEF TYQUAD
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#UNDEF Ptr
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF OMIT_BLANK_CC
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Old_list_output
#IFDEF USE_STRLEN
#ELSE
#ENDIF
#ELSE
#IFNDEF WANT_LEAD_0
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF OMIT_BLANK_CC
#ENDIF
#IFNDEF OMIT_BLANK_CC
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE Ptr
#IFDEF Allow_TYQUAD
#ENDIF
__E__O__F__
#DEFINE _XOPEN_SOURCE
" f2c.h
" fio.h
< string.h
#IFNDEF NON_POSIX_STDIO
#IFDEF MSDOS
" io.h
#ELSE
" unistd.h
#ENDIF
#ENDIF
#IFDEF KR_headers
#IFDEF NON_ANSI_STDIO
#ENDIF
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
#IFDEF NON_ANSI_RW_MODES
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE opnerr
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#ENDIF
#IFDEF url_Adjust
#ENDIF
#IFDEF NON_POSIX_STDIO
#ELSE
#ENDIF
#IFDEF HAVE_TEMPNAM
#ELSE
#IFDEF _POSIX_SOURCE
#ELSE
#ENDIF
#ENDIF
#IFDEF NON_POSIX_STDIO
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< ctype.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fmt.h
" fp.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#DEFINE MAX_NL_CACHE
#DEFINE MAXDIM
#IFDEF KR_headers
#IFDEF ungetc
#ELSE
#DEFINE un_getc
#ENDIF
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#IFDEF ungetc
#ELSE
#DEFINE un_getc
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE GETC
#DEFINE Ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF No_Namelist_Questions
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF No_Namelist_Questions
#ENDIF
#IFNDEF No_Namelist_Comments
#ELSE
#ENDIF
#IFDEF No_Bad_Namelist_Skip
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
#IFDEF Allow_TYQUAD
#ENDIF
__E__O__F__
" f2c.h
" fio.h
< sys/types.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Pad_UDread
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFNDEF NON_UNIX_STDIO
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
< sys/types.h
< sys/stat.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFNDEF VAX
< ctype.h
#ENDIF
#IFNDEF KR_headers
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#ENDIF
" fmt.h
" fp.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFNDEF VAX
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF GOOD_SPRINTF_EXPONENT
#ELSE
#ENDIF
#IFNDEF VAX
#IFDEF Pedantic
#ELSE
#IFDEF CRAY
#ENDIF
#ENDIF
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF USE_STRLEN
#ELSE
#ENDIF
#IFNDEF WANT_LEAD_0
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
" lio.h
" string.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
" fmt.h
#IFDEF KR_headers
#ELSE
< string.h
#ENDIF
#IFDEF No_Extra_Namelist_Newlines
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< errno.h
< limits.h
" f2c.h
#IFNDEF R_OK
#DEFINE R_OK
#ENDIF
#IFNDEF W_OK
#DEFINE W_OK
#ENDIF
#IFNDEF X_OK
#DEFINE X_OK
#ENDIF
#IFNDEF F_OK
#DEFINE F_OK
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IFNDEF RETSIGTYPE
#IFDEF KR_headers
#DEFINE RETSIGTYPE
#ELSE
#DEFINE RETSIGTYPE
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
< signal.h
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IF
" f2c.h
< math.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< string.h
#ENDIF
" f2c.h
#IFNDEF CHMOD_PATH
#DEFINE CHMOD_PATH
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IF
" f2c.h
< math.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
#IF
< sys/times.h
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IF
< windows.h
#UNDEF min
#UNDEF max
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IF
#ELIF
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
#IF
< sys/times.h
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IF
< windows.h
#UNDEF min
#UNDEF max
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IF
#ELIF
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
" f2c.h
< sys/types.h
< sys/stat.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
< stddef.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFNDEF HAVE_STRERROR
#DEFINE strerror
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< stdio.h
< errno.h
" f2c.h
#IF
#IFDEF HAVE_UNISTD_H
< unistd.h
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#ELIF
< sys/param.h
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< stdio.h
#IF
< unistd.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
< signal.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< stdlib.h
#ENDIF
< sys/types.h
< sys/stat.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
< errno.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFNDEF RAND_MAX
#DEFINE RAND_MAX
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ENDIF
< stdio.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
< sys/types.h
" f2c.h
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< stdlib.h
#ENDIF
< sys/types.h
< sys/stat.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< sys/times.h
#ENDIF
< limits.h
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IFDEF _SC_CLK_TCK
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IF
< stdlib.h
#ENDIF
#IF
< unistd.h
#ENDIF
< stdio.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
< sys/stat.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< time.h
" rtltypes.h
#DEFINE SECOND_VALID
#DEFINE MINUTE_VALID
#DEFINE HOUR_VALID
#DEFINE DAY_VALID
#DEFINE MONTH_VALID
#DEFINE YEAR_VALID
#DEFINE CAUSE_RANGEFAIL
__E__O__F__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< sys/types.h
< sys/stat.h
< unistd.h
< fcntl.h
< limits.h
< errno.h
< string.h
< stdlib.h
" fileio.h
#IFNDEF PATH_MAX
#IFDEF _POSIX_PATH_MAX
#DEFINE PATH_MAX
#ELSE
#IFDEF MAXPATHLEN
#DEFINE PATH_MAX
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
< stdio.h
< stdlib.h
< errno.h
< string.h
" rtltypes.h
" iomodes.h
__E__O__F__
< stdio.h
< stdlib.h
< errno.h
< string.h
" iomodes.h
#DEFINE STDIO_TEXT_LENGTH
#DEFINE STDIN_TEXT_LENGTH
#IFNDEF STDIN_FILENO
#DEFINE STDIN_FILENO
#ENDIF
#DEFINE STDOUT_TEXT_LENGTH
#IFNDEF STDOUT_FILENO
#DEFINE STDOUT_FILENO
#ENDIF
#DEFINE STDERR_TEXT_LENGTH
#IFNDEF STDERR_FILENO
#DEFINE STDERR_FILENO
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
" powerset.h
__E__O__F__
#DEFINE MIN
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" rts.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_DELAYFAIL
#DEFINE CAUSE_NOTIMPLEMENTED
__E__O__F__
< unistd.h
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< setjmp.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< setjmp.h
" rtltypes.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< limits.h
< string.h
< ctype.h
< setjmp.h
< float.h
< math.h
< stdlib.h
#IF
< stdio.h
#ENDIF
" bitstring.h
" auxtypes.h
" iomodes.h
" format.h
" fileio.h
" ioerror.h
#DEFINE CH_BYTE_MIN
#DEFINE CH_BYTE_MAX
#DEFINE CH_UBYTE_MAX
#DEFINE CH_INT_MIN
#DEFINE CH_INT_MAX
#DEFINE CH_UINT_MAX
#DEFINE CH_LONG_MIN
#DEFINE CH_LONG_MAX
#DEFINE CH_ULONG_MAX
#IFNDEF M_LN2
#DEFINE M_LN2
#ENDIF
#IFNDEF M_LN10
#DEFINE M_LN10
#ENDIF
#DEFINE DMANTDIGS
#DEFINE FMANTDIGS
#DEFINE MAXPREC
#DEFINE LET
#DEFINE BIN
#DEFINE DEC
#DEFINE OCT
#DEFINE HEX
#DEFINE USC
#DEFINE BIL
#DEFINE SPC
#DEFINE SCS
#DEFINE IOC
#DEFINE EDC
#DEFINE CVC
#DEFINE isDEC
#DEFINE isCVC
#DEFINE isEDC
#DEFINE isIOC
#DEFINE isUSC
#DEFINE isXXX
#DEFINE CONVERSIONCODES
#DEFINE EDITCODES
#DEFINE IOCODES
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE PUT
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< time.h
#DEFINE ASSIGN_VALUE
__E__O__F__
< setjmp.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE MIN
__E__O__F__
#DEFINE MIN
#IF
#ELSE
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IF
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
< stdio.h
" rtltypes.h
" rts.h
__E__O__F__
< stdio.h
" rtltypes.h
" rts.h
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" fileio.h
__E__O__F__
< setjmp.h
< stdlib.h
< errno.h
< sys/types.h
< unistd.h
" fileio.h
#IFDEF EOF
#UNDEF EOF
#ENDIF
#DEFINE EOF
__E__O__F__
" rts.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
__E__O__F__
< stdio.h
< string.h
< stdlib.h
< setjmp.h
< signal.h
" rts.h
#DEFINE MAX_NUMBER
#DEFINE MAX_COPIES
#DEFINE MAX_PER_ITEM
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
" rtltypes.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_SENDFAIL
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
__E__O__F__
" fileio.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_BUFFINCONS
#DEFINE CAUSE_SPACEFAIL
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" fileio.h
__E__O__F__
< setjmp.h
< errno.h
< string.h
< unistd.h
< sys/types.h
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< math.h
< f2c.h
#IFDEF Labort
#ENDIF
#IFDEF Lderf
#ENDIF
#IFDEF Lderfc
#ENDIF
#IFDEF Lef1asc
#ENDIF
#IFDEF Lef1cmc
#ENDIF
#IFDEF Lerf
#ENDIF
#IFDEF Lerfc
#ENDIF
#IFDEF Lexit
#ENDIF
#IFDEF Lgetarg
#ENDIF
#IFDEF Lgetenv
#ENDIF
#IFDEF Liargc
#ENDIF
#IFDEF Lsignal
#ENDIF
#IFDEF Lsystem
#ENDIF
#IFDEF Lflush
#ENDIF
#IFDEF Lftell
#ENDIF
#IFDEF Lfseek
#ENDIF
#IFDEF Laccess
#ENDIF
#IFDEF Lalarm
#ENDIF
#IFDEF Lbesj0
#ENDIF
#IFDEF Lbesj1
#ENDIF
#IFDEF Lbesjn
#ENDIF
#IFDEF Lbesy0
#ENDIF
#IFDEF Lbesy1
#ENDIF
#IFDEF Lbesyn
#ENDIF
#IFDEF Lchdir
#ENDIF
#IFDEF Lchmod
#ENDIF
#IFDEF Lctime
#ENDIF
#IFDEF Ldate_y2kbuggy
#ENDIF
#IFDEF Ldate_y2kbug
#ENDIF
#IFDEF Ldbesj0
#ENDIF
#IFDEF Ldbesj1
#ENDIF
#IFDEF Ldbesjn
#ENDIF
#IFDEF Ldbesy0
#ENDIF
#IFDEF Ldbesy1
#ENDIF
#IFDEF Ldbesyn
#ENDIF
#IFDEF Ldtime
#ENDIF
#IFDEF Letime
#ENDIF
#IFDEF Lfdate
#ENDIF
#IFDEF Lfgetc
#ENDIF
#IFDEF Lfget
#ENDIF
#IFDEF Lflush1
#ENDIF
#IFDEF Lfnum
#ENDIF
#IFDEF Lfputc
#ENDIF
#IFDEF Lfput
#ENDIF
#IFDEF Lfstat
#ENDIF
#IFDEF Lgerror
#ENDIF
#IFDEF Lgetcwd
#ENDIF
#IFDEF Lgetgid
#ENDIF
#IFDEF Lgetlog
#ENDIF
#IFDEF Lgetpid
#ENDIF
#IFDEF Lgetuid
#ENDIF
#IFDEF Lgmtime
#ENDIF
#IFDEF Lhostnm
#ENDIF
#IFDEF Lidate
#ENDIF
#IFDEF Lierrno
#ENDIF
#IFDEF Lirand
#ENDIF
#IFDEF Lisatty
#ENDIF
#IFDEF Litime
#ENDIF
#IFDEF Lkill
#ENDIF
#IFDEF Llink
#ENDIF
#IFDEF Llnblnk
#ENDIF
#IFDEF Llstat
#ENDIF
#IFDEF Lltime
#ENDIF
#IFDEF Lmclock
#ENDIF
#IFDEF Lperror
#ENDIF
#IFDEF Lrand
#ENDIF
#IFDEF Lrename
#ENDIF
#IFDEF Lsecnds
#ENDIF
#IFDEF Lsecond
#ENDIF
#IFDEF Lsleep
#ENDIF
#IFDEF Lsrand
#ENDIF
#IFDEF Lstat
#ENDIF
#IFDEF Lsymlnk
#ENDIF
#IFDEF Ltime
#ENDIF
#IFDEF Lttynam
#ENDIF
#IFDEF Lumask
#ENDIF
#IFDEF Lunlink
#ENDIF
#IFDEF Lvxtidt_y2kbuggy
#ENDIF
#IFDEF Lvxtidt_y2kbug
#ENDIF
#IFDEF Lvxttim
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#UNDEF min
#UNDEF max
< stdio.h
#IFDEF KR_headers
#ELSE
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#IFDEF __cplusplus
#ENDIF
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#DEFINE log10e
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#IFDEF IEEE_drem
#ELSE
#ENDIF
#ELSE
#IFDEF IEEE_drem
#ELSE
#UNDEF abs
< math.h
#ENDIF
#ENDIF
#IFDEF IEEE_drem
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" time.h
#IFDEF MSDOS
#UNDEF USE_CLOCK
#DEFINE USE_CLOCK
#ENDIF
#IFNDEF USE_CLOCK
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
" sys/types.h
" sys/times.h
#ENDIF
#UNDEF Hz
#IFDEF CLK_TCK
#DEFINE Hz
#ELSE
#IFDEF HZ
#DEFINE Hz
#ELSE
#DEFINE Hz
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF USE_CLOCK
#IFNDEF CLOCKS_PER_SECOND
#DEFINE CLOCKS_PER_SECOND
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#DEFINE M
#DEFINE EVEN
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" time.h
#IFDEF MSDOS
#UNDEF USE_CLOCK
#DEFINE USE_CLOCK
#ENDIF
#IFNDEF USE_CLOCK
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
" sys/types.h
" sys/times.h
#ENDIF
#UNDEF Hz
#IFDEF CLK_TCK
#DEFINE Hz
#ELSE
#IFDEF HZ
#DEFINE Hz
#ELSE
#DEFINE Hz
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF USE_CLOCK
#IFNDEF CLOCKS_PER_SECOND
#DEFINE CLOCKS_PER_SECOND
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#UNDEF min
#UNDEF max
#IFNDEF KR_headers
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#UNDEF abs
#IFDEF KR_headers
#ELSE
< stdlib.h
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF LONGBITS
#DEFINE LONGBITS
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" signal1.h
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF NO__STDC
#DEFINE ONEXIT
#ELSE
#IFNDEF KR_headers
#IFNDEF NO_ONEXIT
#DEFINE ONEXIT
#ENDIF
#ELSE
#IFNDEF NO_ONEXIT
#DEFINE ONEXIT
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_ONEXIT
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF LONGBITS
#DEFINE LONGBITS
#ENDIF
#IFNDEF LONG8BITS
#DEFINE LONG8BITS
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#DEFINE log10e
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#IFDEF IEEE_drem
#ELSE
#ENDIF
#ELSE
#IFDEF IEEE_drem
#ELSE
#UNDEF abs
< math.h
#ENDIF
#ENDIF
#IFDEF IEEE_drem
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
< math.h
#ENDIF
__E__O__F__
" f2c.h
#IFNDEF NO_OVERWRITE
< stdio.h
#UNDEF abs
#IFDEF KR_headers
#ELSE
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
#IFNDEF NO_OVERWRITE
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#DEFINE PAUSESIG
" signal1.h
#IFDEF KR_headers
#DEFINE Void
#DEFINE Int
#ELSE
#DEFINE Void
#DEFINE Int
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< stdio.h
" signal1.h
#IFNDEF SIGIOT
#IFDEF SIGABRT
#DEFINE SIGIOT
#ENDIF
#ENDIF
#IFNDEF KR_headers
#UNDEF VOID
< stdlib.h
#ENDIF
#IFNDEF VOID
#DEFINE VOID
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#DEFINE Int
#ELSE
#DEFINE Int
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF SIGTRAP
#ENDIF
#IFDEF __cplusplus
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF SIGTRAP
#ENDIF
#IFDEF SIGQUIT
#ENDIF
#IFDEF pdp11
#ENDIF
__E__O__F__
< stdio.h
< signal.h
#IFNDEF SIGIOT
#IFDEF SIGABRT
#DEFINE SIGIOT
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
< stdlib.h
#IFDEF __cplusplus
#ENDIF
#ENDIF
#IFDEF SIGIOT
#ENDIF
#IFDEF NO_ONEXIT
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
" signal1.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
" math.h
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
< sys/types.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#IFDEF NON_UNIX_STDIO
#IFNDEF unlink
#DEFINE unlink
#ENDIF
#ELSE
#IF
" io.h
#ELSE
#IFDEF __cplusplus
#ELSE
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
#IFDEF __cplusplus
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF __cplusplus
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NON_UNIX_STDIO
#ENDIF
#IFDEF NON_UNIX_STDIO
#ENDIF
__E__O__F__
#IFNDEF NON_UNIX_STDIO
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
< sys/types.h
< sys/stat.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE MAXERR
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#IFDEF S_IFMT
#IFDEF S_IFBLK
#ENDIF
#ELSE
#IFDEF S_ISDIR
#ELSE
#ENDIF
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#DEFINE skip
#IFDEF interdata
#DEFINE SYLMX
#ENDIF
#IFDEF pdp11
#DEFINE SYLMX
#ENDIF
#IFDEF vax
#DEFINE SYLMX
#ENDIF
#IFNDEF SYLMX
#DEFINE SYLMX
#ENDIF
#DEFINE GLITCH
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE STKSZ
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#DEFINE MAXINTLENGTH
" f2c.h
#IFNDEF Allow_TYQUAD
#UNDEF longint
#DEFINE longint
#UNDEF ulongint
#DEFINE ulongint
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF SEEK_SET
#ENDIF
#IFDEF SEEK_SET
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
< string.h
#IFDEF KR_headers
#ELSE
#IF
#UNDEF abs
#UNDEF min
#UNDEF max
" io.h
#ENDIF
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#ENDIF
__E__O__F__
< ctype.h
" f2c.h
" fio.h
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fmt.h
" lio.h
" fp.h
#IFNDEF KR_headers
#ENDIF
#DEFINE isblnk
#DEFINE issep
#DEFINE isapos
#DEFINE isexp
#DEFINE issign
#DEFINE iswhit
#DEFINE SX
#DEFINE B
#DEFINE AX
#DEFINE EX
#DEFINE SG
#DEFINE WH
#IFDEF ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#DEFINE un_getc
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
#DEFINE ERR
#DEFINE GETC
#DEFINE Ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#DEFINE BUFSIZE
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFNDEF F8X_NML_ELIDE_QUOTES
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE Ptr
#IFNDEF ALLOW_FLOAT_IN_INTEGER_LIST_INPUT
#ENDIF
#IFDEF TYQUAD
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#UNDEF Ptr
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF OMIT_BLANK_CC
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Old_list_output
#IFDEF USE_STRLEN
#ELSE
#ENDIF
#ELSE
#IFNDEF WANT_LEAD_0
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF OMIT_BLANK_CC
#ENDIF
#IFNDEF OMIT_BLANK_CC
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE Ptr
#IFDEF Allow_TYQUAD
#ENDIF
__E__O__F__
#DEFINE _XOPEN_SOURCE
" f2c.h
" fio.h
< string.h
#IFNDEF NON_POSIX_STDIO
#IFDEF MSDOS
" io.h
#ELSE
" unistd.h
#ENDIF
#ENDIF
#IFDEF KR_headers
#IFDEF NON_ANSI_STDIO
#ENDIF
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
#IFDEF NON_ANSI_RW_MODES
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE opnerr
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#ENDIF
#IFDEF NON_UNIX_STDIO
#ELSE
#ENDIF
#IFDEF url_Adjust
#ENDIF
#IFDEF NON_POSIX_STDIO
#ELSE
#ENDIF
#IFDEF HAVE_TEMPNAM
#ELSE
#IFDEF _POSIX_SOURCE
#ELSE
#ENDIF
#ENDIF
#IFDEF NON_POSIX_STDIO
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< ctype.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
#ENDIF
" fmt.h
" fp.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#DEFINE MAX_NL_CACHE
#DEFINE MAXDIM
#IFDEF KR_headers
#IFDEF ungetc
#ELSE
#DEFINE un_getc
#ENDIF
#ELSE
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#IFDEF ungetc
#ELSE
#DEFINE un_getc
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#DEFINE GETC
#DEFINE Ungetc
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF No_Namelist_Questions
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF No_Namelist_Questions
#ENDIF
#IFNDEF No_Namelist_Comments
#ELSE
#ENDIF
#IFDEF No_Bad_Namelist_Skip
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
#IFDEF Allow_TYQUAD
#ENDIF
__E__O__F__
" f2c.h
" fio.h
< sys/types.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Pad_UDread
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFNDEF NON_UNIX_STDIO
#DEFINE _INCLUDE_POSIX_SOURCE
#DEFINE _INCLUDE_XOPEN_SOURCE
< sys/types.h
< sys/stat.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF NON_UNIX_STDIO
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
__E__O__F__
" f2c.h
" fio.h
#IFNDEF VAX
< ctype.h
#ENDIF
#IFNDEF KR_headers
#UNDEF abs
#UNDEF min
#UNDEF max
< stdlib.h
< string.h
#ENDIF
" fmt.h
" fp.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFNDEF VAX
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF GOOD_SPRINTF_EXPONENT
#ELSE
#ENDIF
#IFNDEF VAX
#IFDEF Pedantic
#ELSE
#IFDEF CRAY
#ENDIF
#ENDIF
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFNDEF VAX
#ENDIF
#IFDEF USE_STRLEN
#ELSE
#ENDIF
#IFNDEF WANT_LEAD_0
#ENDIF
#IFDEF WANT_LEAD_0
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF Allow_TYQUAD
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" fmt.h
" lio.h
" string.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF ALWAYS_FLUSH
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
" fio.h
" lio.h
" fmt.h
#IFDEF KR_headers
#ELSE
< string.h
#ENDIF
#IFDEF No_Extra_Namelist_Newlines
#ENDIF
__E__O__F__
< stdio.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< errno.h
< limits.h
" f2c.h
#IFNDEF R_OK
#DEFINE R_OK
#ENDIF
#IFNDEF W_OK
#DEFINE W_OK
#ENDIF
#IFNDEF X_OK
#DEFINE X_OK
#ENDIF
#IFNDEF F_OK
#DEFINE F_OK
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IFNDEF RETSIGTYPE
#IFDEF KR_headers
#DEFINE RETSIGTYPE
#ELSE
#DEFINE RETSIGTYPE
#ENDIF
#ENDIF
#IFDEF KR_headers
#ELSE
< signal.h
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IF
" f2c.h
< math.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< string.h
#ENDIF
" f2c.h
#IFNDEF CHMOD_PATH
#DEFINE CHMOD_PATH
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IF
" f2c.h
< math.h
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
#IF
< sys/times.h
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IF
< windows.h
#UNDEF min
#UNDEF max
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IF
#ELIF
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
#IF
< sys/times.h
#ENDIF
#IF
< sys/param.h
#ENDIF
#IF
< sys/time.h
< sys/resource.h
#ENDIF
#IF
< windows.h
#UNDEF min
#UNDEF max
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELIF
#IFDEF HAVE_GETRUSAGE
#ELSE
#IF
#ELIF
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
" f2c.h
< sys/types.h
< sys/stat.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
< stddef.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFNDEF HAVE_STRERROR
#DEFINE strerror
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< stdio.h
< errno.h
" f2c.h
#IF
#IFDEF HAVE_UNISTD_H
< unistd.h
#ELSE
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
#ELIF
< sys/param.h
#IFDEF KR_headers
#ELSE
#ENDIF
#ELSE
#IFDEF KR_headers
#ELSE
#ENDIF
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
< stdio.h
#IF
< unistd.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
< sys/types.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
" f2c.h
" fio.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
< signal.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< stdlib.h
#ENDIF
< sys/types.h
< sys/stat.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
< errno.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFNDEF RAND_MAX
#DEFINE RAND_MAX
#ENDIF
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
#IF
< stdlib.h
#ENDIF
< stdio.h
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
< sys/types.h
" f2c.h
__E__O__F__
" f2c.h
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< unistd.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< stdlib.h
#ENDIF
< sys/types.h
< sys/stat.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< sys/times.h
#ENDIF
< limits.h
#IF
< unistd.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#IFDEF _SC_CLK_TCK
#ELIF
#ELIF
#ELIF
#ELSE
#ERROR Dont
#ENDIF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
#IF
< stdlib.h
#ENDIF
#IF
< unistd.h
#ENDIF
< stdio.h
#IF
< string.h
#ELSE
< strings.h
#ENDIF
< errno.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< sys/types.h
< sys/stat.h
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
#IF
< stdlib.h
#ELSE
< stdio.h
#ENDIF
#IF
< unistd.h
#ENDIF
< errno.h
#IF
< sys/param.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
#IFDEF HAVE_CONFIG_H
" config.h
#ENDIF
< stdio.h
#IF
< sys/time.h
< time.h
#ELSE
#IF
< sys/time.h
#ELSE
< time.h
#ENDIF
#ENDIF
#IF
< string.h
#ELSE
< strings.h
#ENDIF
" f2c.h
#IFDEF KR_headers
#ELSE
#ENDIF
__E__O__F__
< time.h
" rtltypes.h
#DEFINE SECOND_VALID
#DEFINE MINUTE_VALID
#DEFINE HOUR_VALID
#DEFINE DAY_VALID
#DEFINE MONTH_VALID
#DEFINE YEAR_VALID
#DEFINE CAUSE_RANGEFAIL
__E__O__F__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< sys/types.h
< sys/stat.h
< unistd.h
< fcntl.h
< limits.h
< errno.h
< string.h
< stdlib.h
" fileio.h
#IFNDEF PATH_MAX
#IFDEF _POSIX_PATH_MAX
#DEFINE PATH_MAX
#ELSE
#IFDEF MAXPATHLEN
#DEFINE PATH_MAX
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
< stdio.h
< stdlib.h
< errno.h
< string.h
" rtltypes.h
" iomodes.h
__E__O__F__
< stdio.h
< stdlib.h
< errno.h
< string.h
" iomodes.h
#DEFINE STDIO_TEXT_LENGTH
#DEFINE STDIN_TEXT_LENGTH
#IFNDEF STDIN_FILENO
#DEFINE STDIN_FILENO
#ENDIF
#DEFINE STDOUT_TEXT_LENGTH
#IFNDEF STDOUT_FILENO
#DEFINE STDOUT_FILENO
#ENDIF
#DEFINE STDERR_TEXT_LENGTH
#IFNDEF STDERR_FILENO
#DEFINE STDERR_FILENO
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
" powerset.h
__E__O__F__
#DEFINE MIN
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" rts.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_DELAYFAIL
#DEFINE CAUSE_NOTIMPLEMENTED
__E__O__F__
< unistd.h
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< setjmp.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< setjmp.h
" rtltypes.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< limits.h
< string.h
< ctype.h
< setjmp.h
< float.h
< math.h
< stdlib.h
#IF
< stdio.h
#ENDIF
" bitstring.h
" auxtypes.h
" iomodes.h
" format.h
" fileio.h
" ioerror.h
#DEFINE CH_BYTE_MIN
#DEFINE CH_BYTE_MAX
#DEFINE CH_UBYTE_MAX
#DEFINE CH_INT_MIN
#DEFINE CH_INT_MAX
#DEFINE CH_UINT_MAX
#DEFINE CH_LONG_MIN
#DEFINE CH_LONG_MAX
#DEFINE CH_ULONG_MAX
#IFNDEF M_LN2
#DEFINE M_LN2
#ENDIF
#IFNDEF M_LN10
#DEFINE M_LN10
#ENDIF
#DEFINE DMANTDIGS
#DEFINE FMANTDIGS
#DEFINE MAXPREC
#DEFINE LET
#DEFINE BIN
#DEFINE DEC
#DEFINE OCT
#DEFINE HEX
#DEFINE USC
#DEFINE BIL
#DEFINE SPC
#DEFINE SCS
#DEFINE IOC
#DEFINE EDC
#DEFINE CVC
#DEFINE isDEC
#DEFINE isCVC
#DEFINE isEDC
#DEFINE isIOC
#DEFINE isUSC
#DEFINE isXXX
#DEFINE CONVERSIONCODES
#DEFINE EDITCODES
#DEFINE IOCODES
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE PUT
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< time.h
#DEFINE ASSIGN_VALUE
__E__O__F__
< setjmp.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE MIN
__E__O__F__
#DEFINE MIN
#IF
#ELSE
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IF
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
< stdio.h
" rtltypes.h
" rts.h
__E__O__F__
< stdio.h
" rtltypes.h
" rts.h
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" fileio.h
__E__O__F__
< setjmp.h
< stdlib.h
< errno.h
< sys/types.h
< unistd.h
" fileio.h
#IFDEF EOF
#UNDEF EOF
#ENDIF
#DEFINE EOF
__E__O__F__
" rts.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
__E__O__F__
< stdio.h
< string.h
< stdlib.h
< setjmp.h
< signal.h
" rts.h
#DEFINE MAX_NUMBER
#DEFINE MAX_COPIES
#DEFINE MAX_PER_ITEM
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
" rtltypes.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_SENDFAIL
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
__E__O__F__
" fileio.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_BUFFINCONS
#DEFINE CAUSE_SPACEFAIL
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" fileio.h
__E__O__F__
< setjmp.h
< errno.h
< string.h
< unistd.h
< sys/types.h
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< time.h
" rtltypes.h
#DEFINE SECOND_VALID
#DEFINE MINUTE_VALID
#DEFINE HOUR_VALID
#DEFINE DAY_VALID
#DEFINE MONTH_VALID
#DEFINE YEAR_VALID
#DEFINE CAUSE_RANGEFAIL
__E__O__F__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< sys/types.h
< sys/stat.h
< unistd.h
< fcntl.h
< limits.h
< errno.h
< string.h
< stdlib.h
" fileio.h
#IFNDEF PATH_MAX
#IFDEF _POSIX_PATH_MAX
#DEFINE PATH_MAX
#ELSE
#IFDEF MAXPATHLEN
#DEFINE PATH_MAX
#ENDIF
#ENDIF
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
< stdio.h
< stdlib.h
< errno.h
< string.h
" rtltypes.h
" iomodes.h
__E__O__F__
< stdio.h
< stdlib.h
< errno.h
< string.h
" iomodes.h
#DEFINE STDIO_TEXT_LENGTH
#DEFINE STDIN_TEXT_LENGTH
#IFNDEF STDIN_FILENO
#DEFINE STDIN_FILENO
#ENDIF
#DEFINE STDOUT_TEXT_LENGTH
#IFNDEF STDOUT_FILENO
#DEFINE STDOUT_FILENO
#ENDIF
#DEFINE STDERR_TEXT_LENGTH
#IFNDEF STDERR_FILENO
#DEFINE STDERR_FILENO
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
" powerset.h
__E__O__F__
#DEFINE MIN
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" rts.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_DELAYFAIL
#DEFINE CAUSE_NOTIMPLEMENTED
__E__O__F__
< unistd.h
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< setjmp.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< setjmp.h
" rtltypes.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IFNDEF USE_CHARS
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< limits.h
< string.h
< ctype.h
< setjmp.h
< float.h
< math.h
< stdlib.h
#IF
< stdio.h
#ENDIF
" bitstring.h
" auxtypes.h
" iomodes.h
" format.h
" fileio.h
" ioerror.h
#DEFINE CH_BYTE_MIN
#DEFINE CH_BYTE_MAX
#DEFINE CH_UBYTE_MAX
#DEFINE CH_INT_MIN
#DEFINE CH_INT_MAX
#DEFINE CH_UINT_MAX
#DEFINE CH_LONG_MIN
#DEFINE CH_LONG_MAX
#DEFINE CH_ULONG_MAX
#IFNDEF M_LN2
#DEFINE M_LN2
#ENDIF
#IFNDEF M_LN10
#DEFINE M_LN10
#ENDIF
#DEFINE DMANTDIGS
#DEFINE FMANTDIGS
#DEFINE MAXPREC
#DEFINE LET
#DEFINE BIN
#DEFINE DEC
#DEFINE OCT
#DEFINE HEX
#DEFINE USC
#DEFINE BIL
#DEFINE SPC
#DEFINE SCS
#DEFINE IOC
#DEFINE EDC
#DEFINE CVC
#DEFINE isDEC
#DEFINE isCVC
#DEFINE isEDC
#DEFINE isIOC
#DEFINE isUSC
#DEFINE isXXX
#DEFINE CONVERSIONCODES
#DEFINE EDITCODES
#DEFINE IOCODES
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#DEFINE PUT
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
#IF
#ENDIF
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
< time.h
#DEFINE ASSIGN_VALUE
__E__O__F__
< setjmp.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE MIN
__E__O__F__
#DEFINE MIN
#IF
#ELSE
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
#IF
#ENDIF
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
< stdio.h
" rtltypes.h
" rts.h
__E__O__F__
< stdio.h
" rtltypes.h
" rts.h
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" fileio.h
__E__O__F__
< setjmp.h
< stdlib.h
< errno.h
< sys/types.h
< unistd.h
" fileio.h
#IFDEF EOF
#UNDEF EOF
#ENDIF
#DEFINE EOF
__E__O__F__
" rts.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
__E__O__F__
< stdio.h
< string.h
< stdlib.h
< setjmp.h
< signal.h
" rts.h
#DEFINE MAX_NUMBER
#DEFINE MAX_COPIES
#DEFINE MAX_PER_ITEM
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
" rtltypes.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_SENDFAIL
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdlib.h
" rtltypes.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
< stdlib.h
< setjmp.h
__E__O__F__
" fileio.h
__E__O__F__
" rtltypes.h
" rts.h
#DEFINE CAUSE_BUFFINCONS
#DEFINE CAUSE_SPACEFAIL
__E__O__F__
" rtltypes.h
" rts.h
__E__O__F__
" fileio.h
__E__O__F__
< setjmp.h
< errno.h
< string.h
< unistd.h
< sys/types.h
" fileio.h
__E__O__F__
#DEFINE __CHILL_LIB__
< stdio.h
" powerset.h
__E__O__F__
" tconfig.h
" runtime.h
" typedstream.h
" encoding.h
#IFDEF HAVE_STDLIB_H
< stdlib.h
#ENDIF
#DEFINE ROUND
#DEFINE PTR2LONG
#DEFINE LONG2PTR
__E__O__F__
" runtime.h
" sarray.h
#DEFINE CLASS_HASH_SIZE
#DEFINE CLASSOF
__E__O__F__
" tconfig.h
" objc-api.h
" encoding.h
#DEFINE MAX
#DEFINE MIN
#DEFINE ROUND
#DEFINE TREE_CODE
#DEFINE TREE_TYPE
#DEFINE RECORD_TYPE
#DEFINE UNION_TYPE
#DEFINE QUAL_UNION_TYPE
#DEFINE ARRAY_TYPE
#DEFINE TYPE_FIELDS
#DEFINE DECL_MODE
#DEFINE DFmode
#DEFINE get_inner_array_type
#IFDEF STRUCTURE_SIZE_BOUNDARY
#ENDIF
#IF
#ENDIF
#IFDEF BIGGEST_FIELD_ALIGNMENT
#ENDIF
#IFDEF ADJUST_FIELD_ALIGN
#ENDIF
#IFNDEF PCC_BITFIELD_TYPE_MATTERS
#ELSE
#IF
#ENDIF
#ENDIF
#IFDEF ROUND_TYPE_ALIGN
#ELSE
#ENDIF
#IFDEF ROUND_TYPE_SIZE
#ELSE
#ENDIF
__E__O__F__
" tconfig.h
" objc.h
" encoding.h
< assert.h
< string.h
#IF
< gc.h
#IF
#DEFINE LOGWL
#DEFINE modWORDSZ
#ENDIF
#IF
#DEFINE LOGWL
#DEFINE modWORDSZ
#ENDIF
#DEFINE divWORDSZ
< gc_typed.h
#DEFINE ROUND
#DEFINE SET_BIT_FOR_OFFSET
#DEFINE DEBUG
#IFDEF DEBUG
#ENDIF
#ELSE
#ENDIF
__E__O__F__
" assert.h
" hash.h
" runtime.h
#DEFINE FULLNESS
#DEFINE EXPANSION
#IFDEF DEBUG
#ENDIF
__E__O__F__
" runtime.h
#DEFINE OBJC_VERSION
#DEFINE PROTOCOL_VERSION
#IFDEF DEBUG
#ENDIF
#IFDEF DEBUG
#ENDIF
#IF
#ENDIF
__E__O__F__
< windows.h
__E__O__F__
#DEFINE __USE_FIXED_PROTOTYPES__
< stdlib.h
" runtime.h
#IF
< gc.h
#ELSE
#ENDIF
__E__O__F__
" runtime.h
__E__O__F__
" tconfig.h
" objc.h
" runtime.h
#IF
< gc.h
#ENDIF
#IF
#ELSE
#ENDIF
__E__O__F__
" sarray.h
" runtime.h
< stdio.h
" assert.h
#IFDEF OBJC_SPARSE2
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF __alpha__
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF PRECOMPUTE_SELECTORS
#IFDEF OBJC_SPARSE3
#ENDIF
#ELSE
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE3
#ENDIF
#IFDEF OBJC_SPARSE3
#ELSE
#ENDIF
__E__O__F__
" runtime.h
" sarray.h
" encoding.h
#DEFINE SELECTOR_HASH_SIZE
__E__O__F__
" tconfig.h
" runtime.h
" sarray.h
" encoding.h
" runtime-info.h
#DEFINE gen_rtx
#DEFINE gen_rtx_MEM
#DEFINE rtx
#IF
#DEFINE INVISIBLE_STRUCT_RETURN
#ELSE
#DEFINE INVISIBLE_STRUCT_RETURN
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF OBJC_MAX_STRUCT_BY_VALUE
#ENDIF
#IF
#ELSE
#ENDIF
#IF
#ELSE
#ENDIF
#IFDEF OBJC_SPARSE2
#ELSE
#ENDIF
__E__O__F__
< stdlib.h
" runtime.h
__E__O__F__
< pthread.h
< thr.h
" runtime.h
__E__O__F__
< pthread.h
< objc/thr.h
" runtime.h
__E__O__F__
< stdlib.h
< sys/types.h
< sys/sysmp.h
< sys/prctl.h
< ulocks.h
< objc/thr.h
" runtime.h
__E__O__F__
< mach/mach.h
< mach/cthreads.h
< objc/thr.h
" runtime.h
__E__O__F__
< objc/thr.h
" runtime.h
#DEFINE INCL_DOSSEMAPHORES
#DEFINE INCL_DOSPROCESS
#DEFINE SEL
#DEFINE BOOL
#DEFINE id
< os2.h
#UNDEF id
#UNDEF SEL
#UNDEF BOOL
< stdlib.h
__E__O__F__
< objc/thr.h
" runtime.h
< pthread.h
__E__O__F__
< pcthread.h
< objc/thr.h
" runtime.h
__E__O__F__
< objc/thr.h
" runtime.h
__E__O__F__
< objc/thr.h
" runtime.h
< thread.h
< synch.h
< errno.h
__E__O__F__
< objc/thr.h
" runtime.h
__E__O__F__
< objc/thr.h
" runtime.h
#IFNDEF __OBJC__
#DEFINE __OBJC__
#ENDIF
< windows.h
__E__O__F__
